openapi: 3.0.3
info:
  title: PandaDoc Public API
  description: |
    PandaDoc API spans a broad range of functionality to help you build incredible documents automation experiences inside your product.

    PandaDoc API is organized around REST. Our API has predictable resource-oriented URLs and uses standard HTTP response codes, authentication, and verbs.

    ## Getting started

    You can start testing PandaDoc API with a sandbox key on our [Enterprise](https://www.pandadoc.com/pricing/) plan, either active or in trial.

    Generate your [sandbox key](https://developers.pandadoc.com/reference/sandbox-key) on the Developer Dashboard with predefined [rate limits](https://developers.pandadoc.com/reference/limits). Or contact our solutions expert if you work with high-transaction volumes.

    ## Guides

    If you’re just getting started with PandaDoc, you may want to jump straight into one of our [getting started guides](https://developers.pandadoc.com/docs/getting-started) for the feature you’re most interested in, whether that’s:

    - [Create from template](https://developers.pandadoc.com/docs/create-send-document),
    - [Upload and send a local PDF](https://developers.pandadoc.com/docs/upload-and-send-a-local-pdf),
    - or [Listening for changes in document status](https://developers.pandadoc.com/docs/listen-document-status-changes).

    We also recommend you to discover our dynamic content generation on a fly: [Create from a template with content placeholder](https://developers.pandadoc.com/docs/create-with-content-placeholders-from-template).
  termsOfService: 'https://www.pandadoc.com/master-services-agreement/'
  contact:
    name: PandaDoc API Support
    url: 'https://developers.pandadoc.com/'
    email: api-track@pandadoc.com
  license:
    name: MIT
    url: 'https://github.com/PandaDoc/pandadoc-openapi-specification/blob/main/LICENSE'
  x-marketplace-tags:
    - name: Featured
      description: Featured APIs are hand-picked for display purposes.
  version: 7.4.0
servers:
  - url: 'https://api.pandadoc.com'
    description: Public API
paths:
  /oauth2/access_token:
    post:
      summary: Create/Refresh Access Token
      operationId: accessToken
      description: "Create or refresh an access token to make requests on behalf of a user. This endpoint is used to obtain an `access_token` and `refresh_token` for the first time, and to refresh the `access_token` when it expires.\n\n> Before you begin, you need to [create an application](https://developers.pandadoc.com/reference/authentication-process) in the Developer Dashboard to obtain a `client_id` and `client_secret`.\n\n## Create Access Token\nRequests to PandaDoc API with the returned `access_token` can now be made on the user's behalf. Include `access_token` in every request header as follows: `Authorization: Bearer <put your access_token here>`. Each token comes with an expiration date (in seconds).\n\n> \U0001F6A7 Invalid Grant?\n> \n> If you receive an `invalid grant` response it is likely because you used the same `code` more than once from the [Authorize a PandaDoc User](ref:authorize-a-user) step above. The `code` parameter is generated for one-time use. A new `code` value must be generated if you wish to change API users, permissions, or simply generate a new `code` value for the same PandaDoc user.\n\n> \U0001F4D8 expires_in\n> \n> `expires_in` is based in seconds. Currently, a token expires in 31535999 seconds = 1 year.\n\n## Refresh Access Token\nEventually, `access_token` expires and accessing an API method returns **401 unauthorized**. Your application needs to refresh the OAuth2 token with the stored `refresh_token` returned when initially creating an access token.\n\nOnce refreshed, calls on behalf of the originally authorized user can resume immediately. Use the newly returned `access_token` for all future API requests.\n\n> \U0001F6A7 Invalid Grant?\n> \n> If you receive an `invalid grant` response, it is likely because your `refresh_token` is invalid.\n"
      tags:
        - OAuth 2.0 Authentication
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OAuth2CreateAccessTokenRequest'
                - $ref: '#/components/schemas/OAuth2RefreshAccessTokenRequest'
            examples:
              Create Access Token:
                value:
                  grant_type: authorization_code
                  client_id: 8f0a1b2c3d4e5f6g7h8i9j
                  client_secret: k1l2m3n4o5p6q7r8s9t0u
                  code: v9w8x7y6z5a4b3c2d1e0f
                  scope: read+write
              Refresh Access Token:
                value:
                  grant_type: refresh_token
                  client_id: 89b2d1ea5f7c3b0a19456
                  client_secret: e7c390f1ba8d2a6b57910c4d3b2a1e0f9d8c7b6a
                  refresh_token: 9a4b5c6d7e8f0g1h2i3j4k5l6m7n8o9p0q1r2s3t
                  scope: read+write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2AccessTokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: unsupported_grant_type
  /public/v1/documents:
    get:
      tags:
        - Documents
      summary: List Documents
      description: |
        This endpoint will let you list and search for the documents.
        ### [Here](https://developers.pandadoc.com/docs/list-search-documents-api) you can find how to filter, search and order documents.
      operationId: listDocuments
      parameters:
        - name: template_id
          in: query
          schema:
            type: string
          description: Filters by parent template. This Parameter can't be used with form_id.
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: form_id
          in: query
          schema:
            type: string
          description: Filters by parent form. This parameter can't be used with template_id.
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: folder_uuid
          in: query
          schema:
            type: string
          description: Filters by the folder where the documents are stored.
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: contact_id
          in: query
          schema:
            type: string
          description: Filters by recipient or approver with this 'contact_id'.
          example: 9FeAY2NB3C9qDdtQRb4tTL
        - name: count
          in: query
          schema:
            type: integer
          description: 'Limits the size of the response. Default is 50 documents, maximum is 100 documents.'
          example: 50
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
          description: Paginates the search result. Increase value to get the next page of results.
          example: 1
        - name: order_by
          in: query
          schema:
            $ref: '#/components/schemas/DocumentOrderingFieldsEnum'
          description: Defines the sorting of the result. Use `date_created` for ASC and `-date_created` for DESC sorting.
          examples:
            Default order by date_status_changed:
              value: date_status_changed
        - name: created_from
          in: query
          schema:
            type: string
            format: datetime
          description: Limits results to the documents with the `date_created` greater than or equal to this value.
          example: '2024-10-27T15:22:23.132757Z'
        - name: created_to
          in: query
          schema:
            type: string
            format: datetime
          description: Limits results to the documents with the `date_created` less than this value.
          example: '2024-10-27T15:22:23.132757Z'
        - name: deleted
          in: query
          schema:
            type: boolean
          description: Returns only the deleted documents.
        - name: id
          in: query
          schema:
            type: string
            description: Searches for document by it's id.
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: completed_from
          in: query
          schema:
            type: string
            format: datetime
          example: '2024-10-27T15:22:23.132757Z'
          description: Limits results to the documents with the `date_completed` greater than or equal to this value.
        - name: completed_to
          in: query
          schema:
            type: string
            format: datetime
          description: Limits results to the documents with the `date_completed` less than this value.
          example: '2024-10-27T15:22:23.132757Z'
        - name: membership_id
          in: query
          schema:
            type: string
          description: Filter documents by the owner's 'membership_id'.
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: metadata
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          description: 'Filters documents by metadata. Pass metadata in the format of `metadata_{metadata-key}={metadata-value}` such as `metadata_opportunity_id=2181432`. The `metadata_` prefix is always required.'
          example:
            - metadata_opportunity_id=2181432
            - metadata_custom_key=custom_value
        - name: modified_from
          in: query
          schema:
            type: string
            format: datetime
          description: Limits results to the documents with the `date_modified` greater than or equal to this value.
          example: '2024-10-27T15:22:23.132757Z'
        - name: modified_to
          in: query
          schema:
            type: string
            format: datetime
          description: Limits results to the documents with the `date_modified` less than this value.
          example: '2024-10-27T15:22:23.132757Z'
        - name: q
          in: query
          schema:
            type: string
          description: Filters documents by name or reference number (stored on the template level).
          example: Sample Document
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/DocumentStatusRequestEnum'
          description: |
            Filters documents by the status.
              * 0: document.draft
              * 1: document.sent
              * 2: document.completed
              * 3: document.uploaded
              * 4: document.error
              * 5: document.viewed
              * 6: document.waiting_approval
              * 7: document.approved
              * 8: document.rejected
              * 9: document.waiting_pay
              * 10: document.paid
              * 11: document.voided
              * 12: document.declined
              * 13: document.external_review
        - name: status__ne
          in: query
          schema:
            $ref: '#/components/schemas/DocumentStatusRequestEnum'
          description: |
            Exludes documents with this status.
              * 0: document.draft
              * 1: document.sent
              * 2: document.completed
              * 3: document.uploaded
              * 4: document.error
              * 5: document.viewed
              * 6: document.waiting_approval
              * 7: document.approved
              * 8: document.rejected
              * 9: document.waiting_pay
              * 10: document.paid
              * 11: document.voided
              * 12: document.declined
              * 13: document.external_review
        - name: tag
          in: query
          schema:
            type: string
          description: Filters documents by tag.
          example: tag_1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListResponse'
              examples:
                Default order by date_status_changed:
                  value:
                    results:
                      - id: XjV64iXRJMerjSpk428QSF
                        name: Sample Document
                        status: document.draft
                        date_created: '2024-07-02T16:21:35.770196Z'
                        date_modified: '2024-07-02T16:21:37.696724Z'
                        expiration_date: null
                        version: '2'
                      - id: 6NbHUUu6uuYN2tqJvgtf9h
                        name: Services Invoice
                        status: document.completed
                        date_created: '2024-01-25T15:35:27.186107Z'
                        date_modified: '2024-06-21T15:07:34.192101Z'
                        expiration_date: '2024-08-20T15:07:32.869161Z'
                        version: '2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  type:
                    type: string
                  detail:
                    type: object
              examples:
                Non field error:
                  value:
                    type: request_error
                    detail:
                      non_field_errors:
                        - Either template_id or form_id should be added to query.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
    post:
      tags:
        - Documents
      summary: Create Document
      description: |
        ## Create from a template
        > See the [Create document from template](https://developers.pandadoc.com/docs/create-document-from-template) tutorial for details on how to use this endpoint, as well as a sample template.

        ## Create from a URL
        > See the [Create from public PDF](https://developers.pandadoc.com/docs/create-and-send-a-document-from-a-publicly-available-pdf) guide for info about roles and fields, as well as PDF examples.
      operationId: createDocument
      parameters:
        - name: editor_ver
          in: query
          deprecated: true
          schema:
            type: string
          example: ev2
          description: Set this parameter as `ev1` if you want to create a document from PDF with Classic Editor when both editors are enabled for the workspace.
        - name: use_form_field_properties
          in: query
          schema:
            type: string
          example: 'true'
          description: 'Set this parameter as `yes` or `1` or `true` (only when upload pdf with form fields) if you want to  respect form fields properties, like `required`.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
            examples:
              Simple API Sample:
                summary: Simple API Sample Document from PandaDoc Template
                value:
                  name: Simple API Sample Document from PandaDoc Template
                  template_uuid: onoznwTq4Y3EELMPyvucnc
                  recipients:
                    - email: josh@example.com
                      first_name: Josh
                      last_name: Ron
                      role: user
                      phone: 555-5555-5555
                      signing_order: 1
                      company: PandaDoc
                      default: false
                      delivery_methods:
                        sms: true
                        email: false
                      redirect:
                        is_enabled: true
                        url: 'https://super.redirect.url/1'
                      verification_settings:
                        verification_place: before_open
                        passcode_verification: null
                        phone_verification: null
                        kba_verification: null
                        id_verification:
                          enabled: true
                  tokens:
                    - name: Favorite.Pet
                      value: Panda
                  fields:
                    Favorite.Color:
                      value: PandaDoc green
                    Delivery:
                      value: Same Day Delivery
                    Like:
                      value: true
                    Date:
                      value: '2019-12-31T00:00:00.000Z'
                  metadata:
                    my_favorite_pet: Panda
                  tags:
                    - created_via_api
                    - test_document
                  images:
                    - name: Image 1
                      urls:
                        - 'https://s3.amazonaws.com/pd-static-content/public-docs/pandadoc-panda-bear.png'
                  pricing_tables:
                    - name: Pricing Table 1
                      data_merge: true
                      options:
                        Tax:
                          type: percent
                          name: Tax
                          value: 10
                      sections:
                        - title: Sample Section
                          default: true
                          rows:
                            - options:
                                optional: true
                                optional_selected: true
                                qty_editable: true
                              data:
                                Name: Toy Panda
                                Description: Fluffy!
                                Price: 10
                                QTY: 3
                                Tax:
                                  value: 20
                                  type: percent
                              custom_fields:
                                Fluffiness: 5 / 5
              Full API Sample:
                summary: Full API Sample Document from PandaDoc Template
                value:
                  name: 'Full API Sample Document from [PandaDoc] Template'
                  detect_title_variables: true
                  template_uuid: hryJY9mqYZHjQCYQuSjRQg
                  folder_uuid: QMDSzwabfFzTgjW4kUijqQ
                  owner:
                    membership_id: QMDSzwabfFzTgjW6KijHyu
                  recipients:
                    - email: josh@example.com
                      first_name: Josh
                      last_name: Ron
                      role: user
                  tokens:
                    - name: Favorite.Pet
                      value: Panda
                  fields:
                    Favorite.Color:
                      value: PandaDoc green
                    Delivery:
                      value: Same Day Delivery
                    Like:
                      value: true
                    Date:
                      value: '2019-12-31T00:00:00.000Z'
                  metadata:
                    my_favorite_pet: Panda
                  tags:
                    - created_via_api
                    - test_document
                  images:
                    - name: Image 1
                      urls:
                        - 'https://s3.amazonaws.com/pd-static-content/public-docs/pandadoc-panda-bear.png'
                  pricing_tables:
                    - name: Pricing Table 1
                      data_merge: true
                      options:
                        Tax:
                          type: percent
                          name: Tax
                          value: 10
                      sections:
                        - title: Sample Section
                          default: true
                          rows:
                            - options:
                                optional: true
                                optional_selected: true
                                qty_editable: true
                              data:
                                Name: Toy Panda
                                Description: Fluffy!
                                Price: 10
                                QTY: 3
                                Tax:
                                  value: 20
                                  type: percent
                              custom_fields:
                                Fluffiness: 5 / 5
                  tables:
                    - name: Table 1
                      data:
                        sections:
                          - header:
                              - text: header 1
                              - text: header 2
                            rows:
                              - - text: value 1
                                - text: value 2
                              - - text: value 3
                                - text: value 4
                  content_placeholders:
                    - block_id: '{block_id}'
                      content_library_items:
                        - id: '{cli_id}'
                          pricing_tables:
                            - name: Pricing Table 1
                              data_merge: false
                              options:
                                discount:
                                  type: absolute
                                  name: Discount
                                  value: 2.26
                              sections:
                                - title: Sample Section
                                  default: true
                                  rows:
                                    - options:
                                        optional: true
                                        optional_selected: true
                                        qty_editable: true
                                      data:
                                        name: Placeholder Panda
                                        price: 10
                                        qty: 3
                        - id: '{cli_id_2}'
                          recipients:
                            - email: john@example.com
                              first_name: John
                              last_name: Roe
                              role: Signer
                              signing_order: 2
                          fields:
                            Date:
                              value: '2019-12-31T00:00:00.000Z'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCreateResponse'
              examples:
                Document from Template:
                  value:
                    id: D3okRfgHRX7NEhavcACReB
                    name: Document from Template
                    status: document.uploaded
                    date_created: '2024-07-04T19:27:14.927317Z'
                    date_modified: '2024-07-04T19:27:14.927317Z'
                    expiration_date: null
                    version: null
                    uuid: D3okRfgHRX7NEhavcACReB
                    links:
                      - rel: status
                        href: 'https://api.pandadoc.com/public/v1/documents/D3okRfgHRX7NEhavcACReB'
                        type: GET
                    info_message: You need to poll the Document Status method until the status will be changed to document.draft
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/documents?upload:
    post:
      tags:
        - Documents
      summary: Create Document from File Upload
      description: |
        ## Create from an upload
        > See the [Create from PDF](https://developers.pandadoc.com/docs/create-document-from-file) tutorial for the usage specifics and sample PDF files.

        **Note**: A file you upload is not stored in your PandaDoc account, so you have to upload it with every request.
      operationId: createDocumentFromUpload
      parameters:
        - name: editor_ver
          in: query
          deprecated: true
          schema:
            type: string
          example: ev2
          description: Set this parameter as `ev1` if you want to create a document from PDF with Classic Editor when both editors are enabled for the workspace.
        - name: use_form_field_properties
          in: query
          schema:
            type: string
          example: 'true'
          description: 'Set this parameter as `yes` or `1` or `true` (only when upload pdf with form fields) if you want to  respect form fields properties, like `required`.'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Binary PDF File
                data:
                  $ref: '#/components/schemas/DocumentCreateByPdfRequest'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCreateResponse'
              examples:
                Document from Template:
                  value:
                    id: D3okRfgHRX7NEhavcACReB
                    name: Document from Template
                    status: document.uploaded
                    date_created: '2024-07-04T19:27:14.927317Z'
                    date_modified: '2024-07-04T19:27:14.927317Z'
                    expiration_date: null
                    version: null
                    uuid: D3okRfgHRX7NEhavcACReB
                    links:
                      - rel: status
                        href: 'https://api.pandadoc.com/public/v1/documents/D3okRfgHRX7NEhavcACReB'
                        type: GET
                    info_message: You need to poll the Document Status method until the status will be changed to document.draft
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}':
    get:
      tags:
        - Documents
      summary: Document Status
      operationId: statusDocument
      description: "It is useful to request document status to ensure a document is in the expected state before calling additional API methods. \n\n### Required Document Statuses\n\nHere are some common methods and the `document.status` required to proceed:\n\n| API Method           | Required Document State |\n| :------------------- | :---------------------- |\n| Send A Document      | `document.draft`        |\n| Get Document Details | `document.draft`        |\n| Embed A Document     | `document.sent`         |\n| Download A Document  | `document.completed`    |\n\n> \U0001F4D8 Polling vs Webhooks\n> \n> If you are using the `GET` document status endpoint for [**polling**](https://en.wikipedia.org/wiki/Polling_(computer_science)), we also support and recommend using **webhooks** for event-driven needs: <https://developers.pandadoc.com/reference/on-document-status-change>\n\n### Available Document Statuses\n\nThe following is a complete list of all possible document statuses returned:\n\n| Document Status             | Status Description                                                                                                                                                                                                               |\n| :-------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `document.uploaded`         | The document has just been created or uploaded. It is in processing and will be in `document.draft` state momentarily.                                                                                                           |\n| `document.draft`            | The document is in a draft state. All aspects of the document can be edited in this state. Our API does not support edits after the document has been created, but it can still be edited manually on <https://app.pandadoc.com> |\n| `document.sent`             | The document has been \"sealed\" and optionally sent. No further document edits can occur except for document recipient(s) filling out or signing the document.                                                                    |\n| `document.viewed`           | Document recipient(s) have viewed the sent document.                                                                                                                                                                             |\n| `document.waiting_approval` | The document has an [automatic approval workflow](https://support.pandadoc.com/hc/en-us/articles/360016122334--Editor-2-0-Approval-workflow) and has not yet been approved.                                                      |\n| `document.rejected`         | The document has an [automatic approval workflow](https://support.pandadoc.com/hc/en-us/articles/360016122334--Editor-2-0-Approval-workflow) and was rejected.                                                                   |\n| `document.approved`         | The document has an [automatic approval workflow](https://support.pandadoc.com/hc/en-us/articles/360016122334--Editor-2-0-Approval-workflow) and was approved.                                                                   |\n| `document.waiting_pay`      | The document has a [Stripe payment](https://support.pandadoc.com/hc/en-us/articles/360017806894--Editor-2-0-Stripe) option and is awaiting payment.                                                                              |\n| `document.paid`             | The document has a [Stripe payment](https://support.pandadoc.com/hc/en-us/articles/360017806894--Editor-2-0-Stripe) option and was paid.                                                                                         |\n| `document.completed`        | The document has been completed by all recipients.                                                                                                                                                                               |\n| `document.voided`           | The document expired and is no longer available for completion or signature.                                                                                                                                                     |\n| `document.declined`         | The document was [manually marked](https://support.pandadoc.com/hc/en-us/articles/360041879753-Manually-change-document-status) as \"Declined\"                                                                                    |\n| `document.external_review`  | The document is reviewed by it's recipient using Suggest Edit feature                                                                                                                                                            |\n"
      parameters:
        - examples:
            Document processing after create:
              value: fANp5wW5EwY7AkiTkTGekZ
            Document in draft:
              value: XjV64iXRJMerjSpk428QSF
          name: id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatusResponse'
              examples:
                Document processing after create:
                  value:
                    id: fANp5wW5EwY7AkiTkTGekZ
                    name: Document from file
                    status: document.uploaded
                    date_created: '2024-07-02T16:21:57.510203Z'
                    date_modified: '2024-07-02T16:21:57.708251Z'
                    expiration_date: null
                    version: null
                    uuid: fANp5wW5EwY7AkiTkTGekZ
                Document in draft:
                  value:
                    id: XjV64iXRJMerjSpk428QSF
                    name: Document from template
                    status: document.draft
                    date_created: '2024-03-19T12:59:52.848666Z'
                    date_modified: '2024-03-19T12:59:53.957830Z'
                    date_completed: null
                    expiration_date: null
                    version: '2'
                    uuid: XjV64iXRJMerjSpk428QSF
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
    delete:
      tags:
        - Documents
      summary: Delete Document
      operationId: deleteDocument
      description: |
        Delete a document by ID.
      parameters:
        - examples:
            Delete document:
              value: BhVzRcxH9Z2LgfPPGXFUBa
          name: id
          description: Document ID
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No content
        '404':
          $ref: '#/components/responses/404'
    patch:
      tags:
        - Documents
      summary: Update Document
      operationId: updateDocument
      description: "Use the PATCH method to update a PandaDoc document.\n\n> \U0001F6A7 Document status\n> \n> You can only update a document in the Draft status (`document.draft`). \n> \n> After creating a new document, it usually retains a `document.uploaded` status for 3-5 seconds while the document syncs across PandaDoc servers. When the document is available for further API calls, the document moves to the `document.draft` state. Use [Document Status](https://developers.pandadoc.com/reference/document-status) or Webhooks to check document status.\n"
      parameters:
        - examples:
            Update document:
              value: BhVzRcxH9Z2LgfPPGXFUBa
          name: id
          description: Document ID
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdateRequest'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/status':
    patch:
      tags:
        - Documents
      summary: Document Status Change
      operationId: changeDocumentStatus
      description: "PandaDoc has eight document statuses, but you can manually set your document status to only four:\n\n### Document statuses\n\n- Completed - `document.completed` - API code `2`\n- Expired - `document.voided` - code `11`\n- Paid - `document.paid` - code `10`. **Important**: You can only set it if you have a payment app connected.\n- Declined - `document.declined` - code `12`\n\n> \U0001F6A7 Pass a numeric code for the corresponding document status, for example, `2` for `document.completed`.\n\nFind more details in [\\[Editor 2.0\\] Manually change document status](https://support.pandadoc.com/en/articles/9714842-manually-change-document-status) topic.\n\n| Current Status | To Completed: | To Expired: | To Paid: | To Declined: |\n|----------------|---------------|-------------|----------|--------------|\n| Draft          | YES           | NO          | YES      | YES          |\n| Approved       | NO            | NO          | NO       | NO           |\n| Sent           | YES           | YES         | NO       | YES          |\n| Viewed         | YES           | YES         | NO       | YES          |\n| Completed (Auto) | NO          | NO          | NO       | YES          |\n| Waithing for payment | NO      | NO          | YES      | YES          |\n| Paid           | NO            | NO          | NO       | NO           |\n| Expired        | YES           | NO          | YES      | YES          |\n| Declined       | YES           | NO          | YES      | NO           |\n\n> ✅ - from `document.voided` to `document.paid`\n>\n> ❌ - from `document.paid` to `document.voided`\n"
      parameters:
        - examples:
            Mark as Decline:
              value: iGsFiaV2hEEvQdhr2WAkMk
            Mark as Completed:
              value: iGsFiaV2hEEvQdhr2WAkMk
            Mark as Expired:
              value: iGsFiaV2hEEvQdhr2WAkMk
            Mark as Paid:
              value: iGsFiaV2hEEvQdhr2WAkMk
          name: id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentStatusChangeRequest'
            examples:
              Mark as Decline:
                value:
                  status: 12
                  note: Change status to Decline
                  notify_recipients: false
              Mark as Completed:
                value:
                  status: 2
                  note: Change status to Completed
                  notify_recipients: false
              Mark as Expired:
                value:
                  status: 11
                  note: Change status to Expired
                  notify_recipients: false
              Mark as Paid:
                value:
                  status: 10
                  note: Change status to Paid
                  notify_recipients: false
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/status?upload':
    patch:
      tags:
        - Documents
      summary: Document Status Change with Upload
      operationId: changeDocumentStatusWithUpload
      description: "PandaDoc has eight document statuses, but you can manually set your document status to only four:\n\n### Document statuses\n\n- Completed - `document.completed` - API code `2`\n- Expired - `document.voided` - code `11`\n- Paid - `document.paid` - code `10`. **Important**: You can only set it if you have a payment app connected.\n- Declined - `document.declined` - code `12`\n\n> \U0001F6A7 Pass a numeric code for the corresponding document status, for example, `2` for `document.completed`.\n\nFind more details in [\\[Editor 2.0\\] Manually change document status](https://support.pandadoc.com/en/articles/9714842-manually-change-document-status) topic.\n\n| Current Status | To Completed: | To Expired: | To Paid: | To Declined: |\n|----------------|---------------|-------------|----------|--------------|\n| Draft          | YES           | NO          | YES      | YES          |\n| Approved       | NO            | NO          | NO       | NO           |\n| Sent           | YES           | YES         | NO       | YES          |\n| Viewed         | YES           | YES         | NO       | YES          |\n| Completed (Auto) | NO          | NO          | NO       | YES          |\n| Waithing for payment | NO      | NO          | YES      | YES          |\n| Paid           | NO            | NO          | NO       | NO           |\n| Expired        | YES           | NO          | YES      | YES          |\n| Declined       | YES           | NO          | YES      | NO           |\n\n> ✅ - from `document.voided` to `document.paid`\n>\n> ❌ - from `document.paid` to `document.voided`\n"
      parameters:
        - examples:
            Mark as Decline:
              value: iGsFiaV2hEEvQdhr2WAkMk
            Mark as Completed:
              value: iGsFiaV2hEEvQdhr2WAkMk
            Mark as Expired:
              value: iGsFiaV2hEEvQdhr2WAkMk
            Mark as Paid:
              value: iGsFiaV2hEEvQdhr2WAkMk
          name: id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Binary attachment file
                data:
                  allOf:
                    - $ref: '#/components/schemas/DocumentStatusChangeRequest'
                    - description: JSON as a multipart/form-data string.
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/draft':
    post:
      tags:
        - Documents
      summary: Move Document to Draft
      operationId: documentRevertToDraft
      description: "Revert your document back to draft to continue editing it.\n\n> \U0001F4D8 Returning to Draft works for any document status except Removed.\n\n## After you move your document to the Draft status\n\n- `Signature` and `Initials` fields are cleared. All other fields stay filled in.\n- Recipients are **not** notified that the document is back in Draft.\n- You'll need to resend the document so that recipients can sign the updated version.\n"
      parameters:
        - examples:
            Move to Draft:
              value: iGsFiaV2hEEvQdhr2WAkMk
          name: id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  status:
                    type: string
                  date_created:
                    type: string
                  date_modified:
                    type: string
                  expiration_date:
                    type: string
                    nullable: true
                  version:
                    type: string
              examples:
                Move to Draft:
                  value:
                    id: msFYActMfJHqNTKH8YSvF1
                    name: Document
                    status: document.draft
                    date_created: '2017-08-06T08:42:13.836022Z'
                    date_modified: '2017-09-04T02:21:13.963750Z'
                    expiration_date: null
                    version: '2'
  '/public/v1/documents/{id}/details':
    get:
      tags:
        - Documents
      summary: Document Details
      operationId: detailsDocument
      description: |
        Return detailed data about a document. Use Document Status for getting just a basic info and status.

        Get details about a document by its `id`. Details include:

        - Basic document information (name, document state, owner, sender, grand total, etc.)
        - Recipients (completion status, signing order, etc.)
        - Fields with values (incl. Collect Files field)
        - Tokens (variables) with values
        - Pricing information (pricing tables, products, quotes, etc.)
        - Metadata
        - Tags
        - Linked objects
        - [Approval flow](https://support.pandadoc.com/hc/en-us/articles/360016122334-Approval-workflow#h_01H4GNY5GSGG38BPYY46XV7GB4) (if present)
        - Timestamps associated with a document. Note that `date_modified` means any changes associated with the recipients and document status, while `content_date_modified` reflects any changes in the document content.
      parameters:
        - examples:
            Document from empty template:
              value: BhVzRcxH9Z2LgfPPGXFUBa
            API Sample Document from PandaDoc template:
              value: PeePkgJLFT2UittjVdEyYG
            Completed Document Details:
              value: f9CbJKS4ZAs6nU629cuowb
          name: id
          description: Document ID
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetailsResponse'
              examples:
                Completed Document Details:
                  value:
                    approval_execution: null
                    content_date_modified: '2024-07-08T15:43:54.194562Z'
                    linked_objects: []
                    date_completed: '2024-07-08T15:43:53.877522Z'
                    id: f9CbJKS4ZAs6nU629cuowb
                    name: Digital Marketing Proposal
                    autonumbering_sequence_name_prefix: null
                    date_created: '2024-07-08T15:36:09.600947Z'
                    date_modified: '2024-07-08T15:43:53.918819Z'
                    date_sent: '2024-07-08T15:41:23.351853Z'
                    ref_number: MTMJR-FEUQB-ECEWW-3WVZP
                    created_by:
                      id: FA5QAu8UGA3oVDQZuPL75B
                      email: pandaDoc@pandadoc.com
                      first_name: Panda
                      last_name: Doc
                      avatar: null
                      membership_id: RyMNXBjBPRppw56TfYBrXi
                    template:
                      id: gZRVmyHiQV5riXSCMKsku2
                      name: Sample Template
                    expiration_date: '2024-09-06T15:43:36.297737Z'
                    metadata:
                      document__created_via_public_api: 'true'
                      document__creation_source: public api
                    tokens: []
                    fields:
                      - uuid: f03e22f3-b3a8-4783-8b26-e43880ef87bf
                        name: Signature
                        title: ''
                        value: {}
                        placeholder: Signature
                        assigned_to:
                          id: 8KAZvGRL3W4u44a4fyDoeH
                          first_name: Recipient First Name
                          last_name: Recipient Last Name
                          email: test@pandadoc.com
                          phone: ''
                          recipient_type: signer
                          has_completed: true
                          role: Client
                          roles:
                            - Client
                          signing_order: null
                          delivery_methods:
                            sms: false
                            email: true
                          redirect:
                            is_enabled: false
                            url: null
                          type: recipient
                        field_id: signature_f03e22f3-b3a8-4783-8b26-e43880ef87bf
                        type: signature
                    pricing: {}
                    tags:
                      - tag1
                    status: document.completed
                    recipients:
                      - id: 8KAZvGRL3W4u44a4fyDoeH
                        first_name: Recipient First Name
                        last_name: Recipient Last Name
                        email: test@pandadoc.com
                        phone: ''
                        recipient_type: signer
                        has_completed: true
                        role: Client
                        roles:
                          - Client
                        signing_order: null
                        delivery_methods:
                          sms: false
                          email: true
                        redirect:
                          is_enabled: false
                          url: null
                        contact_id: HzXnuyNraSXMhXchYjUmHJ
                        shared_link: 'https://app.pandadoc.com/document/15d4b481384b652a298530ddc7023bfc07a67d59'
                        signature_date: '2024-07-08T15:43:53.800135Z'
                        verification_settings:
                          verification_place: before_open
                          kba_verification: null
                          passcode_verification: null
                          phone_verification: null
                          id_verification:
                            enabled: true
                        type: recipient
                    sent_by:
                      id: FA5QAu8UGA3oVDQZuPL75B
                      email: pandadoc@pandadoc.com
                      first_name: Panda
                      last_name: Doc
                      avatar: null
                    grand_total:
                      amount: '0'
                      currency: EUR
                    version: '2'
                Document from empty template:
                  value:
                    approval_execution: null
                    content_date_modified: '2024-07-05T07:21:42.429978Z'
                    linked_objects: []
                    date_completed: null
                    id: VFU2v7oq3ZiKCHD936eoHg
                    name: Document from empty Template
                    autonumbering_sequence_name_prefix: null
                    date_created: '2024-07-05T07:21:41.984654Z'
                    date_modified: '2024-07-05T07:21:42.409797Z'
                    date_sent: null
                    ref_number: MTMJR-FEUQB-ECEWW-3WVZP
                    created_by:
                      id: bgx5MR7LiR3f9MQtt4MWYM
                      email: siarhei.soroka@pandadoc.com
                      first_name: Siarhei
                      last_name: Soroka
                      avatar: 'https://avatars.pandadoc-static.com/users/bgx5MR7LiR3f9MQtt4MWYM/avatar.jpeg'
                      membership_id: nYNQTypQfNEnrcVR7VAzWQ
                    template:
                      id: bonjUYEwp8TtHmEnrEy7kZ
                      name: Sample Template
                    expiration_date: null
                    metadata:
                      document__creation_source: public api
                      document__created_via_public_api: 'true'
                    tokens: []
                    fields: []
                    pricing: {}
                    tags: []
                    status: document.draft
                    recipients: []
                    sent_by: null
                    grand_total:
                      amount: '0'
                      currency: USD
                    version: '2'
                API Sample Document from PandaDoc template:
                  value:
                    id: 7kqXgjFejB2toXxjcC5jfZ
                    name: API Sample Document from PandaDoc Template
                    autonumbering_sequence_name_prefix: {}
                    date_created: '2021-10-23T21:07:04.147Z'
                    date_modified: '2021-10-23T21:07:04.147Z'
                    date_completed: '2021-10-23T21:07:04.147Z'
                    content_date_modified: '2021-10-23T21:07:04.147Z'
                    date_sent: null
                    ref_number: MTMJR-FEUQB-ECEWW-3WVZP
                    created_by:
                      id: 7kqXgjFejB2toXxjcC5jfZ
                      membership_id: 7kqXgjFejB2toXxjcC5jfZ
                      email: teset@test.test
                      first_name: Jhon
                      last_name: Dow
                      avatar: 'https://pd-live-media.s3.amazonaws.com/users/000GTSGwJw000L2KZqc000/avatar.jpg'
                    template:
                      id: hryJY9mqYZHjQCYQuSjRQg
                      name: Upload test
                    expiration_date: null
                    metadata:
                      document__created_via_public_api: 'true'
                      my_favorite_pet: Panda
                      opp_id: '1234567'
                    tokens:
                      - name: Document.GrandTotal
                        value: $29.99
                      - name: Favorite.Pet
                        value: Panda
                    fields:
                      - uuid: f9574c3b-5b1e-4479-b2c9-c3ccd92748f3
                        name: Click to upload a file
                        title: ''
                        placeholder: Click to upload a file
                        value:
                          name: file_name.pdf
                          url: 'https://uploadfields.pandadoc-static.com/collect_files/e7b082c2-395b-43c7-a24c-66bd1bbb5d2f/65af1f23-9d26-4622-8ff0-f406b3be27b8-file_name.pdf'
                        assigned_to:
                          id: Fx7CgaVgpGbJBgZ4i5oTx8
                          first_name: John
                          last_name: Roe
                          email: john@example.com
                          recipient_type: signer
                          has_completed: false
                          role: ''
                          roles:
                            - singer
                          type: recipient
                        field_id: CollectFile1
                        type: collect_file
                      - uuid: f9574c3b-5b1e-4479-b2c9-c3ccd92748f3
                        name: Favorite.Color
                        merge_field: Favorite.Color
                        title: Textfield
                        value: value
                        assigned_to:
                          id: Fx7CgaVgpGbJBgZ4i5oTx8
                          first_name: John
                          last_name: Roe
                          email: john@example.com
                          recipient_type: signer
                          has_completed: false
                          role: ''
                          roles: []
                          type: recipient
                        field_id: text1
                        type: text
                      - uuid: f9574c3b-5b1e-4479-b2c9-c3ccd92748f3
                        name: Like
                        merge_field: Like
                        title: Checkbox
                        value: true
                        assigned_to:
                          id: Fx7CgaVgpGbJBgZ4i5oTx8
                          first_name: John
                          last_name: Roe
                          email: john@example.com
                          recipient_type: signer
                          has_completed: false
                          role: ''
                          roles:
                            - signer
                          type: recipient
                        field_id: checkbox1
                        type: checkbox
                    pricing:
                      tables:
                        - name: Pricing Table
                          id: 065c5cbc-a065-4843-ba17-028e63779605
                          total: '11500'
                          is_included_in_total: true
                          summary:
                            subtotal: '11500'
                            total: '11500'
                            discount: '0'
                            tax: '0'
                          items:
                            - id: string
                              sku: string
                              qty: '10'
                              name: Annual license
                              cost: string
                              price: '100'
                              description: 1 year subscription
                              custom_fields: {}
                              custom_columns:
                                Images: ''
                                Cost: ''
                                Subtotal: ''
                              discount:
                                value: string
                                type: string
                              tax_first:
                                value: string
                                type: string
                              tax_second:
                                value: string
                                type: string
                              subtotal: '10000'
                              options: {}
                              sale_price: '1000'
                              taxes: {}
                              discounts: {}
                              fees: {}
                              merged_data:
                                custom_name: SomeName
                                custom_description: SomeCustomDescription
                                custom_price: '10.99'
                                custom_qty: '1.00'
                                custom_sku: Test
                                custom_tax:
                                  value: '10'
                                  type: percent
                                custom_fee:
                                  value: '10'
                                  type: percent
                                custom_discount:
                                  value: '10'
                                  type: percent
                                custom_text: Some other
                                Cost: null
                                Subtotal: '26.38'
                                fluffiness: Fluffiness
                                Other_field: SomeText
                          currency: USD
                      quotes:
                        - id: 4b011d86-286b-4f86-b697-90a6ad3f1489
                          currency: USD
                          total: '900'
                          summary:
                            total: '900'
                            subtotal: '1000'
                            one_time_subtotal: '500'
                            recurring_subtotal:
                              - billing_cycle: monthly
                                value: '500'
                            total_qty: string
                            discounts:
                              property1:
                                type: string
                                value: string
                              property2:
                                type: string
                                value: string
                            taxes: {}
                            fees: {}
                            custom_fields:
                              property1: string
                              property2: string
                            total_discount: '100'
                            total_tax: string
                            total_fee: string
                            total_savings: string
                            total_contract_value: '1900'
                          sections:
                            - id: string
                              name: string
                              summary:
                                total: '1000'
                                subtotal: '1000'
                                one_time_subtotal: '500'
                                recurring_subtotal:
                                  - billing_cycle: monthly
                                    value: '500'
                                total_qty: string
                                discounts: {}
                                taxes: {}
                                fees: {}
                                custom_fields:
                                  property1: string
                                  property2: string
                                total_section_value: '1900'
                              columns:
                                - header: string
                                  name: string
                                  merge_name: string
                                  hidden: string
                              items:
                                - id: string
                                  sku: string
                                  name: string
                                  description: string
                                  qty: '1'
                                  price: '500'
                                  cost: string
                                  billing_frequency: string
                                  contract_term: string
                                  pricing_method: string
                                  type: string
                                  reference_type: string
                                  options:
                                    selected: true
                                    qty_editable: true
                                  custom_columns:
                                    property1: string
                                    property2: string
                                  discounts:
                                    property1:
                                      type: string
                                      value: string
                                    property2:
                                      type: string
                                      value: string
                                  taxes:
                                    property1:
                                      type: string
                                      value: string
                                    property2:
                                      type: string
                                      value: string
                                  fees:
                                    property1:
                                      type: string
                                      value: string
                                    property2:
                                      type: string
                                      value: string
                                  multipliers:
                                    property1: string
                                    property2: string
                                  total: string
                                  overall_total: '1000'
                              total: '1000'
                              settings:
                                optional: true
                                selected: true
                                selection_type: custom
                          merge_rules:
                            - id: string
                              enabled: true
                              action:
                                type: string
                                section_id: string
                              condition:
                                field_name: string
                                type: string
                                comparison:
                                  - type: string
                                    value: string
                          settings:
                            selection_type: custom
                      total: '11500'
                    version: '2'
                    tags:
                      - tag1
                      - tag2
                    sent_by: null
                    recipients:
                      - recipient_type: CC
                        role: ''
                        roles:
                          - user
                        last_name: Dow
                        signing_order: null
                        id: 7kqXgjFejB2toXxjcC5jfZ
                        contact_id: 7kqXgjFejB2toXxjcC5jfZ
                        first_name: Jhon
                        email: test@test.com
                        has_completed: true
                        shared_link: 'https://app.pandadoc.com/document/b7f11ea3c09d1c11208cc122457d4f3a2829d364'
                        verification_settings:
                          verification_place: before_open
                          passcode_verification:
                            passcode: SimpleCode1
                          kba_verification: null
                          id_verification: 'null,'
                          phone_verification: null
                        signature_date: '2021-10-23T21:07:04.147Z'
                    grand_total:
                      amount: '29.99'
                      currency: USD
                    linked_objects:
                      - provider: hubspot
                        entity_type: deal
                        entity_id: '18640'
                        id: ea88ed1dc8094dd3a57754aa643a1954
                    status: document.draft
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/send':
    post:
      tags:
        - Documents
      summary: Send Document
      operationId: sendDocument
      description: "> \U0001F6A7 Using the Sandbox Key\n> \n> When you use a [sandbox API key](https://developers.pandadoc.com/reference/sandbox-key) during the free trial period, the sender and recipient email addresses must be from the same organisation (email domain).\n\n## Document State\n\n- You can only send a document in the `document.draft` status.\n- After creating a new document, it usually retains a `document.uploaded` status for 3-5 seconds while the document syncs across PandaDoc servers. When the document is available for further API calls, it moves to the `document.draft` state. Use [Document Status](/reference/document-status) or [Webhooks](/reference/on-document-status-change) to check document status.\n- Moving a document to the `document.sent` status finalizes the document structure, before recipients can complete it.\n- If a template used for the document creation has an approval workflow turned on, the sent document moves to the `document.waiting_approval` status. Once the document is approved, you need to make the call again to move the document to `document.sent` status.\n\n## Send and Silence Notifications\n\n- By default, PandaDoc sends a `document.sent` notification email to the recipient as well as any internal notifications the sender has opted for. This can be bypassed by passing `silent: true`. Using this will suppress sent, viewed, comment and completed document notifications. This is useful when you are using alternative delivery methods such as linking to the document or embedding the document.\n- The `silent: true` parameter disables sent, viewed, comment and completed document email notifications. \"Document Approval\" notification won't be affected by this parameter.\n- When opting to send an email, passing the optional `message` attribute will result in an email like the following. At this time, you cannot customize the email beyond the user avatar. If you wish to perform any additional customization, we recommend generating view session links and using your own email distribution methods.\n\n![Example email. Branding can be changed in workspace settings](https://files.readme.io/cc5a03e-email2.png)\n\n## Select Approver from Group\n\nIf you have previously set up an approval workflow with selectable groups on the UI, you can select a particular approver from this group. Learn more about [selectable groups](https://support.pandadoc.com/hc/en-us/articles/360016122334-Approval-workflow#h_01H4GNY5GSGG38BPYY46XV7GB4).  \nTo set an approver, we recommend to follow these steps:\n\n1. Run the [Document Details](https://developers.pandadoc.com/reference/document-details) request.\n2. Copy the `steps` part from the `approval_execution` section of the response into the `selected_approvers` field of the Send Document payload.\n3. Modify your payload according to business needs: set `is_selected` to true for one approver.\n\n> \U0001F4D8 **Note**: You can change the selected approver only if you revert your document back to the `document.draft` status.\n"
      parameters:
        - name: id
          description: Document ID
          in: path
          schema:
            type: string
          required: true
          example: ZPeAfcpzr9aiVs5vqUf6jg
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSendRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSendResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/editing-sessions':
    post:
      summary: |
        [Beta] Create Document Editing Session
      description: "Create a new editing session for a document. The session contains E-Token.\n\n> \U0001F6A7 This endpoint is not available by default.\n> Please reach out to your assigned CSM or AM to get it enabled for you.\n"
      operationId: createDocumentEditingSession
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          description: Document ID
          schema:
            type: string
          required: true
          example: pSgK5XYZjyg3zXYZxsoUWg
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Default:
                value:
                  email: john.doe@pandadoc.com
                  lifetime: 100
            schema:
              $ref: '#/components/schemas/EditingSessionRequest'
      responses:
        '201':
          description: Document Editing Session created
          content:
            application/json:
              examples:
                Default:
                  value:
                    id: ce9825e5-3210-4a8f-1230-f32b643295d2
                    email: john.doe@pandadoc.com
                    expires_at: '2025-01-10T00:09:09.612651Z'
                    key: 985b695b56eaaa571e9bb8e522afd5bd335c32d7
                    document_id: pSgK5XYZjyg3zXYZxsoUWg
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseEditingSessionResponse'
                  - type: object
                    properties:
                      document_id:
                        type: string
                        description: ID of the document
                        example: pSgK5XYZjyg3zXYZxsoUWg
        '400':
          description: Bad request
          content:
            application/json:
              examples:
                Default:
                  value:
                    type: request_error
                    detail:
                      lifetime:
                        - Ensure this value is greater than or equal to 60.
              schema:
                properties:
                  type:
                    type: string
                    example: request_error
                  detail:
                    type: object
                    example:
                      count:
                        - A valid integer is required.
                      order_by:
                        - value is not a valid choice.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/session':
    post:
      tags:
        - Documents
      summary: Create Document Session for Embedded Sign
      operationId: createDocumentLink
      description: "Create a document session for a recipient to view and sign a document. This endpoint returns a session ID that can be used to generate a document link for sharing.\n\n> \U0001F6A7 Document State\n> \n> You can generate an `id` only for documents in the `sent, waiting for payment, paid, and completed` statuses. In order to move a document to the `sent` status without actually sending any emails to recipients, use the [Send Document](/reference/send-document) endpoint with the `silent`: `true` parameter.\n> \n> If a document is in \"waiting_approval\", \"rejected\", or \"declined\" status, you can't use [Share Document](ref:share-document) call. Share Document endpoint will return HTTP 400 with an error.\n\n> \U0001F4D8 Generating a Document Link from the returned `id`\n> \n> The `id` this endpoint returns is a session id. Use this URL format to view a document:\n> \n> ```html\n> https://app.pandadoc.com/s/{id}/\n> ```\n\nWhen generating a document link, first we must request a `session ID` per the session endpoint above. Once the `session ID` is generated, it can then be placed in the URL format above for sharing.\n\n> \U0001F6A7 Lifetime Parameter\n> \n> We see the `lifetime` parameter often overlooked when generating a `session ID`. Make sure that you provide a `lifetime` value in seconds that is great enough for the recipient(s) to complete the shared document. We recommend values under 1 year for security purposes, e.g.: `\"lifetime\": 31535999`\n"
      parameters:
        - examples:
            Signing session:
              value: ZPeAfcpzr9aiVs5vqUf6jg
          name: id
          description: Document ID
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateLinkRequest'
            examples:
              Signing session:
                value:
                  recipient: test@mail.com
                  lifetime: 900
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCreateLinkResponse'
              examples:
                Signing session:
                  value:
                    id: nPh2PDhFdDqAES9k64h9qX
                    expires_at: '2024-07-01T08:03:57.536427Z'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/download':
    get:
      tags:
        - Documents
      summary: Document Download
      operationId: downloadDocument
      description: |
        Download documents as a PDF.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: watermark_color
          in: query
          schema:
            type: string
          description: HEX code (for example `#FF5733`).
          example: '#FF5733'
        - name: watermark_font_size
          in: query
          schema:
            type: integer
          description: Font size of the watermark.
          example: 12
        - name: watermark_opacity
          in: query
          schema:
            type: number
            format: float
          description: In range 0.0-1.0
          example: 0.5
        - name: watermark_text
          in: query
          schema:
            type: string
          description: Specify watermark text.
          example: John Doe inc.
        - name: separate_files
          in: query
          schema:
            type: boolean
            default: false
          description: Download document bundle as a zip-archive of separate PDFs (1 file per section).
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/download-protected':
    get:
      tags:
        - Documents
      summary: Download Completed Document
      description: "Download a completed document as a verifiable PDF (Download Protected Document)\n> \U0001F6A7 Production key only\n> \n> This endpoint only works with a Production key. You'll get a 401 Unauthorized error when trying to use a Sandbox key.\n\nDownload a signed PDF of a completed document\n"
      operationId: downloadProtectedDocument
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
          example: Mebvyy3NGsGBnY2rPLkH84
        - name: separate_files
          in: query
          schema:
            type: boolean
            default: false
          description: Download document bundle as a zip-archive of separate PDFs (1 file per section).
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/documents/linked-objects:
    get:
      summary: List Documents by Linked Object
      description: Get a list of documents connected to a linked object - an entity from an integration.
      operationId: listDocumentsByLinkedObject
      tags:
        - Document Link to CRM
      parameters:
        - name: entity_id
          in: query
          description: 'You can get entity id from your integration, for example, from a url of a HubSpot deal.'
          required: true
          schema:
            type: string
        - name: entity_type
          in: query
          description: |
            See the available entity types:
            https://developers.pandadoc.com/reference/link-service#examples-of-the-most-popular-crms
          required: true
          schema:
            type: string
        - name: provider
          in: query
          description: |
            See the available providers:
            https://developers.pandadoc.com/reference/link-service#examples-of-the-most-popular-crms
          required: true
          schema:
            type: string
        - name: order_by
          in: query
          schema:
            type: string
            default: '-date_created'
        - name: owner_ids
          in: query
          schema:
            type: array
            items:
              type: string
            default:
              - '[]'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value:
                    - id: PG4YBFvSp9zW8nQf7zfmqb
                      status: document.draft
                      date_created: '2023-11-27T14:11:13.198496Z'
                      template_id: 5bAoesA6MDF97BG6wfhfZE
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: PG4YBFvSp9zW8nQf7zfmqb
                    status:
                      type: string
                      example: document.draft
                    date_created:
                      type: string
                      example: '2023-11-27T14:11:13.198496Z'
                    template_id:
                      type: string
                      example: 5bAoesA6MDF97BG6wfhfZE
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/linked-objects':
    get:
      tags:
        - Document Link to CRM
      summary: List Linked Objects
      operationId: listLinkedObjects
      description: |
        Get a list of linked objects for the document.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
          example: ZPeAfcpzr9aiVs5vqUf6jg
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObjectListResponse'
              examples:
                List Linked Objects:
                  value:
                    linked_objects:
                      - id: abb4d3fc-919b-491e-9e08-775036660c0b
                        provider: pipedrive
                        entity_type: deal
                        entity_id: '134'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
    post:
      tags:
        - Document Link to CRM
      summary: Create Linked Object
      operationId: createLinkedObject
      description: "Create a linked object in the document.\n\n> \U0001F6A7 \n> \n> You can only link each document to each CRM once. This ensures the consistent functionality of the [two-way CRM sync](https://support.pandadoc.com/hc/en-us/articles/360021662573-HubSpot-CRM#h_3a3344e8-2a6e-4fd8-86be-0da8c121e4ac).\n> \n> You can, however, link one document to several external systems.\n"
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
          example: ZPeAfcpzr9aiVs5vqUf6jg
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedObjectCreateRequest'
            examples:
              Create Linked Object:
                value:
                  provider: pipedrive
                  entity_type: deal
                  entity_id: 134
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObjectCreateResponse'
              examples:
                Create Linked Object:
                  value:
                    provider: pipedrive
                    entity_type: deal
                    entity_id: 134
                    id: abb4d3fc-919b-491e-9e08-775036660c0b
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/linked-objects/{linked_object_id}':
    delete:
      tags:
        - Document Link to CRM
      summary: Delete Linked Object
      operationId: deleteLinkedObject
      description: Delete a linked object associated with a document.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
          example: ZPeAfcpzr9aiVs5vqUf6jg
        - name: linked_object_id
          in: path
          schema:
            type: string
          required: true
          description: Specify linked object ID.
          example: deb0d530-d759-4189-a422-8d2265e01b2e
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/attachments':
    get:
      summary: List Document Attachments
      description: Returns a list of attachments associated with a specified document.
      operationId: listDocumentAttachments
      tags:
        - Document Attachments
      parameters:
        - name: id
          in: path
          description: Document UUID
          schema:
            type: string
          required: true
          examples:
            List Document Attachments:
              value: BhVzRcxH9Z2LgfPPGXFUBa
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentAttachmentResponse'
              examples:
                List Document Attachments:
                  value:
                    - uuid: 076797cd-dca6-4083-a3pi-6960714209d9
                      date_created: '2024-07-15T21:14:39.973077Z'
                      created_by:
                        id: bSfiuAJNokERwsBxynKjwA
                        email: sergio@pandadoc.com
                        first_name: Sergio
                        last_name: ''
                        avatar: null
                      name: document.pdf
                      type: general
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
    post:
      summary: Create Document Attachment
      description: Creates an attachment for a particular document
      operationId: createDocumentAttachment
      tags:
        - Document Attachments
      parameters:
        - name: id
          in: path
          description: Document UUID
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentAttachmentRequest'
            examples:
              Create Document Attachments:
                value:
                  source: 'https://upload.wikimedia.org/wikipedia/en/thumb/8/80/Wikipedia-logo-v2.svg/1920px-Wikipedia-logo-v2.svg.png'
                  name: Wikipedia logo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAttachmentResponse'
              examples:
                Create Document Attachment:
                  value:
                    uuid: 1111bc85-b0f0-42a8-97e7-9265cd9a12a4
                    date_created: '2025-01-31T14:02:59.667160Z'
                    created_by:
                      id: bSfiuAJNokERwsBxynKjwA
                      email: sergio@pandadoc.com
                      first_name: Sergio
                      last_name: ''
                      avatar: null
                    name: Wikipedia logo
                    type: general
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/attachments?upload':
    post:
      summary: Create Document Attachment From Upload
      description: Creates an attachment for a particular document
      operationId: createDocumentAttachmentFromFileUpload
      tags:
        - Document Attachments
      parameters:
        - name: id
          in: path
          description: Document UUID
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
      requestBody:
        required: true
        description: Uploads attachment to document by using Multipart Form Data
        content:
          multipart/form-data:
            schema:
              allOf:
                - type: object
                  properties:
                    file:
                      type: string
                      format: binary
                      description: Binary file to be attached to a document
                - $ref: '#/components/schemas/DocumentAttachmentRequest/allOf/1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAttachmentResponse'
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/attachments/{attachment_id}':
    get:
      summary: Document Attachment Details
      description: Returns details of the specific document's attachment.
      operationId: detailsDocumentAttachment
      tags:
        - Document Attachments
      parameters:
        - name: id
          in: path
          description: Document UUID.
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: attachment_id
          in: path
          description: Attachment UUID.
          schema:
            type: string
          required: true
          example: 89ce2f49-10fb-4e9b-b5f3-e28be2a5c042
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAttachmentResponse'
              examples:
                Document Attachment Details:
                  value:
                    uuid: 076797cd-dca6-4083-a3pi-6960714209d9
                    date_created: '2024-07-15T21:14:39.973077Z'
                    created_by:
                      id: bSfiuAJNokERwsBxynKjwA
                      email: sergio@pandadoc.com
                      first_name: Sergio
                      last_name: ''
                      avatar: null
                    name: document.pdf
                    type: general
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
    delete:
      summary: Delete Document Attachment
      description: Deletes an attachment from the document.
      operationId: deleteDocumentAttachment
      tags:
        - Document Attachments
      parameters:
        - name: id
          in: path
          description: Document UUID.
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: attachment_id
          in: path
          description: Attachment UUID.
          schema:
            type: string
          required: true
          example: 89ce2f49-10fb-4e9b-b5f3-e28be2a5c042
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/attachments/{attachment_id}/download':
    get:
      summary: Download Document Attachment
      description: Download an attachment by ID.
      operationId: downloadDocumentAttachment
      tags:
        - Document Attachments
      parameters:
        - name: id
          in: path
          description: Document UUID.
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: attachment_id
          in: path
          description: Attachment UUID.
          schema:
            type: string
          required: true
          example: 89ce2f49-10fb-4e9b-b5f3-e28be2a5c042
      responses:
        '200':
          description: OK
          content:
            application/*:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/fields':
    get:
      summary: List Document Fields
      description: Return the list of fields for a particular document.
      operationId: listDocumentFields
      tags:
        - Document Fields
      parameters:
        - name: id
          in: path
          description: Document UUID.
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          format: uuid
                          nullable: false
                        name:
                          type: string
                        title:
                          type: string
                        value: {}
                        field_id:
                          type: string
                        type:
                          type: string
                          enum:
                            - text
                            - signature
                            - checkbox
                            - date
                            - dropdown
                            - stamp
                            - initials
                            - radio_buttons
                            - collect_file
                            - payment_details
                        placeholder:
                          type: string
                        assigned_to:
                          type: object
                          properties:
                            id:
                              type: string
                            first_name:
                              type: string
                            last_name:
                              type: string
                            email:
                              type: string
                            phone:
                              type: string
                            recipient_type:
                              type: string
                            has_completed:
                              type: boolean
                            signing_order: {}
                            delivery_methods: {}
                            redirect: {}
                            type:
                              type: string
                        layout:
                          $ref: '#/paths/~1public~1v1~1documents~1%7Bid%7D~1fields/post/requestBody/content/application~1json/schema/properties/fields/items/properties/layout'
                        section_uuid:
                          type: string
                          format: uuid
              examples:
                List Document Fields:
                  value:
                    fields:
                      - uuid: d6948f39-612a-4626-a439-ca9e0cbbda7c
                        name: Text
                        title: ''
                        value: ''
                        assigned_to:
                          id: ''
                          first_name: ''
                          last_name: ''
                          email: ''
                          phone: ''
                          recipient_type: null
                          has_completed: false
                          signing_order: null
                          delivery_methods: {}
                          redirect: {}
                          type: recipient
                        field_id: text_d6948f39-612a-4626-a439-ca9e0cbbda7c
                        type: text
                        settings:
                          required: true
                          placeholder: Enter value
                          masked: false
                          multiline: true
                        layout:
                          page: 1
                          position:
                            offset_x: '1'
                            offset_y: '1'
                            anchor_point: topleft
                          style:
                            width: 1
                            height: 1
                        merge_field: null
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
    post:
      summary: Create Document Fields
      description: Creates fields for a particular document.
      operationId: createDocumentFields
      tags:
        - Document Fields
      parameters:
        - name: id
          in: path
          description: Document UUID.
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fields:
                  type: array
                  description: An array of fields to place on a document.
                  items:
                    type: object
                    properties:
                      field_id:
                        type: string
                        description: Optional unique identifier.
                      merge_field:
                        type: string
                        description: |
                          Use this to dynamically populate this field with data from your CRM or API. Supported field types:
                            * text
                            * checkbox
                            * date
                            * dropdown
                            * radio_buttons
                      type:
                        type: string
                        enum:
                          - text
                          - signature
                          - checkbox
                          - date
                          - dropdown
                          - stamp
                          - initials
                          - radio_buttons
                          - collect_file
                          - payment_details
                      placeholder:
                        type: string
                      assigned_to:
                        type: string
                        description: Optional uuid of a recipient.
                      layout:
                        type: object
                        properties:
                          page:
                            type: integer
                          position:
                            type: object
                            properties:
                              offset_x:
                                type: number
                              offset_y:
                                type: number
                              anchor_point:
                                type: string
                                enum:
                                  - topleft
                                  - topright
                                  - bottomleft
                                  - bottomright
                            required:
                              - offset_x
                              - offset_y
                              - anchor_point
                          style:
                            type: object
                            properties:
                              width:
                                type: integer
                              height:
                                type: integer
                            required:
                              - width
                              - height
                        required:
                          - page
                          - position
                          - style
                    required:
                      - type
                      - layout
            examples:
              Create Document Fields:
                value:
                  fields:
                    - type: text
                      layout:
                        page: 1
                        position:
                          offset_x: 1
                          offset_y: 1
                          anchor_point: topleft
                        style:
                          width: 1
                          height: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: '#/paths/~1public~1v1~1documents~1%7Bid%7D~1fields/get/responses/200/content/application~1json/schema/properties/fields/items'
              examples:
                Create Document Fields:
                  value:
                    fields:
                      - uuid: d6948f39-612a-4626-a439-ca9e0cbbda7c
                        name: Text
                        title: ''
                        value: ''
                        assigned_to:
                          id: ''
                          first_name: ''
                          last_name: ''
                          email: ''
                          phone: ''
                          recipient_type: null
                          has_completed: false
                          signing_order: null
                          delivery_methods: {}
                          redirect: {}
                          type: recipient
                        field_id: text_d6948f39-612a-4626-a439-ca9e0cbbda7c
                        type: text
                        settings:
                          required: true
                          placeholder: Enter value
                          masked: false
                          multiline: true
                        layout:
                          page: 1
                          position:
                            offset_x: '1'
                            offset_y: '1'
                            anchor_point: topleft
                          style:
                            width: 1
                            height: 1
                        merge_field: null
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/ownership':
    patch:
      tags:
        - Documents
      summary: Update document ownership
      operationId: transferDocumentOwnership
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
          example: BhVzRcxH9Z2LgfPPGXFUBa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTransferOwnershipRequest'
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/documents/ownership:
    patch:
      tags:
        - Documents
      summary: Transfer all documents ownership
      operationId: transferAllDocumentsOwnership
      description: |
        This method transfers ownership of all documents from one member to another.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTransferAllOwnershipRequest'
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/move-to-folder/{folder_id}':
    post:
      tags:
        - Documents
      summary: Document move to folder
      operationId: documentMoveToFolder
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
          example: ZPeAfcpzr9aiVs5vqUf6jg
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: Specify folder ID.
          example: ZPeAfcpzr9aiVs5vqUf6jg
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/recipients':
    post:
      summary: Add Document Recipient
      operationId: addDocumentRecipient
      description: "Add a CC recipient to a document.\n\n> \U0001F6A7 Before you start\n> \n> To add a CC recipient, please ensure that:\n> \n> - You have the 'Can Manage Recipients' permission.\n> - This recipient is already created in your contacts. If not, add them using the [Create Contact](https://developers.pandadoc.com/reference/create-contact) endpoint.\n\nTo add a new CC recipient to a document, two parameters must be included in the request body:\n\n- `kind`: Set this parameter to `contact` to specify an individual contact.\n- `id`:  Input the ID of the desired contact.\n\nTo retrieve the contact's ID, use the [List Contacts](https://developers.pandadoc.com/reference/list-contacts) endpoint to access a list of all contacts, and then locate the desired contact by searching using the name or email address within the returned list.\n\n### Document status\n\nYou can add CC recipients in any document status except for the 'Expired' (`document.voided`) and 'Declined' (`document.declined`).\n\n> \U0001F4D8 Email notification to access the document\n> \n> **Note**: When a document is in one of the following statuses: 'Sent' (`document.sent`), 'Viewed' (`document.viewed`), 'Completed' (`document.completed`), 'Waiting for Payment' (`document.waiting_pay`), or 'Paid' (`document.paid`), any added CC recipient will receive an instant notification at their email address, allowing them access to the document.\n"
      tags:
        - Document Recipients
      parameters:
        - name: id
          in: path
          description: Document UUID
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRecipientCreateRequest'
            examples:
              Add CC Document Recipient:
                value:
                  id: pGkLnJUAx99JpXJy5DVD30
                  kind: contact
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRecipientResponse'
              examples:
                Add CC Document Recipient:
                  value:
                    recipient_id: wdNMxCRFqH2DaZDcR2D2Gc
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/recipients/{recipient_id}':
    delete:
      summary: Delete Document Recipient
      operationId: deleteDocumentRecipient
      description: "Remove a recipient from a document.\n\n> \U0001F6A7 Before you start\n> \n> Please ensure that you have the 'Can Manage Recipients' permission.\n\nTo remove a recipient from a document, you must specify their ID in the path parameter (note that this is different from their contact's ID). The recipient's ID can be retrieved via the [Document Details](https://developers.pandadoc.com/reference/document-details) endpoint.\n\n### Document status\n\n- Removing a signer is only possible when the document is in the 'Draft' (`document.draft`) status and this action will unassign all fields associated with that signer.\n- Removing a CC recipient is allowed in any document status except for the 'Expired' (`document.voided`) and 'Declined' (`document.declined`). If a CC recipient is removed, their access will be revoked.\n"
      tags:
        - Document Recipients
      parameters:
        - name: id
          in: path
          description: Document UUID
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: recipient_id
          in: path
          description: Recipient UUID
          schema:
            type: string
          required: true
          example: tf5dGS3Tmu3cj228ao6fnc
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/recipients/recipient/{recipient_id}':
    patch:
      summary: Update Document Recipient
      description: "Modify recipient's personal details.\n\n> \U0001F6A7 Before you start\n> \n> To edit a recipient, please ensure that you have the 'Can Edit Document' permission.\n\nUse this endpoint to easily fix typos in a recipient's name or email, or to change any other recipient information in a sent document. \n\n> \U0001F4D8 Please note that changes made to a recipient within a document will also update their `Contact` information. However, these changes will not update information about this recipient in other documents where they have already been added.\n\n### Document status\n\n- You can edit a signer in the following document statuses:\n  - 'Draft' (`document.draft`),\n  - 'Waiting Approval' (`document.waiting_approval`),\n  - 'Approved' (`document.approved`),\n  - 'Rejected' (`document.rejected`),\n  - 'Sent' (`document.sent`),\n  - 'Viewed' (`document.viewed`), but only until they have signed the document.\n- You can edit a CC recipient in any document status **except**:\n  - 'Expired' (`document.voided`),\n  - 'Declined' (`document.declined`).\n\n> \U0001F4D8 Updating a recipient's email after sending a document\n> \n> **Note**: If you update a recipient's email address after sending a document, they will receive an instant notification at the new email address, allowing them access to the document. Access via the previous email will be revoked.\n\n### Restrictions for updating a recipient's email\n\n- You cannot change emails of PandaDoc users.\n- You cannot use the email addresses of existing contacts. If you need to use an email from an existing contact, use the [Change Signer](https://developers.pandadoc.com/reference/change-signer) endpoint to replace a signer with this contact.\n"
      operationId: editDocumentRecipient
      tags:
        - Document Recipients
      parameters:
        - name: id
          in: path
          description: Document UUID.
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: recipient_id
          in: path
          description: Recipient UUID.
          schema:
            type: string
          required: true
          example: tf5dGS3Tmu3cj228ao6fnc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRecipientEditRequest'
            examples:
              Update Document Recipient:
                value:
                  first_name: New First Name
                  last_name: New Last Name
                  phone: '+3511111111111'
                  company: PandaDoc
                  title: ''
                  street_address: ''
                  city: ''
                  state: ''
                  postal_code: ''
                  country: ''
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{id}/recipients/{recipient_id}/reassign':
    post:
      summary: Change Signer (Reassign Document Recipient)
      operationId: reassignDocumentRecipient
      description: "Reassign fields to another signer.\n\n> \U0001F6A7 Before you start\n> \n> To change a signer in a document, please ensure that:\n> \n> - You have the 'Can Manage Recipients' permission.\n> - New signer is already created in your contacts. If not, add them using the [Create Contact](https://developers.pandadoc.com/reference/create-contact) endpoint.\n\nYou can reassign fields to another signer before the original signer has signed the document. You can choose any person except those recipients who have already signed the document.\n\nThe endpoint path includes the `recipient_id` of the original signer and the request body must include the following two parameters:\n\n- `kind`: Set this parameter to `contact` to specify an individual contact.\n- `id`: Input the ID of the contact you want to use as a replacement for the original signer.\n\nTo retrieve the contact's ID, use the [List Contacts](https://developers.pandadoc.com/reference/list-contacts) endpoint to access a list of all contacts, and then locate the desired contact by searching using the name or email address within the returned list.\n\nOnce you execute the call to change the signer, the original signer will be entirely removed from the document. If you wish to retain the original signer as a CC recipient, you can re-add them using the [Add CC Recipient](https://developers.pandadoc.com/reference/add-new-recipient-cc) endpoint.\n\n> \U0001F6A7 Pre-filled fields\n> \n> If you change the signer in a document that has already been sent, the signer's pre-filled fields will be completely reset. In the 'Draft' (`document.draft`) status, pre-filled fields will remain.\n"
      tags:
        - Document Recipients
      parameters:
        - name: id
          in: path
          description: Document UUID
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: recipient_id
          in: path
          description: Recipient UUID
          schema:
            type: string
          required: true
          example: tf5dGS3Tmu3cj228ao6fnc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRecipientCreateRequest'
            examples:
              Change Signer:
                value:
                  kind: contact
                  id: pGkLnJUAx99JpXJy5DVD30
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRecipientResponse'
              examples:
                Change Signer:
                  value:
                    recipient_id: XqbbPMNn9SAjX6fyCSSN2X
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{document_id}/sections':
    get:
      tags:
        - Document Sections (Bundles)
      summary: List Document Sections
      operationId: listSections
      description: |
        Retrieve information about the sections within a document.
      parameters:
        - examples:
            List Document Sections:
              value: BhVzRcxH9Z2LgfPPGXFUBa
          name: document_id
          description: Document ID
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSectionListResponse'
              examples:
                List Document Sections:
                  value:
                    results:
                      - uuid: fGE5F6rAeBSPokHMBt8Pbm
                        name: '[DEV] Test Template with HTML Tags'
                      - uuid: MBMsxWgditbvUAgSKXR8kA
                        name: Sample Document from PDF with Field Tags
                      - uuid: JKmXhd9e4ZwNMyaEYFJEkK
                        name: Sample Document from PDF with Form Fields
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{document_id}/sections/uploads':
    post:
      tags:
        - Document Sections (Bundles)
      summary: Create Document Section
      operationId: uploadSection
      description: "With this endpoint, you can add a new section to an existing PandaDoc document (create a bundle).\n\nYou can upload a section to the document using a PandaDoc template or a file by URL.\n\n> ⏱️ Document Section creation is a non-blocking (asynchronous) operation\n> \n> The document creation process may take some time.\n> \n> With a successful request, you receive a response with the created upload ID and status `document_sections_upload.uploaded`. After processing completes on our servers, usually a few seconds, the document moves to the `document_sections_upload.PROCESSED` status.\n\n## Using a PandaDoc template\n\n<details>\n\n  > \U0001F6A7 Current Version Limitations\n  > \n  > Images in sections are currently not supported.\n\n  > \U0001F4D8 Pricing tables note\n  > \n  > Each pricing table must have a unique name to populate it with data correctly.\n\n  A PandaDoc template is a document template created and edited in the PandaDoc web application. Our [help center](https://support.pandadoc.com/hc/en-us/articles/360041230753-Save-time-with-templates) has further information on PandaDoc templates. \n\n  If you don't have any PandaDoc Template yet, you can easily create one by clicking [Copy a Sample PandaDoc template](https://app.pandadoc.com/get-this-template/?pt=public_template&pub=eiC3a6qBVfEfbw7VCYgaeN). This will open the PandaDoc application in a new tab, copy the sample template into your account, and create a new document from the template.\n</details>\n\n## Using a File by URL\n\n<details>\n  \n  Using this endpoint you can add a section to the existing document. The section is created from a file you upload. The file can be a PDF, DocX, or RTF.\n\n  > \U0001F4D8 We've prepared two samples that you can use to test the request.\n  > Download them here:\n  >\n  > - [Download a Sample PDF with Form Fields](https://cdn2.hubspot.net/hubfs/2127247/public-templates/SamplePandaDocPdf_FormFields.pdf) \n  > - [Download a Sample PDF with Field Tags](https://5132871.fs1.hubspotusercontent-na1.net/hubfs/5132871/SamplePandaDocPdf_FieldTags_updated.pdf)\n\n  > ❗️ Limitations\n  > \n  > * This method does not support multiple documents.\n  > * The maximum supported file size is 50 MB. API returns \"413 Request entity too large\" in case of bigger files.\n  > * PandaDoc does not support creating document from a PDF with encrypted files (to check whether a file is encrypted or not, try Get info -> Secure: Password Encrypted).\n\n  ### PDF Form Fields\n\n  PandaDoc recognizes PDF form fields. To enable this feature, pass the optional `parse_form_fields` value as `true` when making a create document section API call. We support Text fields, Dropdowns, and Signature fields.\n\n  If you would like to pass additional parameters to configure PDF form fields, use the PDF field name as an optId. You can use a PDF editor such as Adobe Acrobat, Foxit to get and edit field names in your PDF.\n\n  [**Download a Sample PDF with Form Fields**](https://cdn2.hubspot.net/hubfs/2127247/public-templates/SamplePandaDocPdf_FormFields.pdf)\n\n  ### PDF/DocX/RTF Field Tags\n\n  This parsing format allows a word processor such as [Microsoft Word](https://support.office.com/en-us/article/Save-as-PDF-d85416c5-7d77-4fd6-a216-6f4bf7c7c110?ui=en-US&rs=en-US&ad=US) or [Google Docs](https://support.google.com/drive/answer/2423534?co=GENIE.Platform%3DDesktop&hl=en) to prepare a document and save it in PDF, DocX or RTF format.\n\n  Within the text, PandaDoc parses field tags. A field tag starts and ends with brackets. The field tag includes basic information on how to create a form field in the PandaDoc document. The request JSON object `optId` can also extend this information for even greater control.\n\n  Here is an example of how the field tag in a PDF/DocX/RTF  is converted to a text field in the PandaDoc document:\n\n  ![](https://files.readme.io/38afedf-ex3.png \"ex3.png\")\n\n  [**Download a Sample PDF with Field Tags**](https://cdn2.hubspot.net/hubfs/2127247/public-templates/SamplePandaDocPdf_FieldTags.pdf)\n\n  #### PDF Field Tag Key\n\n  ![](https://files.readme.io/a81fbf1-field-tag-structure.png \"field-tag-structure.png\")\n\n  | Number | Key         | Description                                                                                                                                                                                                                                                                               | Example                           |\n  | :----- | :---------- | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :-------------------------------- |\n  | 1      | `fieldType` | Field type from the table documented below                                                                                                                                                                                                                                                | `signature`, or `s` for shorthand |\n  | 2      | `*`         | Optional `*` denotes the field is not required                                                                                                                                                                                                                                            | `*`                               |\n  | 3      | `role`      | Role name. Associate the field tag with a recipient role. Roles must be assigned to recipients in the request body. In this case we are using role `s1` to keep the length short and denote the concept of \"signer 1\". `s1` would be the value passed as role in a recipient JSON object. | `s1`                              |\n  | 4      | `optId`     | Optional field Id. Specify more information about the field tag within the post request by using this id.                                                                                                                                                                                 | `sigBox17`                        |\n  | 5      | `_____`     | Use underscores to widen the field if desired. The form fields in PandaDoc will scale to the length and size of your field tag.                                                                                                                                                           | `_____`                           |\n\n  > \U0001F6A7 Role names restrictions\n  > \n  > Underscores are not supported in role names for a file with a Field Tag.\n\n  #### PDF/DocX/RTF Field Tag Supported Types\n\n  | Field Type  | Short Notation | Is PandaDoc Field |\n  | :---------- | :------------- | :---------------- |\n  | `textfield` | `t`            | Field             |\n  | `checkbox`  | `c`            | Field             |\n  | `signature` | `s`            | Field             |\n  | `date`      | `d`            | Field             |\n  | `initials`  | `i`            | Field             |\n  | `dropdown`  | `dd`           | Field             |\n\n  ```json Field Tags Example\n  \"fields\": {  \n    \"textfield\": {  \n        \"value\": \"Jane\",\n        \"role\": \"user\"\n    },\n    \"dropdown\": {\n        \"value\": \"opt1\",\n        \"role\": \"user\",\n        \"options\":[\n          \"opt1\",\n          \"opt2\",\n          \"opt3\"\n        ]\n    },\n    \"checkbox\": {  \n        \"value\": true,\n        \"role\": \"user\"\n    },\n    \"date\":{\n        \"value\": \"2022-05-20\",\n        \"role\": \"user\"\n    },\n    \"signature\": {  \n        \"value\": \"\",\n        \"role\": \"user\"\n    }\n  }\n  ```\n\n  > \U0001F4D8 Fields in PandaDoc\n  > \n  > The following article explains how to use Fields: [Everything you need to know about Fields](https://support.pandadoc.com/hc/en-us/articles/360040595714--Editor-2-0-Fields)\n\n  ### Signing order\n\n  Set a signing order for document section sections created from a file.\n\n  ```json\n  \"recipients\": [  \n    {  \n      \"email\": \"josh@example.com\",\n      \"first_name\": \"Josh\",\n      \"last_name\": \"Ron\",\n      \"role\": \"user\",\n      \"signing_order\": 1\n    }\n  ]\n  ```\n\n  > \U0001F4D8 Signing order in PandaDoc\n  >\n  > https://support.pandadoc.com/en/articles/9714771-signing-order: [How to use signing order](https://support.pandadoc.com/en/articles/9714771-signing-order)\n\n  ### Error handling\n\n  | Error description | Type | Root cause |\n  |---|---|---|\n  | Document version 1 is not supported. | Validation errors: Form fields | The creation document section is supported only for document version 2 |\n  | PDF content hasn't been processed: document is broken or locked | Processing errors: Failed to process document content | Document converter service can’t process PDF. This may be caused by locked PDF or if it’s broken. |\n  | Error occurred while parsing PDF field tags. Please try PDF flattening or reach out to support | Processing errors: Field tag / Form field validation error | Doc converter managed to parse PDF and extract tags, but at least 1 of them is invalid (having negative position, for example). Usually we recommend PDF flattening and it helps |\n  | No role='{role}' for field tag specified in `recipients` found, roles passed were {roles} | Validation errors: Field tags | Role is invalid. When the role specified in field tag is empty or wasn’t provided in a payload for any recipient |\n  | All field tags within PDF must be declared within `fields`\_ object of the JSON Payload. No field with optId='{optid}' found in fields object, fields passed were {optids} | Validation errors: Field tags | Label is invalid. Occurs when **optId** specified in field tag is empty or no field with **name = optId** was provided in a payload |\n  | One of field tags in PDF with type='{field}' doesn't have a role | Validation errors: Field tags | Field tag in PDF has no role. One of field tags in PDF with type=% doesn't have a role. |\n  | Role for form field with name='{role}' is not provided in payload | Validation errors: Form fields | Role for form field with ‘name’ is not provided. Occurs when `role` for form field with name=%s\_ is not provided in payload |\n  | Field for form field with name='{name}' is not specified in payload, available names are {names} | Validation errors: Form fields | Field ‘name’ is not specified in payload. Occurs when no field with name = form field name was provided in a payload |\n  | No role='{role}' for form field specified in 'recipients' found, roles passed were {roles}\" | Validation errors: Form fields | Failed to resolve field actor for `role` in form field with ‘name’.\_ \_Occurs when role from the form field is not found in recipient’s from payload |\n  | Failed to download file from link {url}. | Source errors | Error on attempt to download file.\_  An error has occurred on an attempt to download file using the provided ‘url’ in payload |\n  | Failed to download file from link {url} (status code: {status code}) | Source errors | Error with HTTP status code on attempt to download file.\_  An error has occurred on an attempt to download file using the provided ‘url’ in payload - remote server responded with the HTTP status code |\n  | Content type='{type}' is not supported, available types are {types} | Source errors | Content type is not supported.\_  Content type should be one of the following: PDF, ZIP, doc, docx, RTF |\n  | The maximum file size is exceeded, limit is {limit} MB | Source errors | The file size has exceeded the allowed limits. An error occurred while trying to download a file that is too large (limit is 50M) |\n    \n  </details>\n"
      parameters:
        - examples:
            Create Document Section from Template:
              value: CFz2UnLXDck3UJkeGGEuB3
          name: document_id
          description: Document ID
          in: path
          schema:
            type: string
          required: true
        - name: merge_field_scope
          description: |
            Determines how the fields are mapped when creating a section.
              * document: Default value. The fields of the entire document are updated.
              * upload: Only the fields from the created section are updated. The merge field is appended with the upload ID.
          in: query
          schema:
            type: string
            enum:
              - document
              - upload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - allOf:
                    - $ref: '#/components/schemas/UploadSectionByTemplateRequest'
                    - title: From PandaDoc Template
                - allOf:
                    - $ref: '#/components/schemas/UploadSectionRequest'
                    - title: From File By Url
                      properties:
                        url:
                          type: string
                          example: 'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf'
                          description: Secure (HTTPS) and publicly accessible URL to the PDF document.
                      required:
                        - url
            examples:
              Create Document Section From Template:
                value:
                  name: New section from template
                  template_uuid: hryJY9mqYZHjQCYQuSjRQg
                  recipients:
                    - role: Client
                      email: client@pandadoc.com
                    - role: Sender
                      email: sender@pandadoc.com
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSectionResponse'
              examples:
                Create Document Section From Template:
                  value:
                    uuid: LQ6cUT7xevPLUEgJeF8Zrm
                    document_uuid: CFz2UnLXDck3UJkeGGEuB3
                    status: document_sections_upload.UPLOADED
                    name: 'null'
                    date_created: '2023-08-28T15:48:09.379860Z'
                    date_modified: '2023-08-28T15:48:09.379860Z'
                    info_message: You need to poll the Document Sections Upload Status method until the status will be changed to document_sections_upload.PROCESSED
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{document_id}/sections/uploads?upload':
    post:
      tags:
        - Document Sections (Bundles)
      summary: Create Document Section from File Upload
      operationId: uploadSectionWithUpload
      description: "With this endpoint, you can add a new section to an existing PandaDoc document (create a bundle). The section is created from a file you upload. The file can be a PDF, DocX, or RTF.\n\n> \U0001F4D8 We've prepared two samples that you can use to test the request.\n> Download them here:\n>\n> - [Download a Sample PDF with Form Fields](https://cdn2.hubspot.net/hubfs/2127247/public-templates/SamplePandaDocPdf_FormFields.pdf) \n> - [Download a Sample PDF with Field Tags](https://5132871.fs1.hubspotusercontent-na1.net/hubfs/5132871/SamplePandaDocPdf_FieldTags_updated.pdf)\n\n\n> \U0001F6A7 Usage specifics\n> \n> 1. This method uses a `multipart/form-data` request type instead of the `application/json` typically found in the PandaDoc API. This is to accommodate the upload of the included document.\n> 2. You can send a URL instead of a file in the document creation request.  \n>    In this case, you need to use the `application/json` content type and add the URL parameter in the body request. As an example, see [Create from public PDF](https://developers.pandadoc.com/docs/create-and-send-a-document-from-a-publicly-available-pdf) guide for more details.\n> 3. A file you upload is not stored in your PandaDoc account, so you have to upload it with every request.\n\n> ❗️ Limitations\n> \n> 1. This method does not support multiple documents.\n> 2. The maximum supported file size is 50 MB. API returns \"413 Request entity too large\" in case of bigger files.\n> 3. PandaDoc does not support creating document from a PDF with encrypted files (to check whether a file is encrypted or not, try Get info -> Secure: Password Encrypted).\n\n> ⏱️ Document Section creation is a non-blocking (asynchronous) operation\n> \n> The document creation process may take some time.\n> \n> With a successful request, you receive a response with the created upload ID and status `document_sections_upload.uploaded`. After processing completes on our servers, usually a few seconds, the document moves to the `document_sections_upload.PROCESSED` status.\n\n## PDF Form Fields\n\nPandaDoc recognizes PDF form fields. To enable this feature, pass the optional `parse_form_fields` value as `true` when making a create document section API call. We support Text fields, Dropdowns, and Signature fields.\n\nIf you would like to pass additional parameters to configure PDF form fields, use the PDF field name as an optId. You can use a PDF editor such as Adobe Acrobat, Foxit to get and edit field names in your PDF.\n\n[**Download a Sample PDF with Form Fields**](https://cdn2.hubspot.net/hubfs/2127247/public-templates/SamplePandaDocPdf_FormFields.pdf)\n\n## PDF/DocX/RTF Field Tags\n\nThis parsing format allows a word processor such as [Microsoft Word](https://support.office.com/en-us/article/Save-as-PDF-d85416c5-7d77-4fd6-a216-6f4bf7c7c110?ui=en-US&rs=en-US&ad=US) or [Google Docs](https://support.google.com/drive/answer/2423534?co=GENIE.Platform%3DDesktop&hl=en) to prepare a document and save it in PDF, DocX or RTF format.\n\nWithin the text, PandaDoc parses field tags. A field tag starts and ends with brackets. The field tag includes basic information on how to create a form field in the PandaDoc document. The request JSON object `optId` can also extend this information for even greater control.\n\nHere is an example of how the field tag in a PDF/DocX/RTF  is converted to a text field in the PandaDoc document:\n\n![](https://files.readme.io/38afedf-ex3.png \"ex3.png\")\n\n[**Download a Sample PDF with Field Tags**](https://cdn2.hubspot.net/hubfs/2127247/public-templates/SamplePandaDocPdf_FieldTags.pdf)\n\n<details>\n\n  ### PDF Field Tag Key\n\n  ![](https://files.readme.io/a81fbf1-field-tag-structure.png \"field-tag-structure.png\")\n\n  | Number | Key         | Description                                                                                                                                                                                                                                                                               | Example                           |\n  | :----- | :---------- | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :-------------------------------- |\n  | 1      | `fieldType` | Field type from the table documented below                                                                                                                                                                                                                                                | `signature`, or `s` for shorthand |\n  | 2      | `*`         | Optional `*` denotes the field is not required                                                                                                                                                                                                                                            | `*`                               |\n  | 3      | `role`      | Role name. Associate the field tag with a recipient role. Roles must be assigned to recipients in the request body. In this case we are using role `s1` to keep the length short and denote the concept of \"signer 1\". `s1` would be the value passed as role in a recipient JSON object. | `s1`                              |\n  | 4      | `optId`     | Optional field Id. Specify more information about the field tag within the post request by using this id.                                                                                                                                                                                 | `sigBox17`                        |\n  | 5      | `_____`     | Use underscores to widen the field if desired. The form fields in PandaDoc will scale to the length and size of your field tag.                                                                                                                                                           | `_____`                           |\n\n  > \U0001F6A7 Role names restrictions\n  > \n  > Underscores are not supported in role names for a file with a Field Tag.\n\n  ### PDF/DocX/RTF Field Tag Supported Types\n\n  | Field Type  | Short Notation | Is PandaDoc Field |\n  | :---------- | :------------- | :---------------- |\n  | `textfield` | `t`            | Field             |\n  | `checkbox`  | `c`            | Field             |\n  | `signature` | `s`            | Field             |\n  | `date`      | `d`            | Field             |\n  | `initials`  | `i`            | Field             |\n  | `dropdown`  | `dd`           | Field             |\n\n  > \U0001F4D8 Fields in PandaDoc\n  > \n  > The following article explains how to use Fields: [Everything you need to know about Fields](https://support.pandadoc.com/hc/en-us/articles/360040595714--Editor-2-0-Fields)\n\n  ```json Field Tags Example\n  \"fields\": {  \n          \"textfield\": {  \n              \"value\": \"Jane\",\n              \"role\": \"user\"\n          },\n          \"dropdown\": {\n              \"value\": \"opt1\",\n              \"role\": \"user\",\n              \"options\":[\n                \"opt1\",\n                \"opt2\",\n                \"opt3\"\n              ]\n          },\n          \"checkbox\": {  \n              \"value\": true,\n              \"role\": \"user\"\n          },\n          \"date\":{\n              \"value\": \"2022-05-20\",\n              \"role\": \"user\"\n          },\n          \"signature\": {  \n              \"value\": \"\",\n              \"role\": \"user\"\n          }\n      }\n  ```\n\n</details>\n\n## Signing order\n\nSet a signing order for document section sections created from a file.\n\n```json\n\"recipients\": [  \n  {  \n    \"email\": \"josh@example.com\",\n    \"first_name\": \"Josh\",\n    \"last_name\": \"Ron\",\n    \"role\": \"user\",\n    \"signing_order\": 1\n  }\n]\n```\n\n## Error handling\n\n| Error description | Type | Root cause |\n|---|---|---|\n| Document version 1 is not supported. | Validation errors: Form fields | The creation document section is supported only for document version 2 |\n| PDF content hasn't been processed: document is broken or locked | Processing errors: Failed to process document content | Document converter service can’t process PDF. This may be caused by locked PDF or if it’s broken. |\n| Error occurred while parsing PDF field tags. Please try PDF flattening or reach out to support | Processing errors: Field tag / Form field validation error | Doc converter managed to parse PDF and extract tags, but at least 1 of them is invalid (having negative position, for example). Usually we recommend PDF flattening and it helps |\n| No role='{role}' for field tag specified in `recipients` found, roles passed were {roles} | Validation errors: Field tags | Role is invalid. When the role specified in field tag is empty or wasn’t provided in a payload for any recipient |\n| All field tags within PDF must be declared within `fields`\_ object of the JSON Payload. No field with optId='{optid}' found in fields object, fields passed were {optids} | Validation errors: Field tags | Label is invalid. Occurs when **optId** specified in field tag is empty or no field with **name = optId** was provided in a payload |\n| One of field tags in PDF with type='{field}' doesn't have a role | Validation errors: Field tags | Field tag in PDF has no role. One of field tags in PDF with type=% doesn't have a role. |\n| Role for form field with name='{role}' is not provided in payload | Validation errors: Form fields | Role for form field with ‘name’ is not provided. Occurs when `role` for form field with name=%s\_ is not provided in payload |\n| Field for form field with name='{name}' is not specified in payload, available names are {names} | Validation errors: Form fields | Field ‘name’ is not specified in payload. Occurs when no field with name = form field name was provided in a payload |\n| No role='{role}' for form field specified in 'recipients' found, roles passed were {roles}\" | Validation errors: Form fields | Failed to resolve field actor for `role` in form field with ‘name’.\_ \_Occurs when role from the form field is not found in recipient’s from payload |\n| Failed to download file from link {url}. | Source errors | Error on attempt to download file.\_  An error has occurred on an attempt to download file using the provided ‘url’ in payload |\n| Failed to download file from link {url} (status code: {status code}) | Source errors | Error with HTTP status code on attempt to download file.\_  An error has occurred on an attempt to download file using the provided ‘url’ in payload - remote server responded with the HTTP status code |\n| Content type='{type}' is not supported, available types are {types} | Source errors | Content type is not supported.\_  Content type should be one of the following: PDF, ZIP, doc, docx, RTF |\n| The maximum file size is exceeded, limit is {limit} MB | Source errors | The file size has exceeded the allowed limits. An error occurred while trying to download a file that is too large (limit is 50M) |\n"
      parameters:
        - name: document_id
          description: Document ID
          in: path
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: merge_field_scope
          description: |
            Determines how the fields are mapped when creating a section.
              * document: Default value. The fields of the entire document are updated.
              * upload: Only the fields from the created section are updated. The merge field is appended with the upload ID.
          in: query
          schema:
            type: string
            enum:
              - document
              - upload
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Binary PDF/DocX/RTF File.
                data:
                  allOf:
                    - $ref: '#/components/schemas/UploadSectionRequest'
                    - description: JSON as a multipart/form-data string.
      responses:
        '201':
          description: OK
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/UploadSectionResponse'
              examples:
                Create Document Section from File Upload:
                  value:
                    uuid: HiNXiDJazzufdxErSr5w6n
                    name: My Section
                    document_uuid: Gpzd2nXgFjCSЖzhTucci2E
                    status: document_sections_upload.UPLOADED
                    date_created: '2024-07-15T08:14:33.050351Z'
                    date_modified: '2024-07-15T08:14:33.050351Z'
                    info_message: You need to poll the Document Sections Upload Status method until the status will be changed to document_sections_upload.PROCESSED
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{document_id}/sections/uploads/{upload_id}':
    get:
      tags:
        - Document Sections (Bundles)
      summary: Document Section Upload Status
      operationId: sectionDetails
      description: |
        Receive the upload status of the document and sections by their `upload_id`.

        Requesting document section upload status is useful to ensure a document section upload is in the expected state before calling additional API methods.

        In response, you receive an array with `sections_uuid`. You can receive information about each section using the [Document Section Info](https://developers.pandadoc.com/reference/document-section-info) endpoint.

        ```json
            "section_uuids": [
                "H8T8CJofGY6JwTsWsPuDEF",
                "8MwLaU4SaZywqLiDk26mDF"
            ]
        ```

        ## Available Document Section Upload Statuses

        The following is a complete list of all possible document statuses returned:

        | Document Status                      | Status Description                                                                                                                                                |
        | :----------------------------------- | :---------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `document_sections_upload.UPLOADED`  | The document section upload process has just been created. It is in processing and will be in `document_sections_upload.PROCESSED` state momentarily.             |
        | `document_sections_upload.PROCESSED` | The document sections upload is processed and the sections are already created in the document. All aspects of the document sections can be edited in this state. |
        | `document_sections_upload.ERROR`     | Document section upload procces has been failed. For more information check error details in the response.                                                        |
      parameters:
        - name: document_id
          description: Document ID.
          in: path
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: upload_id
          description: Upload ID.
          in: path
          schema:
            type: string
          required: true
          example: LQ6cUT7xevPLUEgJeF8Zrm
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSectionStatusResponse'
              examples:
                Document Section Upload Status:
                  value:
                    uuid: zVbriqiPaulqj4ThcLeKQG
                    name: Sample Section
                    document_uuid: Gpzd2nXgFjCSS3hTucci2E
                    status: document_sections_upload.PROCESSED
                    section_uuids:
                      - xn5gLB9ox1fbpZ9XDbAQsi
                    date_created: '2024-07-15T08:20:28.187477Z'
                    date_modified: '2024-07-15T08:20:31.839240Z'
                    info_message: null
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/{document_id}/sections/{section_id}':
    get:
      tags:
        - Document Sections (Bundles)
      summary: Document Section Details
      operationId: sectionInfo
      description: Receive information about each section.
      parameters:
        - name: document_id
          description: Document ID.
          in: path
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: section_id
          description: Section ID.
          in: path
          schema:
            type: string
          required: true
          example: LQ6cUT7xevPLUEgJeF8Zrm
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionInfoResponse'
              examples:
                Document Section Details:
                  value:
                    uuid: mcqRJhoEjDOUyT5AePMa9Z
                    name: New document
                    document_uuid: Gpzd2nXgFjCS3zipucci2E
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
    delete:
      tags:
        - Document Sections (Bundles)
      summary: Delete Document Section
      operationId: deleteSection
      description: Removes selected section from the document.
      parameters:
        - name: document_id
          in: path
          schema:
            type: string
          required: true
          description: Specify document ID.
          example: ZPeAfcpzr9aiVs5vqUf6jg
        - name: section_id
          in: path
          schema:
            type: string
          required: true
          description: Specify section ID.
          example: BhVzRcxH9Z2LgfPPGXFUBa
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/content-library-items:
    get:
      summary: List Content Library Item
      description: |
        The endpoint retrieves items from the content library in PandaDoc. This endpoint supports filtering options to narrow down the results, allowing users to search by query, tags, folder, and more.

        > ### ⚠️ Please avoid empty values for the parameters
        > API returns "400" error when any of the parameters has an empty value. Please remove such a parameter from the request or add a value.
      operationId: listContentLibraryItems
      tags:
        - Content Library Items
      parameters:
        - name: q
          description: Search query. Filter by content library item name.
          in: query
          schema:
            type: string
          example: Sample Pricing Table
        - name: id
          description: Specify content library item ID.
          in: query
          schema:
            type: string
          example: UXdP7Lnbvvr4WEb2wzM2hc
        - name: deleted
          description: Returns only the deleted content library items.
          in: query
          schema:
            type: boolean
        - name: folder_uuid
          description: The UUID of the folder where the content library items are stored.
          in: query
          schema:
            type: string
          example: S6xX7saJfA44mtJxGWd95L
        - name: count
          description: 'Specify how many content library items to return. Default is 50 content library items, maximum is 100 content library items.'
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
          example: 10
        - name: page
          description: Specify which page of the dataset to return.
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: tag
          description: Search tag. Filter by content library item tag.
          in: query
          schema:
            type: string
          example: pricing_tables
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentLibraryItemListResponse'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
    post:
      tags:
        - Content Library Items
      summary: Create Content Library Item
      operationId: createContentLibraryItem
      description: |
        This API endpoint allows users to create an empty item in the content library.
        No actual content or data is required to be provided in the initial creation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    url:
                      type: string
                      example: 'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf'
                      description: Secure (HTTPS) and publicly accessible URL to the PDF document.
                - $ref: '#/paths/~1public~1v1~1content-library-items%3Fupload/post/requestBody/content/multipart~1form-data/schema/properties/data/allOf/0'
            examples:
              Create Content Library Item:
                value:
                  name: CLI name example
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentLibraryResponse'
              examples:
                Create Content Library Item:
                  value:
                    id: va9aNuj3uX2w9M7uytn967
                    name: Sample CLI
                    date_created: '2024-07-08T14:41:42.625906Z'
                    date_modified: '2024-07-08T14:41:42.700084Z'
                    version: '2'
                    status: cli.PROCESSED
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/content-library-items?upload:
    post:
      tags:
        - Content Library Items
      summary: Create Content Library Item from File Upload
      operationId: createContentLibraryItemFromUpload
      description: |
        This asynchronous endpoint allows users to create a new CLI by uploading a file.
        The uploaded file is processed in the background to generate the CLI.
        The maximum allowable file size for upload is 100 MB.
        Field tags and form fields are not supported yet.
        Once the file is uploaded, the processing will happen asynchronously, and users need to check the status of the CLI creation.
      requestBody:
        required: true
        content:
          multipart/form-data:
            examples:
              Create Content Library Item:
                value:
                  data: '{"name": "Sample CLI"}'
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Binary PDF File
                data:
                  allOf:
                    - type: object
                      properties:
                        name:
                          type: string
                          description: The name of the Content Library Item.
                          example: CLI name example
                    - description: JSON as a multipart/form-data string.
      responses:
        '201':
          description: OK
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ContentLibraryResponse'
              examples:
                Create Content Library Item:
                  value:
                    id: va9aNuj3uX2w9M7uytn967
                    name: Sample CLI
                    date_created: '2024-07-08T14:41:42.625906Z'
                    date_modified: '2024-07-08T14:41:42.700084Z'
                    version: '2'
                    status: cli.PROCESSED
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/content-library-items/{id}':
    get:
      summary: Content Library Item Status
      description: |
        Requesting the CLI status helps verify that a CLI is in the expected state before invoking additional API methods.

        ## Available CLI Statuses

        The following is a complete list of all possible CLI statuses returned:

        | CLI Status | Status Description |
        |-----------------|--------------------|
        | `cli.UPLOADED`  | The CLI upload process has been initiated and is currently in progress. It will soon transition to the `cli.PROCESSED` state. |
        | `cli.PROCESSED` | The CLI has been successfully uploaded and created. At this stage, all aspects of the CLI are editable. |
        | `cli.ERROR`     | The CLI upload process has failed. Please refer to the error details in the response for more information. |
      operationId: statusContentLibraryItem
      tags:
        - Content Library Items
      parameters:
        - name: id
          description: Content Library Item ID
          in: path
          schema:
            type: string
          required: true
          example: EE8yUNg5HztqVAuH85He8V
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentLibraryResponse'
              examples:
                Content Library Item Status:
                  value:
                    id: vibuun3DXG8QDDLfXm27Ne
                    name: API Sample PandaDoc CLI
                    date_created: '2024-07-15T17:44:07.524617Z'
                    date_modified: '2024-07-15T17:44:07.613821Z'
                    version: '2'
                    status: cli.PROCESSED
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/content-library-items/{id}/details':
    get:
      summary: Content Library Item Details
      description: |
        Retrieve detailed information about a specific content library item using its ID. The details include:

        - **Roles**
        - **All fields with values**
        - **All tokens with values**
        - **Pricing information (pricing tables, products, etc)**
        - **Metadata**
        - **Tags**
        - **Modification Timestamps**: note that `date_modified` means any changes associated with the CLI, while `content_date_modified` logs any changes in CLI content.
      operationId: detailsContentLibraryItem
      tags:
        - Content Library Items
      parameters:
        - name: id
          description: Content Library Item ID
          in: path
          schema:
            type: string
          required: true
          example: UXdP7Lnbvvr4WEb2wzM2hc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentLibraryItemResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/templates:
    get:
      summary: List Templates
      description: 'Retrieves a list of templates. You can filter results by a search query, tags, or fields.'
      operationId: listTemplates
      tags:
        - Templates
      parameters:
        - name: q
          description: Search query. Filter by template name.
          in: query
          schema:
            type: string
          example: Sample onboarding template
        - name: shared
          description: Returns only the shared templates.
          in: query
          schema:
            type: boolean
        - name: deleted
          description: Returns only the deleted templates.
          in: query
          schema:
            type: boolean
        - name: count
          description: Specify how many templates to return.
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 50
          example: 10
        - name: page
          description: Specify which page of the dataset to return.
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: id
          description: Specify template ID.
          in: query
          schema:
            type: string
          example: e9LxBesSL73AeZMzeYdfvV
        - name: folder_uuid
          description: UUID of the folder where the templates are stored.
          in: query
          schema:
            type: string
          examples:
            List from a Folder:
              value: xDKHoJ8DkwhiTQSUzNveCJ
        - name: tag
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          description: Search tag. Filter by template tag.
        - name: fields
          description: A comma-separated list of additional fields to include in the response.
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - content_date_modified
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateListResponse'
              examples:
                Default:
                  value:
                    results:
                      - id: iMymdDd9XFD3HyxP5VD67Q
                        name: Blank
                        date_created: '2021-06-17T15:51:13.226974Z'
                        date_modified: '2021-06-17T15:51:13.326974Z'
                        version: '2'
                        content_date_modified: '2021-06-17T15:51:13.426974Z'
                List from a Folder:
                  value:
                    results:
                      - id: vibuun3DXG8QDDLfXm27Ne
                        name: New template
                        date_created: '2024-07-15T17:44:07.524617Z'
                        date_modified: '2024-07-15T17:44:07.613821Z'
                        version: '2'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
    post:
      tags:
        - Templates
      summary: Create Template
      operationId: createTemplate
      parameters:
        - name: fields
          description: A comma-separated list of additional fields to include in the response.
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - content_date_modified
          style: form
          explode: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateFromUrlRequest'
            examples:
              Create Template:
                value:
                  name: Sample Template
                  folder_uuid: EE8yUNg5HztqVAuH85He8V
                  owner:
                    email: john.doe@example.com
                  metadata:
                    my_favorite_pet: Panda
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateListResponse/properties/results/items'
              examples:
                Create Template:
                  value:
                    id: va9aNuj3uX2w9M7uytn967
                    name: Sample Template
                    date_created: '2024-07-08T14:41:42.625906Z'
                    date_modified: '2024-07-08T14:41:42.700084Z'
                    version: '2'
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/templates?upload:
    post:
      tags:
        - Templates
      summary: Create Template from File Upload
      operationId: createTemplateWithUpload
      description: |
        This asynchronous endpoint allows users to create a new template by uploading a file.

        The uploaded file is processed in the background to generate the template.
        The maximum allowable file size for upload is 100 MB.
        Field tags and form fields are not supported yet.

        Once the file is uploaded, the processing will happen asynchronously, and users need to check [the status of the template](https://developers.pandadoc.com/reference/template-status) creation.
      parameters:
        - name: fields
          description: A comma-separated list of additional fields to include in the response.
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - content_date_modified
          style: form
          explode: false
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Binary PDF/DocX/RTF File.
                data:
                  allOf:
                    - $ref: '#/components/schemas/CreateTemplateRequest'
                    - description: JSON as a multipart/form-data string.
      responses:
        '201':
          description: OK
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/TemplateListResponse/properties/results/items'
              examples:
                Create Template:
                  value:
                    id: va9aNuj3uX2w9M7uytn967
                    name: Sample Template
                    date_created: '2024-07-08T14:41:42.625906Z'
                    date_modified: '2024-07-08T14:41:42.700084Z'
                    version: '2'
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/templates/{id}/details':
    get:
      summary: Template Details
      description: |
        Get details about a template by `id`. Details include:

        - Basic template information (name, author, etc)
        - Roles
        - All fields with values
        - All tokens with values
        - Pricing information (pricing tables, products, quotes)
        - Template metadata
        - Template tags
        - Content placeholders
        - Modification timestamps. Note that `date_modified` means any changes associated with the template roles, while `content_date_modified` logs any changes in the template content.
      operationId: detailsTemplate
      tags:
        - Templates
      parameters:
        - examples:
            Template Details:
              value: vibuun3DXG8QDDLfXm27Ne
            Default:
              value: iMymdDd9XFD3HyxP5VD67Q
          name: id
          description: Template ID
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateDetailsResponse'
              examples:
                Template Details:
                  value:
                    id: vibuun3DXG8QDDLfXm27Ne
                    name: New template
                    date_created: '2024-07-15T17:44:07.524617Z'
                    date_modified: '2024-07-15T17:44:07.613821Z'
                    content_date_modified: '2024-07-15T17:44:08.685118Z'
                    created_by:
                      id: FA5QAu8UGA3oVDQZuPL75B
                      email: siarhei.soroka@pandadoc.com
                      first_name: Siarhei
                      last_name: Soroka
                      avatar: null
                      membership_id: RyMNXBjBPRppw56TfYBrXi
                    metadata: {}
                    tokens: []
                    fields: []
                    pricing: {}
                    tags: []
                    roles:
                      - id: UDhBsFhy4857fsdBJ11FuL
                        name: Client
                        signing_order: null
                        preassigned_person: null
                    version: '2'
                    content_placeholders: []
                    images: []
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/templates/{id}':
    delete:
      summary: Delete Template
      description: Delete a template
      operationId: deleteTemplate
      tags:
        - Templates
      parameters:
        - name: id
          description: Template ID
          in: path
          schema:
            type: string
          required: true
          example: EE8yUNg5HztqVAuH85He8V
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
    get:
      summary: Template Status
      description: |
        ## Available Template Statuses

        The following is a complete list of all possible template statuses returned:

        | Template Status      | Status Description                                                                                                                      |
        | :------------------- | :-------------------------------------------------------------------------------------------------------------------------------------- |
        | `template.UPLOADED`  | The template upload process has been initiated and is currently in progress. It will soon transition to the `template.PROCESSED` state. |
        | `template.PROCESSED` | The template has been successfully uploaded and created. At this stage, all aspects of the template are editable.                       |
        | `template.ERROR`     | The template upload process has failed. Please refer to the error details in the response for more information.                         |
      operationId: statusTemplate
      tags:
        - Templates
      parameters:
        - examples:
            Template Status:
              value: vibuun3DXG8QDDLfXm27Ne
          name: id
          description: Template ID
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateStatusResponse'
              examples:
                Template Status:
                  value:
                    id: vibuun3DXG8QDDLfXm27Ne
                    name: API Sample PandaDoc Template
                    date_created: '2024-07-15T17:44:07.524617Z'
                    date_modified: '2024-07-15T17:44:07.613821Z'
                    version: '2'
                    status: template.PROCESSED
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
    patch:
      tags:
        - Templates
      summary: Template Update
      operationId: updateTemplate
      description: "> \U0001F6A7 Template status\n> \n> You can only update a template in the PROCESSED status (`template.PROCESSED`). \n> \n> After creating a new template, it usually retains a `template.uploaded` status for 3-5 seconds while the template syncs across PandaDoc servers. When the template is available for further API calls, the template moves to the `template.PROCESSED` state. Use [Template Status](https://developers.pandadoc.com/reference/template-status) or Webhooks to check template status.\n"
      parameters:
        - examples:
            Update template:
              value: BhVzRcxH9Z2LgfPPGXFUBa
          name: id
          description: Template ID
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tokens:
                  $ref: '#/components/schemas/CreateTemplateRequest/properties/tokens'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/templates/{id}/editing-sessions':
    post:
      summary: |
        [Beta] Create Template Editing Session
      description: "Create a new editing session for a template. The session contains E-Token.\n\n> \U0001F6A7 This endpoint is not available by default.\n> Please reach out to your assigned CSM or AM to get it enabled for you.\n"
      operationId: createTemplateEditingSession
      tags:
        - Templates
      parameters:
        - name: id
          in: path
          description: Template ID
          schema:
            type: string
          required: true
          example: a53a2f96b91d47f99ee33f
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Default:
                value:
                  email: john.doe@pandadoc.com
                  lifetime: 100
            schema:
              $ref: '#/components/schemas/EditingSessionRequest'
      responses:
        '201':
          description: Template Editing Session created
          content:
            application/json:
              examples:
                Default:
                  value:
                    id: ce9825e5-3210-4a8f-1230-f32b643295d2
                    email: john.doe@pandadoc.com
                    expires_at: '2025-01-10T00:09:09.612651Z'
                    key: 985b695b56eaaa571e9bb8e522afd5bd335c32d7
                    template_id: a53a2f96b91d47f99ee33f
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseEditingSessionResponse'
                  - type: object
                    properties:
                      template_id:
                        type: string
                        description: ID of the template
                        example: a53a2f96b91d47f99ee33f
        '400':
          description: Bad request
          content:
            application/json:
              examples:
                Default:
                  value:
                    type: request_error
                    detail:
                      lifetime:
                        - Ensure this value is greater than or equal to 60.
              schema:
                properties:
                  type:
                    type: string
                    example: request_error
                  detail:
                    type: object
                    example:
                      count:
                        - A valid integer is required.
                      order_by:
                        - value is not a valid choice.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/forms:
    get:
      summary: List Forms
      description: Retrieve a paginated list of forms with optional filtering and sorting options.
      operationId: listForm
      tags:
        - Forms
      parameters:
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
          description: 'Specify how many forms to return. Default is 50 forms, maximum is 100 forms.'
          example: 10
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
          description: Specify which page of the dataset to return.
        - name: status
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - draft
                - active
                - disabled
          description: Specify which status of the forms dataset to return.
        - name: order_by
          in: query
          schema:
            type: string
            enum:
              - name
              - responses
              - status
              - created_date
              - modified_date
          description: Specify the form dataset order to return.
        - name: asc
          in: query
          schema:
            type: boolean
          description: Specify sorting the result-set in ascending or descending order.
        - name: name
          in: query
          schema:
            type: string
          description: Specify the form name.
          example: New Form
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormListResponse'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/documents/folders:
    get:
      summary: List Documents Folders
      operationId: listDocumentFolders
      description: "Get the list of folders which contain Documents in your account.\n\n> \U0001F4D8 \n> \n> The root folder is not listed in the response.\n\nFor the full list of folder operations and their limitations, see [Organize Documents and Folders](https://developers.pandadoc.com/docs/organize-folders).\n"
      tags:
        - Folders
      parameters:
        - name: parent_uuid
          in: query
          schema:
            type: string
          description: 'The UUID of the folder containing folders. To list the folders located in the root folder, remove this parameter in the request.'
          example: Nq8htXxFssmhRxAPSP4SBP
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 50
          description: 'Optionally, specify how many folders to return.'
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
          description: 'Optionally, specify which page of the dataset to return.'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsFolderListResponse'
              examples:
                List Document Folders:
                  value:
                    results:
                      - uuid: dHPHDto4urFW2jx5JzaeaB
                        name: My folder
                        date_created: '2024-07-15T17:19:21.048101Z'
                        has_folders: false
                        has_items: false
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
    post:
      summary: Create Documents Folder
      operationId: createDocumentFolder
      description: |
        Create a new folder to store your documents.

        For the full list of folder operations and their limitations, see [Organize Documents and Folders](https://developers.pandadoc.com/docs/organize-folders).
      tags:
        - Folders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentsFolderCreateRequest'
            examples:
              Create Document Folder:
                value:
                  name: A top level folder
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsFolderCreateResponse'
              examples:
                Create Document Folder:
                  value:
                    uuid: RuyjY9Us5XknaV1LyBnYxc
                    name: A top level folder
                    date_created: '2024-07-15T17:37:34.523167Z'
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/documents/folders/{id}':
    put:
      summary: Rename Documents Folder
      operationId: renameDocumentFolder
      description: |
        Rename Documents Folder.

        For the full list of folder operations and their limitations, see [Organize Documents and Folders](https://developers.pandadoc.com/docs/organize-folders).
      tags:
        - Folders
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The UUID of the folder that you are renaming.
          example: Nq8htXxFssmhRxAPSP4SBP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentsFolderRenameRequest'
            examples:
              Rename Documents Folder:
                value:
                  name: New folder name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsFolderRenameResponse'
              examples:
                Rename Documents Folder:
                  value:
                    uuid: gQxmeyuKitD693xV4WQ7yb
                    name: New folder name
                    date_created: '2024-07-15T17:27:29.372983Z'
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/templates/folders:
    get:
      summary: List Templates Folders
      description: "Get the list of folders that contain Templates in your account.\n\n> \U0001F4D8 \n> \n> The root folder is not listed in the response.\n\nFor the full list of folder operations and their limitations, see [Organize Templates and Folders](https://developers.pandadoc.com/docs/organize-folders).\n"
      operationId: listTemplateFolders
      tags:
        - Folders
      parameters:
        - name: parent_uuid
          description: 'The UUID of the folder containing folders. To list the folders located in the root folder, remove this parameter in the request.'
          in: query
          schema:
            type: string
          example: Nq8htXxFssmhRxAPSP4SBP
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 50
          description: 'Optionally, specify how many folders to return.'
        - name: page
          description: 'Optionally, specify which page of the dataset to return.'
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesFolderListResponse'
              examples:
                Lists Template Folders:
                  value:
                    results:
                      - uuid: h3HyGDj6NuiDfKEiY4xSMD
                        name: A new templates folder
                        date_created: '2024-07-15T17:35:52.981054Z'
                        has_folders: true
                        has_items: false
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
    post:
      summary: Create Templates Folder
      description: |
        Create a new folder to store your templates.

        For the full list of folder operations and their limitations, see [Organize Templates and Folders](https://developers.pandadoc.com/docs/organize-folders).
      operationId: createTemplateFolder
      tags:
        - Folders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplatesFolderCreateRequest'
            examples:
              Create Templates Folder:
                value:
                  name: A new templates folder
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesFolderCreateResponse'
              examples:
                Create Templates Folder:
                  value:
                    uuid: h3HyGDj6NuiDfKEiY4xSMD
                    name: A new templates folder
                    date_created: '2024-07-15T17:35:52.981054Z'
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/templates/folders/{id}':
    put:
      summary: Rename Templates Folder
      description: |
        Rename a templates folder.

        For the full list of folder operations and their limitations, see [Organize Templates and Folders](https://developers.pandadoc.com/docs/organize-folders).
      operationId: renameTemplateFolder
      tags:
        - Folders
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The UUID of the folder which you are renaming.
          example: Nq8htXxFssmhRxAPSP4SBP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplatesFolderRenameRequest'
            examples:
              Rename Templates Folder:
                value:
                  name: New Folder Name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesFolderRenameResponse'
              examples:
                Rename Templates Folders:
                  value:
                    uuid: h3HyGDj6NuiDfKEiY4xSMD
                    name: New Folder Name
                    date_created: '2024-07-15T17:35:52.981054Z'
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/logs:
    get:
      summary: List API Log
      description: 'Get the list of all logs within the selected workspace.\ Optionally filter by date, page, and `#` of items per page.'
      operationId: listLogs
      tags:
        - API Logs
      parameters:
        - name: since
          in: query
          schema:
            type: string
            default: '-90d'
          description: Determines a point in time from which logs should be fetched. Either a specific ISO 8601 datetime or a relative identifier such as "-90d" (for past 90 days).
          example: '-7d'
        - name: to
          in: query
          schema:
            type: string
          description: Determines a point in time from which logs should be fetched. Either a specific ISO 8601 datetime or a relative identifier such as "-10d" (for past 10 days) or a special "now" value.
          example: now
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 100
          description: The amount of items on each page.
          example: 10
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
          description: Returns page of the results by number.
        - name: statuses
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
              enum:
                - 100
                - 200
                - 300
                - 400
                - 500
          description: Returns only the predefined status codes.
          examples:
            Default:
              value:
                - 400
                - 500
            List API Logs 2XX:
              value: 200
        - name: methods
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - GET
                - POST
                - PUT
                - PATCH
                - DELETE
          description: 'Returns only the predefined HTTP methods. Allows GET, POST, PUT, PATCH, and DELETE.'
          example:
            - GET
            - POST
        - name: search
          in: query
          schema:
            type: string
          description: Returns the results containing a string.
          example: documents/hryJY9mqYZHjQCYQuSjRQg/send
        - name: environment_type
          in: query
          schema:
            type: string
            enum:
              - PRODUCTION
              - SANDBOX
          description: Returns logs for production/sandbox.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APILogListResponse'
              examples:
                List API Logs:
                  value:
                    results:
                      - id: AZC86i5PYKMjoyFBAw9e
                        url: /public/v1/documents/iZy3j9GmryVUSAbwL9tGWP/recipients/
                        method: POST
                        status: 200
                        request_time: '2024-07-15T18:59:38.000'
                        response_time: '2024-07-15T18:59:39.000'
                      - id: AZC86ewVMUHWrVijestF
                        url: /public/v1/documents/iZy3j9GmryVUSAbwL9tGWP/details
                        method: GET
                        status: 200
                        request_time: '2024-07-15T18:59:22.000'
                        response_time: '2024-07-15T18:59:22.000'
                      - id: AZC86RrndoYcdqXPVw-l
                        url: /public/v1/documents/iZy3j9GmryVUSAbwL9tGWP/recipients/wdNMxCRFqH2DaZDcRDXkGc/
                        method: DELETE
                        status: 204
                        request_time: '2024-07-15T18:58:19.000'
                        response_time: '2024-07-15T18:58:20.000'
                List API Logs 2XX:
                  value:
                    results:
                      - id: AXp2jrHMK2MKv_lRqmQ
                        url: /public/v1/logs
                        method: GET
                        status: 200
                        request_time: '2021-07-05T12:05:00.389'
                        response_time: '2021-07-05T12:05:00.827'
                      - id: AXp2iQACarAbusgUW4jY
                        url: /public/v1/logs
                        method: GET
                        status: 200
                        request_time: '2021-07-05T11:58:47.070'
                        response_time: '2021-07-05T11:58:47.588'
                      - id: AXpip7PGK5MpUv_lQsuj
                        url: /public/v1/documents
                        method: POST
                        status: 201
                        request_time: '2021-07-01T15:19:54.607'
                        response_time: '2021-07-01T15:19:55.404'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/logs/{id}':
    get:
      summary: API Log Details
      description: Returns details of the specific API log event.
      operationId: detailsLog
      tags:
        - API Logs
      parameters:
        - name: id
          in: path
          description: Log event id.
          schema:
            type: string
          required: true
          examples:
            Log Event ID:
              value: AZC86i5PYKMjQjMMMw9e
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APILogDetailsResponse'
              examples:
                API Logs Details:
                  value:
                    id: AZC86i5PYKMjQjMMMw9e
                    url: /public/v1/documents/iZy3j9GmryVUSAbwL9tGWP/recipients/
                    method: POST
                    status: 200
                    request_time: '2024-07-15T18:59:38.000'
                    response_time: '2024-07-15T18:59:39.000'
                    request_body:
                      id: xNVQVHShdgxHTTPVJ3CWCC
                      kind: contact
                    query_params_string: null
                    query_params_object: null
                    response_body:
                      recipient_id: PsPqdRm4dt4thxnYMqttwY
                    token_type: API_KEY
                    application: null
                    key: 9cf111111c3bd477ab9bb4123453b7f5d6502cd8
                    request_id: 284b1456-1111-4ba9-1111-0d82418205f5
                    user_email: siarhei@pandadoc.com
                    user_id: Hzpt4yyQ3A5qHTTPdZQxpH
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/contacts:
    get:
      tags:
        - Contacts
      summary: List contacts
      description: This method returns a list of contacts associated with a workspace.
      operationId: listContacts
      parameters:
        - examples:
            Default:
              value: ''
            List Contacts by Email:
              value: john.doe@example.com
          name: email
          in: query
          schema:
            type: string
          description: Optional search parameter. Filter results by exact match.
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Default:
                  value:
                    results:
                      - id: kQDLgj54VGCocTSTzthywf
                        email: john.doe@example.com
                        first_name: John
                        last_name: Doe
                        company: ExampleCorp
                        job_title: Software Engineer
                        phone: +1-555-123-4567
                        country: USA
                        state: California
                        street_address: 1234 Elm Street
                        city: San Francisco
                        postal_code: '94101'
                      - id: kQDLgj54VGCocTSTzthywd
                        email: jane.smith@example.com
                        first_name: Jane
                        last_name: Smith
                        company: ExampleCorp
                        job_title: Product Manager
                        phone: +1-555-987-6543
                        country: USA
                        state: California
                        street_address: 5678 Oak Street
                        city: San Francisco
                        postal_code: '94102'
                List Contacts by Email:
                  value:
                    results:
                      - id: EmnxmZvnmrUe2jqDDipSyf
                        email: john.doe@example.com
                        first_name: John
                        last_name: Doe
                        company: ExampleCorp
                        job_title: Software Engineer
                        phone: +1-555-123-4567
                        country: USA
                        state: California
                        street_address: 1234 Elm Street
                        city: San Francisco
                        postal_code: '94101'
              schema:
                $ref: '#/components/schemas/ContactListResponse'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/400RequestError'
        '403':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
    post:
      tags:
        - Contacts
      summary: Create contact
      description: This method adds a contact into a contacts list.
      operationId: createContact
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Create Contact:
                value:
                  email: user01@pandadoc.com
                  first_name: John
                  last_name: Doe
                  company: John Doe Inc.
                  job_title: CTO
                  phone: '+14842634627'
                  country: USA
                  state: Texas
                  street_address: 1313 Mockingbird Lane
                  city: Austin
                  postal_code: '75001'
            schema:
              $ref: '#/components/schemas/ContactCreateRequest'
      responses:
        '201':
          description: OK
          content:
            application/json:
              examples:
                Create Contact:
                  value:
                    id: BCUWJhZm3k7grUNFAz6cD2
                    email: user01@pandadoc.com
                    first_name: John
                    last_name: Doe
                    company: John Doe Inc.
                    job_title: CTO
                    phone: '+14842634627'
                    country: USA
                    state: Texas
                    street_address: 1313 Mockingbird Lane
                    city: Austin
                    postal_code: '75001'
              schema:
                $ref: '#/components/schemas/ContactDetailsResponse'
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/contacts/{id}':
    get:
      tags:
        - Contacts
      summary: Contact Details
      description: Returns contact details by its ID.
      operationId: detailsContact
      parameters:
        - examples:
            Default:
              value: SyoufNkJiHRn24LpuJ7RXb
          name: id
          in: path
          description: Contact id.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Default:
                  value:
                    id: SyoufNkJiHRn24LpuJ7RXb
                    email: nobody@example.com
                    first_name: FName
                    last_name: LName
                    company: CompanyName
                    job_title: JobTitle
                    phone: Phone
                    country: Country
                    state: State
                    street_address: Av. de Moscavide 2
                    city: City
                    postal_code: 1885-075
              schema:
                $ref: '#/components/schemas/ContactDetailsResponse'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/400RequestError'
        '403':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
    delete:
      tags:
        - Contacts
      summary: Delete Contact
      description: This method deletes a contact.
      operationId: deleteContact
      parameters:
        - name: id
          in: path
          description: Contact id.
          schema:
            type: string
          required: true
          example: SyoufNkJiHRn24LpuJ7RXb
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/400RequestError'
        '403':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
    patch:
      tags:
        - Contacts
      summary: Update Contact
      description: This method updates a contact details.
      operationId: updateContact
      parameters:
        - examples:
            Default:
              value: SyoufNkJiHRn24LpuJ7RXb
          name: id
          in: path
          description: Contact id.
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Default:
                value:
                  email: test@pandadoc.com
                  first_name: new first_name
                  last_name: new last_name
                  company: new company
                  job_title: new job_title
                  phone: new phone
                  country: new country
                  state: new state
                  street_address: new street_address
                  city: new city
                  postal_code: new postal_code
            schema:
              $ref: '#/components/schemas/ContactUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Default:
                  value:
                    id: SyoufNkJiHRn24LpuJ7RXb
                    email: test@pandadoc.com
                    first_name: new first_name
                    last_name: new last_name
                    company: new company
                    job_title: new job_title
                    phone: new phone
                    country: new country
                    state: new state
                    street_address: new street_address
                    city: new city
                    postal_code: new postal_code
              schema:
                $ref: '#/components/schemas/ContactDetailsResponse'
        '400':
          $ref: '#/components/responses/400ValidationError'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/members:
    get:
      tags:
        - Members
      summary: List Members
      operationId: listMembers
      description: |
        Retrieve all members details of the workspace implied by the OAuth token or API key.\
        For each member, the `workspace` parameter shows their active workspace, that is the workspace they are currently working in.\
        This means the `workspace` value can differ from the workspace implied by your API key.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberListResponse'
              examples:
                List Members:
                  value:
                    results:
                      - user_id: FA5QAu8UGA3oVDDZuPL75B
                        membership_id: RyMNXBjBPRppi56TfYBrXi
                        email: joe.don@pandadoc.com
                        first_name: Joe
                        last_name: Don
                        is_active: true
                        workspace: n7SK7prHeoWJSXb9VkrPve
                        workspace_name: Workspace
                        email_verified: true
                        role: Admin
                        user_license: Full
                        date_created: '2023-08-03T11:49:16.364213Z'
                        date_modified: '2024-07-11T20:36:43.362526Z'
                      - user_id: nXN9uokLULUw4L4HPsJGHQ
                        membership_id: mz4Ys3cVUSAyBpQKbHphtE
                        email: user.with.custom.role@pandadoc.com
                        first_name: ''
                        last_name: ''
                        is_active: true
                        workspace: n7SK7prHeoWJSXb9VkrPve
                        workspace_name: Workspace
                        email_verified: true
                        role: Custom
                        user_license: Full
                        date_created: '2024-02-16T12:40:55.547303Z'
                        date_modified: '2024-03-21T15:55:33.783886Z'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/400RequestError'
        '403':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/members/current:
    get:
      tags:
        - Members
      summary: Current Member Details
      description: "Returns the member details of the current user (the owner of the API key).\n\n**User** - is an account with a license in the Organization.  \n**Member** - is a User with a predefined Role in the Workspace.\n\n| Parameter | Description |\n|---|---|\n| `user_id` | A unique identifier of the `user` in the **organization** |\n| `membership_id` | A unique identifier of the `user` in the **workspace** |\n| `email` | A user email address |\n| `first_name` | A user's first name |\n| `last_name` | A user's last name |\n| `is_active` | A boolean value that identifies if a member is active and not blocked |\n| `workspace` | A unique identifier of the user's current active workspace |\n| `workspace_name` | A name of the user's current active workspace |\n| `email_verified` | A boolean value that identifies if the email is verified |\n| `role` | A member's role in the workspace |\n| `user_license` | A [user license](https://support.pandadoc.com/hc/en-us/articles/360051733434-User-licenses) in the organization:\_ <br/>`Full (Standard)`;\_ <br/>`Read-only`;\_ <br/>`eSignature`;\_ <br/>`Guest`;\_ <br/>`Creator` |\n| `date_created` | A date when a member was added to the workspace |\n| `date_modified` | Last modified date of a member |\n"
      operationId: detailsCurrentMember
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetailsResponse'
              examples:
                Current Member Details:
                  value:
                    user_id: FA5QAu8UGA3oVDDZuPL75B
                    membership_id: RyMNXBjBPRppi56TfYBrXi
                    email: siarhei@pandadoc.com
                    first_name: Siarhei
                    last_name: ''
                    is_active: true
                    workspace: n7SK7prHeoWJSXb9VkrPve
                    workspace_name: Workspace
                    email_verified: true
                    role: Admin
                    user_license: Full
                    date_created: '2023-08-03T11:49:16.364213Z'
                    date_modified: '2024-07-11T20:36:43.362526Z'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/400RequestError'
        '403':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/members/{id}':
    get:
      tags:
        - Members
      summary: Member Details
      description: "A method to retrieve a member's details by ID.\n\n**User** - is an account with a license in the Organization.  \n**Member** - is a User with a predefined Role in the Workspace.\n\n| Parameter | Description |\n|---|---|\n| `user_id` | A unique identifier of the `user` in the **organization** |\n| `membership_id` | A unique identifier of the `user` in the **workspace** |\n| `email` | A user email address |\n| `first_name` | A user's first name |\n| `last_name` | A user's last name |\n| `is_active` | A boolean value that identifies if a member is active and not blocked |\n| `workspace` | A unique identifier of the user's current active workspace |\n| `workspace_name` | A name of the user's current active workspace |\n| `email_verified` | A boolean value that identifies if the email is verified |\n| `role` | A member's role in the workspace |\n| `user_license` | A [user license](https://support.pandadoc.com/hc/en-us/articles/360051733434-User-licenses) in the organization:\_ <br/>`Full (Standard)`;\_ <br/>`Read-only`;\_ <br/>`eSignature`;\_ <br/>`Guest`;\_ <br/>`Creator` |\n| `date_created` | A date when a member was added to the workspace |\n| `date_modified` | Last modified date of a member |\n"
      operationId: detailsMember
      parameters:
        - name: id
          in: path
          description: Membership id.
          schema:
            type: string
          required: true
          example: radQBiBkU7MBk59NSgaGf5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetailsResponse'
              examples:
                Member Details:
                  value:
                    user_id: nXN9uokLULUw4L4HPsJGHQ
                    membership_id: mz4Ys3cVUSAyBpQKbHphtE
                    email: user.with.custom.role@pandadoc.com
                    first_name: ''
                    last_name: ''
                    is_active: true
                    workspace: n7SK7prHeoWJSXb9VkrPve
                    workspace_name: Workspace
                    email_verified: true
                    role: Custom
                    user_license: Full
                    date_created: '2024-02-16T12:40:55.547303Z'
                    date_modified: '2024-03-21T15:55:33.783886Z'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/members/{member_id}/token':
    post:
      tags:
        - Members
      summary: Create Member Token
      description: "> \U0001F6A7 \n> \n> This endpoint is only exposed upon request. Please reach out to your Account Manager to get access.\n\n> \U0001F4D8 \n> \n> Make sure you're using Public API keys generated by Org Admin, otherwise you'll receive a 403 response.\n"
      operationId: createMemberToken
      parameters:
        - name: member_id
          in: path
          description: Member id.
          schema:
            type: string
          required: true
          example: radQBiBkU7MBk59NSgaGf5
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lifetime:
                  type: integer
                  description: Token lifetime in seconds.
                  default: 3600
                  maximum: 86400
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 1fc7b52182405dbf004b9e9ffb555a6ac61419ba
              examples:
                Create Member Token:
                  value:
                    token: 1fc7b52182405dbf004b9e9ffb555a6ac61419ba
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/webhook-subscriptions:
    get:
      tags:
        - Webhook subscriptions
      summary: List Webhook Subscriptions
      operationId: listWebhookSubscriptions
      responses:
        '200':
          description: List webhook subscriptions
          content:
            application/json:
              examples:
                List Webhook Subscriptions:
                  value:
                    items:
                      - uuid: 65fc1ec8-fb9c-4986-9d95-e2cf07e504bc
                        name: PandaDoc
                        url: 'https://pandadoc.com/webhooks'
                        status: ACTIVE
                        active: true
                        payload:
                          - pricing
                          - metadata
                          - tokens
                          - products
                          - fields
                        triggers:
                          - document_deleted
                          - document_updated
                          - document_state_changed
                          - recipient_completed
                          - document_creation_failed
                        shared_key: fhLyGE8umJ2MHuDUsJoPLG
                        workspace_id: nzJyEf2JCG2od4DUYSIpDe
              schema:
                $ref: '#/components/schemas/WebhookSubscriptionListResponse'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
    post:
      tags:
        - Webhook subscriptions
      summary: Create Webhook Subscription
      operationId: createWebhookSubscription
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Create Webhook Subscription:
                description: |
                  You can use https://pandadoc.requestcatcher.com/ to test your webhooks
                  Important Security Note
                  Please be aware that requestcatcher is not a secure service.
                  All requests sent to it can be viewed by anyone who knows the URL.
                  Do not use it to catch sensitive data in a production environment.
                value:
                  name: PandaDoc
                  url: webhooks_subscription_url
                  active: true
                  payload:
                    - fields
                    - products
                    - metadata
                    - tokens
                    - pricing
                  triggers:
                    - document_deleted
                    - recipient_completed
                    - document_updated
                    - document_state_changed
                    - document_creation_failed
            schema:
              $ref: '#/components/schemas/WebhookSubscriptionCreateRequest'
      responses:
        '201':
          description: Webhook subscription created
          content:
            application/json:
              examples:
                Create Webhook Subscription:
                  value:
                    uuid: d173751d-0057-4d5c-ab75-49a670a4ca68
                    name: PandaDoc
                    url: 'https://pandadoc.com/webhooks'
                    status: ACTIVE
                    active: true
                    payload:
                      - fields
                      - pricing
                      - tokens
                      - metadata
                      - products
                    triggers:
                      - document_state_changed
                      - recipient_completed
                      - document_updated
                      - document_creation_failed
                      - document_deleted
                    shared_key: GCQsdCMoVCcmXZo8yHiNIA
                    workspace_id: fQ2pg3hcWgiPpa3JvfBHn2
              schema:
                $ref: '#/components/schemas/WebhookSubscriptionItemResponse'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/webhook-subscriptions/{id}':
    get:
      tags:
        - Webhook subscriptions
      summary: Webhook Subscription Details
      description: |
        Get webhook subscription by uuid
      operationId: detailsWebhookSubscription
      parameters:
        - examples:
            Get Webhook Subscription:
              value: 4fb6506c-02a0-427e-b445-b9e9ff0c822f
          name: id
          in: path
          description: Webhook subscription uuid
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Get webhook subscription by uuid
          content:
            application/json:
              examples:
                Get Webhook Subscription:
                  value:
                    uuid: 4fb6506c-02a0-427e-b445-b9e9ff0c822f
                    name: PandaDoc
                    url: 'https://pandadoc.com/webhooks'
                    status: ACTIVE
                    active: true
                    payload:
                      - fields
                      - pricing
                      - tokens
                      - metadata
                      - products
                    triggers:
                      - document_state_changed
                      - recipient_completed
                      - document_updated
                      - document_creation_failed
                      - document_deleted
                    shared_key: GCQsdCMoVCcmXZo8yHiNGA
                    workspace_id: fQ2pg3hcWgiPpa3JvfBhn2
              schema:
                $ref: '#/components/schemas/WebhookSubscriptionItemResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
    patch:
      tags:
        - Webhook subscriptions
      summary: Update Webhook Subscription
      operationId: updateWebhookSubscription
      parameters:
        - examples:
            Update Webhook Subscription:
              value: d173751d-0057-4d5c-ab75-49a670a4ca68
          name: id
          in: path
          description: Webhook subscription uuid
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Update Webhook Subscriptions:
                value:
                  name: PandaDoc
                  url: 'https://pandadoc.com/webhooks'
                  active: true
                  payload:
                    - fields
                    - products
                    - metadata
                    - tokens
                    - pricing
                  triggers:
                    - document_deleted
                    - recipient_completed
                    - document_updated
                    - document_state_changed
                    - document_creation_failed
            schema:
              $ref: '#/components/schemas/WebhookSubscriptionPatchRequest'
      responses:
        '200':
          description: Webhook subscription updated
          content:
            application/json:
              examples:
                Update Webhook Subscription:
                  value:
                    uuid: d173751d-0057-4d5c-ab75-49a670a4ca68
                    name: PandaDoc
                    url: 'https://pandadoc.com/webhooks'
                    status: ACTIVE
                    active: true
                    payload:
                      - products
                      - metadata
                      - fields
                      - pricing
                      - tokens
                    triggers:
                      - document_creation_failed
                      - document_deleted
                      - document_state_changed
                      - document_updated
                      - recipient_completed
                    shared_key: GCQsdCMoVCcmXZo8yHiNGI
                    workspace_id: fQ2pg3hcWgiPpa3JvfBPn2
              schema:
                $ref: '#/components/schemas/WebhookSubscriptionItemResponse'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
    delete:
      tags:
        - Webhook subscriptions
      summary: Delete Webhook Subscription
      operationId: deleteWebhookSubscription
      parameters:
        - name: id
          in: path
          description: Webhook subscription uuid.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Webhook subscription removed
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/webhook-subscriptions/{id}/shared-key':
    patch:
      tags:
        - Webhook subscriptions
      summary: Update Webhook Subscription Shared Key
      operationId: updateWebhookSubscriptionSharedKey
      parameters:
        - examples:
            Update Webhook Subscription Shared Key:
              value: d173751d-0057-4d5c-ab75-49a670a4ca68
          name: id
          in: path
          description: Webhook subscription uuid
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Webhook subscription shared key regenerated
          content:
            application/json:
              examples:
                Update Webhook Subscription Shared Key:
                  value:
                    shared_key: DgwSJeYa2h5SCmzVZws2UM
              schema:
                $ref: '#/components/schemas/WebhookSubscriptionSharedKeyResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/webhook-events:
    get:
      tags:
        - Webhook events
      summary: List Webhook Events
      operationId: listWebhookEvent
      parameters:
        - name: count
          in: query
          description: Specify how many event results to return.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: page
          in: query
          description: Specify which page of the dataset to return.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: since
          in: query
          description: Return results where the event creation time is greater than or equal to this value.
          schema:
            example: '2022-06-01T00:00:00Z'
            type: string
            format: date-time
        - name: to
          in: query
          description: Return results where the event creation time is less than this value.
          schema:
            example: '2022-06-01T00:00:00Z'
            type: string
            format: date-time
        - name: type
          in: query
          description: Returns results by the specified event types.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/WebhookEventTriggerEnum'
        - name: http_status_code
          in: query
          description: Returns results with the specified HTTP status codes.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/WebhookEventHttpStatusCodeGroupEnum'
        - name: error
          in: query
          description: Returns results with the following errors.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/WebhookEventErrorEnum'
      responses:
        '200':
          description: Page of webhook events.
          content:
            application/json:
              examples:
                List Webhook Events:
                  value:
                    items:
                      - uuid: 6680b700-cbb8-4ab9-bf99-15d1cb4ab9f2
                        name: TEST
                        type: document_state_changed
                        error: null
                        http_status_code: 200
                        delivery_time: '2022-03-31T10:59:14.234658Z'
                      - uuid: 2b97b5ee-01e2-4cd9-9ff8-f28c4376bcb2
                        name: TEST
                        type: document_state_changed
                        error: null
                        http_status_code: 200
                        delivery_time: '2022-03-31T10:59:05.265944Z'
                Empty:
                  value:
                    items: []
              schema:
                $ref: '#/components/schemas/WebhookEventPageResponse'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/webhook-events/{id}':
    get:
      tags:
        - Webhook events
      summary: Webhook Event Details
      operationId: detailsWebhookEvent
      parameters:
        - name: id
          in: path
          description: Webhook event uuid.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Get webhook event by uuid.
          content:
            application/json:
              examples:
                Webhook Event details:
                  value:
                    uuid: 8b61d111-5e0b-406d-a150-e8305fc7e9rrr
                    name: My document
                    type: document_state_changed
                    error: null
                    url: 'https://webhook.example.pandadoc.com'
                    signature: f70111adccaa0111e89ae0a111a04c16f5c5d3d111bff018a111d22dcd28c2bb
                    http_status_code: 404
                    delivery_time: '2024-07-31T16:06:12.707814Z'
                    request_body: '[{"event":"document_state_changed","data":{"id":"aahcZhiB6pKRbjagoZrrrr","name":"Document from PandaDoc Template","date_created":"2024-07-31T16:06:09.114744Z","date_modified":"2024-07-31T16:06:09.157758Z","expiration_date":null,"autonumbering_sequence_name":null,"created_by":{"id":"FA5QAu8UGA3oVDQZuPL7rr","email":"test@pandadoc.com","first_name":"FirstName","last_name":"LastName","avatar":null,"membership_id":"RyMNXBjBPRppw56TfYBrrr"},"tags":["created_via_api"],"status":"document.draft","recipients":[{"type":"recipient","id":"TM2nqhKYgPmJA9hUPDKHrr","first_name":"Josh","last_name":"Ron","email":"josh@example.com","phone":"","recipient_type":"CC","has_completed":false,"role":"","roles":[],"signing_order":null,"contact_id":"DrNfkrquTcXH83cgF5ZGrr","shared_link":""}],"sent_by":null,"grand_total":{"amount":"0.00","currency":"EUR"},"template":{"id":"7Xfnrk7dTaWJ78wNUrg3rr","name":"Sample Template"},"version":"2","linked_objects":[]}}]'
                    response_body: '{"success":true}'
                    response_headers: '[cache-control:"no-cache, private", content-type:"application/json", date:"Wed, 31 Jul 2024 16:06:12 GMT", server:"nginx", transfer-encoding:"chunked", vary:"Accept-Encoding"]'
                    event_time: '2024-07-31T16:06:10.781000Z'
              schema:
                $ref: '#/components/schemas/WebhookEventDetailsResponse'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  /public/v2/notary/notarization-requests:
    post:
      tags:
        - Notary
      summary: Create Notarization Request
      operationId: createNotarizationRequest
      description: "Use this endpoint to connect with a notary, ready to complete online notarizations for your signers within minutes.\n\n> \U0001F6A7 Before you start\n> \n> Ensure the following before creating a notarization request:\n> \n> - Install the Notary On-Demand add-on.\n> - Activate a user, typically the org admin, with an API key in the Notary app. For activation, direct them to visit <https://notarize.pandadoc.com>.\n> - Create a document for notarization and get its `document_id`. To create a document, use the [Create Document from Template](https://developers.pandadoc.com/reference/create-document-from-pandadoc-template) or [Create Document from File Upload](https://developers.pandadoc.com/reference/create-document-from-pdf) endpoint.\n\nFor the notarization request, include in the request body:\n\n- `document_id`\n- At least one `invitees`, specifying their `email`, `first_name`, and `last_name`.\n- Optionally, include a `message` for your signers.\n\nAfter the API call is executed, your signers will receive an email invitation for notarization. Alternatively, you can directly share the `notarization_link` with your signers, which is available in the 201 response body.\n\nUpon successful notarization, you will receive an email with a link to the notarized document.\n\n> \U0001F4D8 Tips\n> \n> - Ensure that signers are added as both invitees in the request body and recipients in the document to avoid inconveniences during notary sessions.\n> - Signers will receive an email with a notary link upon a successful API call; this link is also in the 201 response.\n> - Use the link to connect with commissioned online notaries, available Mon-Fri, 9 AM - 9 PM Central Time, typically responding within 2 minutes.\n> - Please note that a notary will notarize a copy of the original document, so it will not be available in your workspace.\n\n## Limits\n\nA maximum of 100 API calls per minute is permitted. Exceeding this limit triggers a 429 Too Many Requests error.\n\n## Solutions for 4xx Response Codes\n\n- **403 Forbidden (Inactive Add-on)**: Ensure the Notary On-Demand add-on is installed.\n- **403 Forbidden (Transactions Limit)**: Purchase additional transactions either through the Notary UI or by contacting the Sales team.\n- **403 Forbidden (User Not Activated)**: Activate a user, typically the org admin, with an API key in the Notary app. For activation, direct them to visit <https://notarize.pandadoc.com>.\n- **429 Too Many Requests:** If you hit the limit, hold your API calls, then send them after waiting for the retry time.\n\nTo learn more about PandaDoc Notary On-Demand, visit our [website](https://notary.pandadoc.com/notary-on-demand/).\n"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotarizationRequest'
            examples:
              Create Notarization Request:
                value:
                  document_id: D3okRfgHRX7NEhavcACReB
                  invitation:
                    message: Your session is ready
                    invitees:
                      - email: signer@example.com
                        first_name: test
                        last_name: test
      responses:
        '201':
          description: Notarization request has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNotarizationResponse'
              examples:
                Create Notarization Request:
                  value:
                    id: f75e053a-25e8-40be-8681-fd755ade2a2b
                    name: test
                    status: SENT
                    date_created: '2023-04-14T16:33:06.938984Z'
                    date_accepted: null
                    created_by:
                      first_name: test
                      last_name: test
                      email: user@example.com
                      id: nyAnVpY7pZ23FBve8s9xgk
                    invitees:
                      - first_name: test
                        last_name: test
                        email: signer@example.com
                        notarization_link: 'https://notarize.pandadoc.com/session-request#/?requestId=f75e053a-25e8-40be-8681-fd755ade2a2b&inviteeId=2fbb4cbf-d461-4421-94cf-eaadcb9627e0'
        '403':
          $ref: '#/paths/~1public~1v2~1product-catalog~1items/post/responses/403'
        '429':
          $ref: '#/components/responses/429'
  '/public/v2/notary/notarization-requests/{session_request_id}"':
    get:
      tags:
        - Notary
      summary: Notarization Request Details
      operationId: notarizationRequestDetails
      description: "Get details about a notarization request by its `id`.\n\nDetails include:\n\n- Basic notarization request information (status, creator, invitees).\n- Signed documents information with links for downloading.\n- Timestamps associated with a notarization request.\n\n## Available Notarization Request Statuses\n\nThe following is a complete list of all possible notarization request statuses returned:\n\n| Notarization Request Status | Status Description                                                                                                 |\n| :-------------------------- | :----------------------------------------------------------------------------------------------------------------- |\n| SENT                        | Notarization request has been created. Invitees are notified and can start the process of finding a notary.        |\n| WAITING_FOR_NOTARY          | One of the invitees initialised the process of finding a notary.                                                   |\n| ACCEPTED                    | Notarization request has been accepted by the notary. At this time nobody has joined the notarization session yet. |\n| LIVE                        | Notarization session has started.                                                                                  |\n| COMPLETED                   | Notarization session is finished. Documents have been successfully signed and ready for downloading.               |\n| CANCELLED                   | Notarization request has been cancelled by the creator.                                                            |\n\n## Signed documents\n\nSigned documents are the documents that were successfully signed during the notarization session. The signed document's info is available only if the notarization request has `COMPLETED` status, otherwise the returned list will be empty.  \n\nIn case you uploaded several documents for notarization then the `signed_documents` list will contain links for downloading for each document separately (with `SINGLE` document type) and link for the combined document (with `COMBINED` document type accordingly).\n\n> \U0001F4D8 Document link expires in 1 hour\n> \n> **Note**: The signed document link expires in 1 hour. After this time it will be not possible to download documents using the returned url. In this case you need to call endpoint again since each request generates a new link.\n\n## Limits\n\nA maximum of 100 API calls per minute is permitted. Exceeding this limit triggers a 429 Too Many Requests error.\n"
      parameters:
        - name: session_request_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Notarization Request ID.
      responses:
        '200':
          description: Details about notarization request
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  status:
                    type: string
                    enum:
                      - DRAFT
                      - SENT
                      - WAITING_FOR_NOTARY
                      - ACCEPTED
                      - LIVE
                      - COMPLETED
                      - TERMINATED
                      - CANCELLED
                  date_created:
                    type: string
                    format: date-time
                  date_started:
                    type: string
                    format: date-time
                    nullable: true
                  date_completed:
                    type: string
                    format: date-time
                    nullable: true
                  created_by:
                    type: object
                    properties:
                      userId:
                        type: string
                      email:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                  invitees:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        email:
                          type: string
                          format: email
                          maxLength: 255
                        first_name:
                          type: string
                          maxLength: 50
                          nullable: true
                        last_name:
                          type: string
                          maxLength: 50
                          nullable: true
                  signed_documents:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                        document_name:
                          type: string
                        size:
                          type: number
                        document_type:
                          type: string
                          enum:
                            - COMBINED
                            - SINGLE
              examples:
                Notarization Request Details:
                  value:
                    id: string
                    status: COMPLETED
                    date_created: '2024-01-25T15:07:10.845Z'
                    date_started: '2024-01-25T15:07:10.845Z'
                    date_completed: '2024-01-25T15:07:10.845Z'
                    created_by:
                      userId: string
                      email: string
                      firstName: string
                      lastName: string
                    invitees:
                      - id: string
                        email: user@example.com
                        first_name: string
                        last_name: string
                    signed_documents:
                      - url: string
                        document_name: string
                        size: 200
                        document_type: COMBINED
                      - url: string
                        document_name: string
                        size: 100
                        document_type: SINGLE
                      - url: string
                        document_name: string
                        size: 100
                        document_type: SINGLE
  /public/v2/product-catalog/items/search:
    get:
      tags:
        - Product catalog
      summary: List Catalog Items Search
      operationId: searchCatalogItems
      description: |
        This method searches for items in your [product catalog](https://support.pandadoc.com/hc/en-us/articles/8241999336471-Product-Catalog).

        Use the `query` parameter to search in title, SKU, description, category name, custom fields name and value. You can also search for items by their type, billing type, and category id.

        Order search results, in both ascending and descending order, by these item properties:

        - SKU
        - Name
        - Price
        - Modification date

        Use the `exclude_uuids` parameter to exclude particular uuids from the search request.
      parameters:
        - name: page
          in: query
          description: Page number.
          schema:
            type: number
        - name: per_page
          in: query
          description: Items per page.
          schema:
            type: number
        - name: query
          in: query
          description: |
            Search query. Searches the following fields: Title, SKU, description, category name, custom fields name and value.
          schema:
            type: string
        - name: order_by
          in: query
          description: Ordering principle for displaying search results.
          schema:
            type: string
            enum:
              - sku
              - '-sku'
              - title
              - '-title'
              - price
              - '-price'
              - date_modified
              - '-date_modified'
        - name: types
          in: query
          description: Filter by catalog item types.
          schema:
            type: array
            items:
              type: string
              enum:
                - regular
                - bundle
        - name: billing_types
          in: query
          description: Filter by billing types.
          schema:
            type: array
            items:
              type: string
              enum:
                - one_time
                - recurring
        - name: exclude_uuids
          in: query
          description: A list of item uuids to be excluded from search.
          schema:
            type: array
            items:
              type: string
        - name: category_id
          in: query
          description: Category id.
          schema:
            type: string
        - name: no_category
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Paginated catalog items
          content:
            application/json:
              examples:
                List Catalog Items:
                  value:
                    items:
                      - billing_cycle: null
                        billing_type: one_time
                        bundle_items_count: 0
                        workspace_id: n7SK7prHeoWJsmb9VkrPve
                        category_id: 0ac5f88a-bdd6-4836-304d-28d042b8d3a2
                        category_name: Sample product
                        created_by: FA5QAu8UGA3oVDQZuPL75B
                        currency: USD
                        custom_fields: []
                        date_created: '2023-02-01T10:55:07+00:00'
                        date_modified: '2023-02-01T10:55:07+00:00'
                        description: 'Its exceptionally effective vacuum brewing method extracts all precious oils of your favorite coffee. In addition, the brewing time and temperature are perfectly calibrated, ensuring a perfect cup of coffee with each brew.'
                        image_src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/81361512-488e-42c8-8c13-5e61b8a27638/1.jpeg'
                        images:
                          - src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/81361512-488e-42c8-8c13-5e61b8a27638/1.jpeg'
                            order: 0
                            is_main: true
                          - src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/a0aca18e-8074-4698-aadb-3f41c1bd6a88/2.jpeg'
                            order: 1
                            is_main: false
                        max_tier_value: null
                        min_tier_value: null
                        modified_by: FA5QAu8UGA3oVDQZuPL75B
                        price: 250
                        pricing_method: 0
                        sku: coffee_maker
                        title: Siphon vacuum coffee maker
                        type: regular
                        uuid: 1725f759-3a1c-64e3-2daa-f67eafa589d7
                        highlights: null
                        tiers: null
                        cost: 100
                      - billing_cycle: null
                        billing_type: one_time
                        bundle_items_count: 0
                        workspace_id: n7SK7prHeoWJsmb9VkrPve
                        category_id: 0ac5f88a-bdd6-4836-304d-28d042b8d3a2
                        category_name: Sample product
                        created_by: FA5QAu8UGA3oVDQZuPL75B
                        currency: USD
                        custom_fields: []
                        date_created: '2023-02-01T10:55:07+00:00'
                        date_modified: '2023-02-01T10:55:07+00:00'
                        description: 'Double-layer Filter: Dual layers of 304 stainless steel allow fine oils from coffee powder to infuse themselves into your coffee, creating a richer, fuller flavor and no coffee ground deposits'
                        image_src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/b593eb9a-74cd-40a0-8c38-6a9d39248d3d/3.jpeg'
                        images:
                          - src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/b593eb9a-74cd-40a0-8c38-6a9d39248d3d/3.jpeg'
                            order: 0
                            is_main: true
                          - src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/ea09bd4a-c619-4b3e-8f99-f1a2180a97a8/4.jpeg'
                            order: 1
                            is_main: false
                          - src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/6e6312f8-787d-4453-8772-ac81f481be00/5.jpeg'
                            order: 2
                            is_main: false
                        max_tier_value: null
                        min_tier_value: null
                        modified_by: FA5QAu8UGA3oVDQZuPL75B
                        price: 100
                        pricing_method: 0
                        sku: coffee_brewer
                        title: Jittermaster coffee brewer
                        type: regular
                        uuid: 06cb0ce9-094b-1f38-2fe6-0a9d226cd22c
                        highlights: null
                        tiers: null
                        cost: 50
                      - billing_cycle: null
                        billing_type: one_time
                        bundle_items_count: 0
                        workspace_id: n7SK7prHeoWJsmb9VkrPve
                        category_id: 0ac5f88a-bdd6-4836-304d-28d042b8d3a2
                        category_name: Sample product
                        created_by: FA5QAu8UGA3oVDQZuPL75B
                        currency: USD
                        custom_fields: []
                        date_created: '2023-02-01T10:55:07+00:00'
                        date_modified: '2023-03-17T14:19:12+00:00'
                        description: <p>Meticulously crafted in Italy these classic glass coffee mugs or tea cups will complete any barware collection. Contemporary sleek drinking glasses designed to enhance any décor.</p>
                        image_src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/6267265d-2b29-4471-8181-c7544e35a69a/6.jpeg'
                        images:
                          - src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/6267265d-2b29-4471-8181-c7544e35a69a/6.jpeg'
                            order: 0
                            is_main: true
                        max_tier_value: 30
                        min_tier_value: 20
                        modified_by: FA5QAu8UGA3oVDQZuPL75B
                        price: null
                        pricing_method: 1
                        sku: coffee_mug_v2
                        title: Coffee Magic Mug
                        type: regular
                        uuid: ff137b79-e7f6-5710-17d3-c9ea81dac6b6
                        highlights: null
                        tiers:
                          - value: 30
                            min_qty: 1
                          - value: 20
                            min_qty: 21
                        cost: 5
                      - billing_cycle: 1
                        billing_type: recurring
                        bundle_items_count: 0
                        workspace_id: n7SK7prHeoWJsmb9VkrPve
                        category_id: 0ac5f88a-bdd6-4836-304d-28d042b8d3a2
                        category_name: Sample product
                        created_by: FA5QAu8UGA3oVDQZuPL75B
                        currency: USD
                        custom_fields: []
                        date_created: '2023-02-01T10:55:07+00:00'
                        date_modified: '2023-02-01T10:55:07+00:00'
                        description: Enjoy a new light roast coffee each month. Box of white chocolate. Up to 20% off retail prices. Pause or cancel anytime.
                        image_src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/e818970c-5aa8-4645-941f-04ab0ab5b9b0/7.png'
                        images:
                          - src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/e818970c-5aa8-4645-941f-04ab0ab5b9b0/7.png'
                            order: 0
                            is_main: true
                        max_tier_value: null
                        min_tier_value: null
                        modified_by: FA5QAu8UGA3oVDQZuPL75B
                        price: 19
                        pricing_method: 0
                        sku: light_coffee
                        title: Light Roast Collection
                        type: regular
                        uuid: 646ebcc2-58ba-8eb1-faaa-a93e4542b37b
                        highlights: null
                        tiers: null
                        cost: 5
                      - billing_cycle: 1
                        billing_type: recurring
                        bundle_items_count: 0
                        workspace_id: n7SK7prHeoWJsmb9VkrPve
                        category_id: 0ac5f88a-bdd6-4836-304d-28d042b8d3a2
                        category_name: Sample product
                        created_by: FA5QAu8UGA3oVDQZuPL75B
                        currency: USD
                        custom_fields: []
                        date_created: '2023-02-01T10:55:07+00:00'
                        date_modified: '2023-02-01T10:55:07+00:00'
                        description: Enjoy a new dark roast coffee each month. Box of white chocolate. Up to 20% off retail prices. Pause or cancel anytime.
                        image_src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/6cb41994-5a6e-4253-bc4c-f5e90bb9d7f8/8.png'
                        images:
                          - src: 'https://catalog-images.prod.pandadoc-static.com/images/bg78StVWLHzp3tYiubszPb/6cb41994-5a6e-4253-bc4c-f5e90bb9d7f8/8.png'
                            order: 0
                            is_main: true
                        max_tier_value: null
                        min_tier_value: null
                        modified_by: FA5QAu8UGA3oVDQZuPL75B
                        price: 19
                        pricing_method: 0
                        sku: dark_coffee
                        title: Dark Roast Collection
                        type: regular
                        uuid: 0d80ccaf-37e1-ce94-c339-d1f0405c3a62
                        highlights: null
                        tiers: null
                        cost: 5
                    has_more_items: false
                    total: 5
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        billing_cycle:
                          type: integer
                          nullable: true
                        billing_type:
                          type: string
                        bundle_items_count:
                          type: integer
                        workspace_id:
                          type: string
                        category_id:
                          type: string
                          nullable: true
                        category_name:
                          type: string
                          nullable: true
                        created_by:
                          type: string
                        cost:
                          type: number
                          nullable: true
                        currency:
                          type: string
                        custom_fields:
                          type: array
                          nullable: true
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                                nullable: true
                        date_created:
                          type: string
                          format: date-time
                        date_modified:
                          type: string
                          format: date-time
                          nullable: true
                        description:
                          type: string
                          nullable: true
                        image_src:
                          type: string
                          nullable: true
                        images:
                          type: array
                          nullable: true
                          items:
                            type: object
                            properties:
                              is_main:
                                type: boolean
                                nullable: true
                              order:
                                type: number
                              src:
                                type: string
                        max_tier_value:
                          type: number
                          nullable: true
                        min_tier_value:
                          type: number
                          nullable: true
                        modified_by:
                          type: string
                        price:
                          type: number
                          nullable: true
                        pricing_method:
                          type: integer
                        sku:
                          type: string
                        title:
                          type: string
                        tiers:
                          type: array
                          nullable: true
                          items:
                            type: object
                            properties:
                              min_qty:
                                type: number
                              value:
                                type: number
                        type:
                          type: string
                          default: regular
                          enum:
                            - regular
                            - bundle
                        uuid:
                          type: string
                          format: uuid
                        highlights:
                          type: object
                          additionalProperties: true
                          nullable: true
                  has_more_items:
                    type: boolean
                  total:
                    type: number
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /public/v2/product-catalog/items:
    post:
      tags:
        - Product catalog
      summary: Create Catalog Item
      description: Create a new catalog item.
      operationId: createCatalogItem
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Create Catalog item:
                value:
                  type: regular
                  title: New Product
                  category_id: null
                  sku: ''
                  description: null
                  price_configuration:
                    currency: EUR
                    price: 1
                    cost: null
                    pricing_method: 0
                    tiers: null
                    billing_type: one_time
                    billing_cycle: null
                  custom_fields: []
                  images: []
                  bundle_items: []
            schema:
              $ref: '#/components/schemas/ProductCatalogItemRequest'
      responses:
        '200':
          description: Successfully created a new catalog item
          content:
            application/json:
              examples:
                Created Catalog item:
                  value:
                    uuid: ea90c56c-1350-41e0-97d1-3b3be0764f9c
                    title: New Product
                    date_created: '2024-07-18T13:11:42.326997'
                    date_modified: '2024-07-18T13:11:42.326997'
                    created_by: FA5QAu8UGA3oVDQZuPL75B
                    modified_by: FA5QAu8UGA3oVDQZuPL75B
                    default_price_configuration:
                      uuid: 71b0660f-f6a4-413a-a9cb-dd1f4d93754e
                      price: 1
                      cost: null
                      currency: EUR
                      pricing_method: 0
                      tiers: null
                      billing_cycle: null
                      billing_type: one_time
                    variants:
                      - uuid: ff6ae8fd-a31f-485b-8437-5ff72fe40d97
                        sku: '211813902327'
                        description: null
                        custom_fields: []
                        images: []
                        date_created: '2024-07-18T13:11:42.326997'
                        date_modified: '2024-07-18T13:11:42.326997'
                        status: 0
                        price_configurations:
                          - uuid: 71b0660f-f6a4-413a-a9cb-dd1f4d93754e
                            price: 1
                            cost: null
                            currency: EUR
                            pricing_method: 0
                            tiers: null
                            billing_cycle: null
                            billing_type: one_time
                    category_id: null
                    category_name: null
                    type: regular
                    bundle_items: null
              schema:
                $ref: '#/components/schemas/ProductCatalogItemResponse'
        '403':
          description: Permission error
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    example: forbidden
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: inactive_addon
                        pointer:
                          type: string
                          nullable: true
                          example: null
                        data:
                          type: object
                          properties:
                            message:
                              type: string
                              example: You do not have Notary On Demand addon or it is inactive.
  '/public/v2/product-catalog/items/{item_uuid}':
    parameters:
      - name: item_uuid
        in: path
        description: Catalog item UUID
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - Product catalog
      summary: Catalog Item Details
      description: Get catalog item.
      operationId: getCatalogItem
      parameters:
        - name: item_uuid
          in: path
          description: Catalog item UUID
          required: true
          examples:
            Catalog Items Details:
              value: 2e39c7e0-acb0-4ff2-b4cd-ea3141f95db8
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Get Catalog Item
          content:
            application/json:
              examples:
                Catalog Items Details:
                  value:
                    uuid: 2e39c7e0-acb0-4ff2-b4cd-ea3141f95db8
                    title: New Product
                    date_created: '2024-07-18T13:15:13.542219'
                    date_modified: '2024-07-18T13:15:13.542219'
                    created_by: FA5QAu8UGA3oVDQZuPL75B
                    modified_by: FA5QAu8UGA3oVDQZuPL75B
                    default_price_configuration:
                      uuid: 99dc088e-c42a-483f-8b07-01a482d3e85d
                      price: 1
                      cost: null
                      currency: EUR
                      pricing_method: 0
                      tiers: null
                      billing_cycle: null
                      billing_type: one_time
                    variants:
                      - uuid: f5a99f07-8cbb-46b2-beb2-5d4c52d3fb4e
                        sku: '211814113542'
                        description: null
                        custom_fields: []
                        images: []
                        date_created: '2024-07-18T13:15:13.542219'
                        date_modified: '2024-07-18T13:15:13.542219'
                        status: 0
                        price_configurations:
                          - uuid: 99dc088e-c42a-483f-8b07-01a482d3e85d
                            price: 1
                            cost: null
                            currency: EUR
                            pricing_method: 0
                            tiers: null
                            billing_cycle: null
                            billing_type: one_time
                    category_id: null
                    category_name: null
                    type: regular
                    bundle_items: null
              schema:
                $ref: '#/components/schemas/ProductCatalogItemResponse'
        '403':
          $ref: '#/paths/~1public~1v2~1product-catalog~1items/post/responses/403'
    patch:
      tags:
        - Product catalog
      summary: Update Catalog Item
      description: Update catalog item.
      operationId: updateCatalogItem
      parameters:
        - name: item_uuid
          in: path
          description: Catalog item UUID
          required: true
          examples:
            Update Catalog Item:
              value: 2e39c7e0-acb0-4ff2-b4cd-ea3141f95db8
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Update Catalog Item:
                value:
                  type: regular
                  title: New name
                  category_id: null
                  product_variant:
                    sku: '211813881147'
                    description: <p>New description</p>
                    custom_fields:
                      - name: Field
                        value: Value
                    price_configuration:
                      price: 99
                      currency: USD
                      cost: 1
                      pricing_method: 1
                      tiers:
                        - min_qty: 1
                          value: 10
                        - min_qty: 2
                          value: 8
                      billing_type: one_time
                      billing_cycle: null
                    images: []
                  bundle_items: []
            schema:
              $ref: '#/components/schemas/ProductCatalogItemPatchRequest'
      responses:
        '200':
          description: Update Catalog item
          content:
            application/json:
              examples:
                Update Catalog item:
                  value:
                    uuid: 2e39c7e0-acb0-4ff2-b4cd-ea3141f95db8
                    title: New name
                    date_created: '2024-07-18T13:15:13.542219'
                    date_modified: '2024-07-18T13:19:21.692454'
                    created_by: FA5QAu8UGA3oVDQZuPL75B
                    modified_by: FA5QAu8UGA3oVDQZuPL75B
                    default_price_configuration:
                      uuid: 99dc088e-c42a-483f-8b07-01a482d3e85d
                      price: 99
                      cost: 1
                      currency: USD
                      pricing_method: 1
                      tiers:
                        - min_qty: 1
                          value: 10
                        - min_qty: 2
                          value: 8
                      billing_cycle: null
                      billing_type: one_time
                    variants:
                      - uuid: f5a99f07-8cbb-46b2-beb2-5d4c52d3fb4e
                        sku: '211813881147'
                        description: <p>New description</p>
                        custom_fields:
                          - name: Field
                            value: Value
                        images: []
                        date_created: '2024-07-18T13:15:13.542219'
                        date_modified: '2024-07-18T13:19:21.692454'
                        status: 0
                        price_configurations:
                          - uuid: 99dc088e-c42a-483f-8b07-01a482d3e85d
                            price: 99
                            cost: 1
                            currency: USD
                            pricing_method: 1
                            tiers:
                              - min_qty: 1
                                value: 10
                              - min_qty: 2
                                value: 8
                            billing_cycle: null
                            billing_type: one_time
                    category_id: null
                    category_name: null
                    type: regular
                    bundle_items: null
              schema:
                $ref: '#/components/schemas/ProductCatalogItemResponse'
        '403':
          $ref: '#/paths/~1public~1v2~1product-catalog~1items/post/responses/403'
    delete:
      tags:
        - Product catalog
      summary: Delete Catalog Item
      description: Delete catalog item.
      operationId: deleteCatalogItem
      parameters:
        - name: item_uuid
          in: path
          description: Catalog item UUID
          required: true
          examples:
            Delete Catalog Item:
              value: 2e39c7e0-acb0-4ff2-b4cd-ea3141f95db8
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: No content
        '403':
          $ref: '#/paths/~1public~1v2~1product-catalog~1items/post/responses/403'
  '/public/v1/documents/{document_id}/quotes/{quote_id}':
    put:
      tags:
        - Quotes
      summary: Quote update
      operationId: quoteUpdate
      parameters:
        - name: document_id
          description: Document ID
          in: path
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: quote_id
          description: Quote ID
          in: path
          schema:
            type: string
          required: true
          example: 99aaa4f9-3250-4f5b-a953-6d7bfc5d8c9e
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/workspaces:
    get:
      tags:
        - User and Workspace management
      operationId: getWorkspacesList
      summary: List Workspaces
      description: |
        Get a list of all the active workspaces in the organization.
      parameters:
        - name: count
          in: query
          description: Number of elements in page.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 50
        - name: page
          in: query
          description: Page number.
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        '200':
          description: Page of workspaces
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
              examples:
                List Workspaces:
                  value:
                    results:
                      - id: QCTETChxCDRWfM2FW4g9fX
                        name: Workspace
                        owner: siarhei@pandadoc.com
                        date_created: '2022-05-14T22:22:41.255046Z'
                    total: 1
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
    post:
      tags:
        - User and Workspace management
      summary: Create Workspace
      operationId: createWorkspace
      description: |
        Create a workspace in your organization.

        - You need to be an Org Admin to create a workspace.
        - You will be added to the new workspace with an Admin role.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequest'
            examples:
              Create Workspace:
                value:
                  name: A new workspace
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkspaceResponse'
              examples:
                Create Workspace:
                  value:
                    id: 5RdKYSewV5vMtik3CmoDMR
                    name: A new workspace
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/workspaces/{workspace_id}/deactivate':
    post:
      tags:
        - User and Workspace management
      summary: Deactivate Workspace
      description: |
        Deactivate the workspace, remove all the members from it and make it 
        unavailable.
      operationId: deactivateWorkspace
      parameters:
        - name: workspace_id
          in: path
          schema:
            type: string
          required: true
          examples:
            Deactivate workspace:
              value: BhVzRcxH9Z2LgfPPGXFUBa
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
            examples:
              Deactivate workspace:
                value: {}
      responses:
        '200':
          description: Workspace was deactivated successfully.
          content:
            application/json:
              schema:
                type: object
              examples:
                Deactivate workspace:
                  value: {}
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/users:
    get:
      tags:
        - User and Workspace management
      summary: List Users
      operationId: listUsers
      description: |
        Get a list of all users with membership in your organization, with their contact information, license type, and workspace roles.

        You must be an organization admin to list users.
      parameters:
        - name: count
          in: query
          description: Number of elements in page.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
            default: 50
        - name: page
          in: query
          description: Page number.
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
        - name: show_removed
          in: query
          description: Filter option - show users with removed memberships.
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Page of users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
              examples:
                List Users:
                  value:
                    total: 1
                    results:
                      - user_id: ajnN7eGutJZsRKjQrNuPkh
                        email: josh@example.com
                        first_name: Josh
                        last_name: Doe
                        phone_number: '+14842634627'
                        license: Full
                        is_organization_owner: true
                        workspaces:
                          - role: Admin
                            workspace_id: fERpqZdFaF9dHVAeVxPFaV
                            membership_id: nPh2PDhFdDqAES9k64h9qX
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
    post:
      tags:
        - User and Workspace management
      summary: Create User
      operationId: createUser
      description: |
        Create users, and assign them roles, licenses, and workspaces.

        - You must be an organization admin to create users.
        - We check that the user email domain matches your organization domain.
        - We check that the user email and phone number have a valid format.
      parameters:
        - name: notify_user
          description: Send a confirmation email to the user that was added to workspace(s).
          in: query
          schema:
            type: boolean
        - name: notify_ws_admins
          description: Send a confirmation email to all workspace admins indicating that the user has been added to the workspace.
          in: query
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
            examples:
              Create User:
                value:
                  user:
                    email: test@pandadoc.com
                    first_name: New
                    last_name: User
                    phone_number: ''
                  workspaces:
                    - workspace_id: Ab123
                      role: Collaborator
                  license: Guest
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
              examples:
                Create User:
                  value:
                    workspaces:
                      - workspace_id: MwZbjUVD5C3srSSxkpF4Aj
                        role: Member
                        member_id: VQDH2hdAPJBhSWmMrYa3zu
                    user_id: KwahvjapLm4RDf6pfyYdjA
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  type:
                    type: string
                    example: request_error
                  detail:
                    type: object
                    example:
                      email:
                        - User already exists
                        - User email should have the same email domain as org admin.
                        - Enter a valid email address.
                      role:
                        - Role is not a valid choice.
                        - This field is required.
                      license:
                        - Unable to add more licenses.
                        - License is not a valid choice.
                        - This field is required.
                      workspace_id:
                        - This field is required.
                        - 'Workspace with uuid {uuid} not found.'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/workspaces/{workspace_id}/members':
    post:
      tags:
        - User and Workspace management
      summary: Add Member to Workspace
      description: |
        Add an existing user to a workspace.
        - You must be an organization admin or a workspace admin to add members.
      operationId: addMember
      parameters:
        - name: workspace_id
          in: path
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: notify_user
          description: Send a confirmation email to the user that was added to workspace(s).
          in: query
          schema:
            type: boolean
        - name: notify_ws_admins
          description: Send a confirmation email to all workspace admins indicating that the user has been added to the workspace.
          in: query
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Add Member to Workspace:
                value:
                  user_id: 2eWSKSvVqmuVCnuUK3iWwD
                  role: Member
            schema:
              $ref: '#/components/schemas/AddMemberRequest'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddMemberResponse'
              examples:
                Add Member to Workspace:
                  value:
                    member_id: iMymdDd9XFD3HyxP5VD67Q
                    workspace_id: 2eWSKSvVqmuVCnuUK3iWwD
                    role: Admin
                    email: email@example.com
                    first_name: John
                    last_name: Doe
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  type:
                    type: string
                    example: request_error
                  detail:
                    type: object
                    example:
                      user_id:
                        - User doesn't exist
                        - Member already exists
                        - This field is required
                      role:
                        - Role is not a valid choice
                        - This field is required
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/workspaces/{workspace_id}/members/{member_id}':
    delete:
      tags:
        - User and Workspace management
      summary: Remove Member from Workspace
      operationId: removeMember
      parameters:
        - name: workspace_id
          in: path
          description: Workspace id
          schema:
            type: string
          required: true
          example: BhVzRcxH9Z2LgfPPGXFUBa
        - name: member_id
          in: path
          description: Member id
          schema:
            type: string
          required: true
          example: nPh2PDhFdDqAES9k64h9qX
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  type:
                    type: string
                    example: request_error
                  detail:
                    type: string
                    example: Owner can not be removed.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  type:
                    type: string
                    example: request_error
                  detail:
                    type: string
                    example: This member or workspace does not exist.
        '429':
          $ref: '#/components/responses/429'
  '/public/v1/workspaces/{workspace_id}/api-keys':
    post:
      tags:
        - User and Workspace management
      summary: Create API Key
      description: "Generate a new API key for the workspace.\nCheck out [API Key Authentication article](https://developers.pandadoc.com/reference/api-key-authentication-process) for detailed API Keys description.\n\n> \U0001F4D8 \n> - Only an **Org Admin** can generate an API keys.\n> - To make another user a key's owner, pass `user_id` of this user. The user should has an **Admin** role in the workspace.\n> - Generating a new key invalidates existing key with the same type. Using this request, you can deactivate the key you're using for the request.\n"
      operationId: createApiKey
      parameters:
        - name: workspace_id
          in: path
          description: Workspace id.
          schema:
            type: string
          required: true
          examples:
            Create Production API key:
              value: BhVzRcxH9Z2LgfPPGXFUBa
            Create Sandbox API key:
              value: radQBiBkU7MBk59NSgaGf5
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Create Production API key:
                value:
                  type: production
                  user_id: ajnN7eGutJZsRKjQrNuPkh
              Create Sandbox API key:
                value:
                  type: sandbox
                  user_id: 2eWSKSvVqmuVCnuUK3iWwD
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: 2eWSKSvVqmuVCnuUK3iWwD
                type:
                  type: string
                  enum:
                    - production
                    - sandbox
                  default: sandbox
              required:
                - type
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Create Production API key:
                  value:
                    user_id: ajnN7eGutJZsRKjQrNuPkh
                    type: production
                    workspace_id: BhVzRcxH9Z2LgfPPGXFUBa
                    key: 5606722917eaf631cce6256e64b4afbd30d0e5fa
                Create Sandbox API key:
                  value:
                    user_id: 2eWSKSvVqmuVCnuUK3iWwD
                    type: sandbox
                    workspace_id: radQBiBkU7MBk59NSgaGf5
                    key: 1234522917eaf6313336256e64b4afbd30d54321
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    description: A unique identifier of the user.
                    example: ajnN7eGutJZsRKjQrNuPkh
                  type:
                    type: string
                    enum:
                      - production
                      - sandbox
                    description: A type of created key.
                    example: production
                  workspace_id:
                    type: string
                    description: A unique identifier of the workspace.
                    example: BhVzRcxH9Z2LgfPPGXFUBa
                  key:
                    type: string
                    description: A New Public API key.
                    example: 5606722917eaf631cce6256e64b4afbd30d0e5fa
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /public/v1/sms-opt-outs:
    get:
      summary: Recent SMS Opt-out
      operationId: listRecentSmsOptOuts
      description: "Retrieves a list of the most recent SMS opt-out changes for each phone numbers used in your workspace.\n\n> \U0001F4D8 You can filter results by time range using `timestamp_from` and `timestamp_to`.\n"
      tags:
        - Communication Preferences
      parameters:
        - name: timestamp_from
          in: query
          description: |
            The start of the timestamp. 

            If no timestamp is provided, 1 hour before the current time will be used.
          schema:
            type: string
            format: date-time
            example: '2025-01-28T00:00:00Z'
        - name: timestamp_to
          in: query
          description: |
            The end of the timestamp range. 

            If no timestamp is provided the current time will be used.
          schema:
            type: string
            format: date-time
            example: '2025-01-28T23:59:59Z'
      responses:
        '200':
          description: 'A list of phone numbers, their SMS current opt-out statuses and timestamp of the last change.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        phone_number:
                          type: string
                          example: '+1234567890'
                        status:
                          type: string
                          enum:
                            - opt-in
                            - opt-out
                          example: opt-out
                        opt_out_changed:
                          type: string
                          format: date-time
                          example: '2025-01-28T12:00:00Z'
              examples:
                List SMS Opt-out Changelog:
                  value:
                    results:
                      - phone_number: '+1234567890'
                        status: opt-out
                        opt_out_changed: '2025-01-28T12:00:00Z'
                      - phone_number: '+1234567891'
                        status: opt-in
                        opt_out_changed: '2025-01-28T12:00:00Z'
        '400':
          $ref: '#/components/responses/400RequestError'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
components:
  schemas:
    OAuth2CreateAccessTokenRequest:
      type: object
      title: Create Access Token
      properties:
        grant_type:
          type: string
          description: This value must be set to `authorization_code`.
          default: authorization_code
        client_id:
          type: string
          description: Client ID that is automatically generated after application creation in the Developer Dashboard.
          example: 479a3c7ba4a8d3cf28702
        client_secret:
          type: string
          description: Client secret that is automatically generated after application creation in the Developer Dashboard.
          example: a66515d3caf9183b8cad3eee546bcba892b45b01
        code:
          type: string
          description: |
            `auth_code` from the server on the previous step (Authorize a PandaDoc User).
          example: a9a60d4dabb61ade665c712d2b41766e7bb9a2f9
        scope:
          type: string
          description: 'Requested permissions. Use `read+write` to create, send, delete, and download documents, and `read` to view templates and document details.'
          example: read+write
      required:
        - grant_type
        - client_id
        - client_secret
        - code
    OAuth2RefreshAccessTokenRequest:
      type: object
      title: Refresh Access Token
      properties:
        grant_type:
          type: string
          description: This value must be set to `refresh_token`.
          default: refresh_token
        client_id:
          type: string
          description: Client ID that is automatically generated after application creation in the Developer Dashboard.
          example: 479a3c7ba4a8d3cf28702
        client_secret:
          type: string
          description: Client secret that is automatically generated after application creation in the Developer Dashboard.
          example: a66515d3caf9183b8cad3eee546bcba892b45b01
        refresh_token:
          type: string
          description: |
            `refresh_token` you received and stored from the server when initially creating an `access_token`.
          example: f61cc0cffd437c9a596f0acc8eb6f502a7a429d7
        scope:
          type: string
          description: Requested permissions. Use `read+write` as our default value to send documents.
          example: read+write
      required:
        - grant_type
        - client_id
        - client_secret
        - refresh_token
    OAuth2AccessTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          example: 2ff2dfe36322448c6953616740a910be57bbd4ca
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: number
          example: 31535999
        scope:
          type: string
          example: read+write
        refresh_token:
          type: string
          example: 4c82f23d91a75961f4d08134fc5ad0dfe6a4c36a
    DocumentListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: ZsiBHUyksDoKActQNGz542
              name:
                type: string
                example: Sample Document
              status:
                type: string
                example: document.draft
              date_created:
                type: string
                example: '2021-10-08T11:06:32.337395Z'
              date_modified:
                type: string
                example: '2021-10-08T11:06:32.337395Z'
              expiration_date:
                type: string
                nullable: true
                example: '2021-10-08T11:06:32.337395Z'
              version:
                type: string
                example: '2'
    DocumentCreateByTemplateRequest:
      allOf:
        - type: object
          properties:
            template_uuid:
              type: string
              description: 'The ID of a template you want to use. You can copy it from an in app template url such as `https://app.pandadoc.com/a/#/templates/{ID}/content`. A template ID is also obtained by listing templates.'
              example: hryJY9mqYZHjQCYQuSjRQg
            fields:
              type: object
              description: You can pass a list of fields/values to pre-fill fields used in a template. Note that the Signature field can't be pre-filled.
              example:
                Like:
                  value: true
                Delivery:
                  value: Same Day Delivery
                Date:
                  value: '2019-12-31T00:00:00.000Z'
            images:
              type: array
              description: You can pass a list of images to image blocks (one image in one block) for replacement.
              items:
                type: object
                nullable: true
                properties:
                  urls:
                    type: array
                    items:
                      type: string
                    example:
                      - 'https://s3.amazonaws.com/pd-static-content/public-docs/pandadoc-panda-bear.png'
                  name:
                    type: string
                    example: Image 1
                required:
                  - urls
                  - name
            pricing_tables:
              type: array
              description: 'Information to construct or populate a pricing table can be passed when creating a document. All product information must be passed when creating a new document. Products stored in PandaDoc cannot be used to populate table rows at this time. Keep in mind that this is an array, so multiple table objects can be passed to a document. Make sure that "Automatically add products to this table" is enabled in the PandaDoc template pricing tables you wish to populate via API.'
              items:
                $ref: '#/components/schemas/PricingTableRequest'
            tables:
              type: array
              description: 'Information to construct or populate a table can be passed when creating a document. Keep in mind that this is an array, so multiple table objects can be passed to a document.'
              items:
                $ref: '#/components/schemas/TableRequest'
            detect_title_variables:
              type: boolean
              description: Set this parameter as true if you want to detect title variables in the document.
              example: true
            content_placeholders:
              type: array
              description: 'You may replace Content Library Item Placeholders with a few content library items each and pre-fill fields/variables values, pricing table items, and assign recipients to roles from there.'
              items:
                type: object
                properties:
                  content_library_items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Content library item id
                          example: hryJY9mqYZHjQCYQuSjRQg
                        fields:
                          type: object
                        pricing_tables:
                          type: array
                          items:
                            $ref: '#/components/schemas/PricingTableRequest'
                        recipients:
                          type: array
                          items:
                            type: object
                            properties:
                              email:
                                type: string
                                nullable: true
                                example: josh@example.com
                              phone:
                                type: string
                                nullable: true
                                example: '+14842634627'
                              delivery_methods:
                                $ref: '#/components/schemas/RecipientDeliveryMethods'
                              first_name:
                                type: string
                                example: Josh
                              last_name:
                                type: string
                                example: Ron
                              role:
                                type: string
                                example: user
                              signing_order:
                                type: integer
                                example: 1
                                nullable: true
                              redirect:
                                $ref: '#/components/schemas/RecipientRedirect'
                      required:
                        - id
                  block_id:
                    type: string
                    description: Content placeholder block id
                    example: Content Placeholder 1
                required:
                  - block_id
          required:
            - template_uuid
            - recipients
        - $ref: '#/components/schemas/DocumentCreateByPdfRequest/allOf/1'
    DocumentCreateByPdfRequest:
      allOf:
        - type: object
          required:
            - name
          properties:
            parse_form_fields:
              type: boolean
              description: Set this parameter as `true` if you create a document from a PDF with form fields and as `false` if you upload a PDF with field tags.
            fields:
              type: object
              description: |
                If you are creating a document from a PDF with field tags, you can pass a list of the fields you'd like to pre-fill in the document. If you are creating a document from a PDF with form fields, list all the fields and provide the `role` parameter so that the fields are assigned to document recipients. You can provide empty value for the field so that it's not pre-filled: "value": "".
              example:
                Like:
                  value: true
                Delivery:
                  value: Same Day Delivery
                Date:
                  value: '2019-12-31T00:00:00.000Z'
        - type: object
          properties:
            name:
              type: string
              description: Name the document you are creating.
              example: API Sample Document from PandaDoc Template
            folder_uuid:
              type: string
              example: QMDSzwabfFzTgjW4kUijqQ
              description: ID of the folder where the created document should be stored.
            owner:
              type: object
              properties:
                email:
                  type: string
                  example: john.doe@example.com
                membership_id:
                  type: string
                  example: QMDSzwabfFzTgjW6KijHyu
              description: The owner of the document. Pass either `email` or `membership_id` of the user in the workspace.
              example:
                membership_id: QMDSzwabfFzTgjW6KijHyu
            recipients:
              type: array
              description: 'The list of recipients to whom the document will be sent. Either `email` or `phone` is required. Specifying the `role` assigns all matching fields to the recipient or group. If `first_name` and `last_name` are not specified, the system looks them up in the workspace contacts list using the `email` or `phone number`. If `first_name` and `last_name` are provided, they override the existing contact''s data.'
              items:
                $ref: '#/components/schemas/CreateDocumentActor'
            tokens:
              type: array
              description: Also known as variables. Pass values for the variables in the template to render them into the created document or make them available for insertion later.
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: Client.CompanyName
                  value:
                    type: string
                    example: PandaDoc
                required:
                  - name
                  - value
            metadata:
              type: object
              nullable: true
              description: You can pass any data in a key-value format to associate it with a document. Searching by metadata is available in the List Documents endpoint and is also included in the Document Details response.
              example:
                lead_id: '1234567'
                lead_source: PandaDoc
            tags:
              type: array
              description: 'Mark your document with one or more tags. Tags are displayed in the UI, and you can filter by tags in the List Documents endpoint.'
              items:
                type: string
              example:
                - created_via_api
                - test_document
                - created_from_source
    DocumentCreateRequest:
      oneOf:
        - allOf:
            - type: object
              title: From PandaDoc Template
              description: Use a PandaDoc template to create a document.
              properties:
                template_uuid:
                  type: string
                  description: 'ID of the template you want to use. You can copy it from an in-app template URL such as `https://app.pandadoc.com/a/#/templates/{ID}/content`. A template ID is also obtained by listing templates.'
                  example: hryJY9mqYZHjQCYQuSjRQg
              required:
                - template_uuid
            - $ref: '#/components/schemas/DocumentCreateByTemplateRequest'
        - allOf:
            - type: object
              title: From File By Url
              description: Use a URL to create a document.
              properties:
                url:
                  type: string
                  example: 'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf'
                  description: Secure (HTTPS) and publicly accessible URL to the PDF document.
              required:
                - url
            - $ref: '#/components/schemas/DocumentCreateByPdfRequest'
    DocumentCreateResponse:
      type: object
      properties:
        id:
          type: string
          example: cKbJ7uay3cEGtsKuGPwYGX
        name:
          type: string
          example: API Sample Document from PandaDoc Template
        status:
          $ref: '#/components/schemas/DocumentStatusEnum'
        date_created:
          type: string
          example: '2021-10-08T11:06:32.337395Z'
        date_modified:
          type: string
          example: '2021-10-08T11:06:32.337395Z'
        expiration_date:
          type: string
          nullable: true
          example: '2021-10-08T11:06:32.337395Z'
        uuid:
          type: string
          example: cKbJ7uay3cEGtsKuGPwYGX
        links:
          type: array
          items:
            type: object
            properties:
              rel:
                type: string
                example: status
              href:
                type: string
                example: 'https://api.pandadoc.com/public/v1/documents/jzjCfYgKQYm2u9ctwN6io4'
              type:
                type: string
                example: GET
        info_message:
          type: string
          example: You need to poll the Document Status method until the status will be changed to document.draft
    DocumentStatusResponse:
      type: object
      properties:
        id:
          type: string
          example: msFYActMfJHqNTKH8YSvF1
        name:
          type: string
          example: API Sample Document from PandaDoc Template
        status:
          type: string
          example: document.viewed
        date_created:
          type: string
          example: '2017-07-06T08:42:13.836022Z'
        date_modified:
          type: string
          nullable: true
          example: '2017-08-04T02:21:13.963750Z'
        date_completed:
          type: string
          nullable: true
          example: '2018-08-03T08:21:38.809868Z'
        expiration_date:
          type: string
          nullable: true
          example: '2018-08-05T08:21:38.809868Z'
        version:
          type: string
          nullable: true
          example: '2'
        uuid:
          type: string
          example: msFYActMfJHqNTKH8YSvF1
    DocumentUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the document.
          example: Contract
        recipients:
          type: array
          description: 'The list of recipients you''re sending the document to. The ID or email are required. If the ID is passed, an existing recipient will be updated. If the email is passed, a new recipient will be added to CC.'
          items:
            anyOf:
              - $ref: '#/components/schemas/UpdateDocumentRecipient'
              - $ref: '#/components/schemas/UpdateDocumentRecipientGroup'
            discriminator:
              propertyName: type
              mapping:
                recipient: '#/components/schemas/UpdateDocumentRecipient'
                recipient_group: '#/components/schemas/UpdateDocumentRecipientGroup'
        fields:
          type: object
          description: You may pass a list of fields/values which exist in a document. Please use `Merge Field` property of the fields like the key.
          example:
            Like:
              value: true
            Delivery:
              value: Same Day Delivery
            Date:
              value: '2019-12-31T00:00:00.000Z'
        tokens:
          type: array
          description: Create or initialize multiple variables with their values using tokens/values list.
          items:
            type: object
            properties:
              name:
                type: string
                example: Favorite.Pet
              value:
                type: string
                example: Panda
            required:
              - name
              - value
        tags:
          type: array
          description: Mark your document with one or several tags.
          items:
            type: string
          example:
            - updated_via_api
            - test_document
        metadata:
          type: object
          description: 'You can pass arbitrary data in the key-value format to associate custom information with a document. This information is returned in any API requests for the document details by id. If metadata exists in a document then the value will be updated. Otherwise, metadata will be added to the document.'
          example:
            my_favorite_pet: Cat
        pricing_tables:
          type: array
          items:
            $ref: '#/components/schemas/PricingTableRequest'
        tables:
          type: array
          items:
            $ref: '#/components/schemas/TableRequest'
        images:
          type: array
          description: You can pass a list of images to image blocks (one image in one block) for replacement.
          items:
            type: object
            properties:
              urls:
                type: array
                items:
                  type: string
                example:
                  - 'https://s3.amazonaws.com/pd-static-content/public-docs/pandadoc-panda-bear.png'
              name:
                type: string
                example: Image 1
            required:
              - urls
              - name
    DocumentStatusChangeRequest:
      type: object
      properties:
        status:
          type: integer
          enum:
            - 2
            - 10
            - 11
            - 12
          example: 12
          description: Number code for the target document status. See notes for the codes corresponding to each status.
        note:
          type: string
          description: Provide “private notes” regarding the manual status change.
          example: A private note
        notify_recipients:
          type: boolean
          description: Send a notification email about the status change to all recipients.
      required:
        - status
    DocumentDetailsResponse:
      type: object
      properties:
        id:
          type: string
          example: 7kqXgjFejB2toXxjcC5jfZ
        name:
          type: string
          example: API Sample Document from PandaDoc Template
        autonumbering_sequence_name_prefix: {}
        date_created:
          type: string
          example: '2021-10-23T21:07:04.147345Z'
        date_modified:
          type: string
          example: '2021-10-23T21:07:04.147345Z'
        date_completed:
          type: string
          example: '2021-10-23T21:07:04.147345Z'
          nullable: true
        content_date_modified:
          type: string
          example: '2021-10-23T21:07:04.147345Z'
        date_sent:
          type: string
          nullable: true
          example: '2021-10-23T21:07:04.147345Z'
        ref_number:
          type: string
          example: MTMJR-FEUQB-ECEWW-3WVZP
        created_by:
          type: object
          properties:
            id:
              type: string
              example: 7kqXgjFejB2toXxjcC5jfZ
            membership_id:
              type: string
              example: 7kqXgjFejB2toXxjcC5jfZ
            email:
              type: string
              example: teset@test.test
            first_name:
              type: string
              example: Jhon
            last_name:
              type: string
              example: Dow
            avatar:
              type: string
              example: 'https://pd-live-media.s3.amazonaws.com/users/000GTSGwJw000L2KZqc000/avatar.jpg'
              nullable: true
        template:
          type: object
          nullable: true
          properties:
            id:
              type: string
              example: hryJY9mqYZHjQCYQuSjRQg
            name:
              type: string
              example: Upload test
        expiration_date: {}
        metadata:
          type: object
          example:
            document__created_via_public_api: 'true'
            my_favorite_pet: Panda
            opp_id: '1234567'
        tokens:
          type: array
          items:
            type: object
          example:
            - name: Document.GrandTotal
              value: $29.99
            - name: Favorite.Pet
              value: Panda
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          example:
            - uuid: f9574c3b-5b1e-4479-b2c9-c3ccd92748f3
              name: Click to upload a file
              title: ''
              placeholder: Click to upload a file
              value:
                name: file_name.pdf
                url: 'https://uploadfields.pandadoc-static.com/collect_files/e7b082c2-395b-43c7-a24c-66bd1bbb5d2f/65af1f23-9d26-4622-8ff0-f406b3be27b8-file_name.pdf'
              assigned_to:
                id: Fx7CgaVgpGbJBgZ4i5oTx8
                first_name: John
                last_name: Roe
                email: john@example.com
                recipient_type: signer
                has_completed: false
                role: ''
                roles:
                  - singer
                type: recipient
              field_id: CollectFile1
              type: collect_file
            - uuid: f9574c3b-5b1e-4479-b2c9-c3ccd92748f3
              name: Favorite.Color
              merge_field: Favorite.Color
              title: Textfield
              value: value
              assigned_to:
                id: Fx7CgaVgpGbJBgZ4i5oTx8
                name: Group 2
                email: group2@example.com
                recipient_type: signer
                has_completed: false
                roles: []
                type: recipient_group
                members:
                  - id: 4b011d86-286b-4f86-b697-90a6ad3f1489
                    email: john@example.com
                    first_name: John
                    last_name: Doe
              field_id: text1
              type: text
            - uuid: M4755SJuoyz5Jzsw4WXTDb
              name: Like
              merge_field: Like
              title: Checkbox
              value: true
              assigned_to:
                id: Fx7CgaVgpGbJBgZ4i5oTx8
                first_name: John
                last_name: Roe
                email: john@example.com
                recipient_type: signer
                has_completed: false
                role: ''
                roles:
                  - signer
                type: recipient
              field_id: checkbox1
              type: checkbox
        pricing:
          $ref: '#/components/schemas/PricingResponse'
        version:
          type: string
          example: '2'
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
        sent_by: {}
        recipients:
          type: array
          items:
            type: object
            description: Actor
            oneOf:
              - $ref: '#/components/schemas/DocumentDetailsRecipient'
              - $ref: '#/components/schemas/DocumentDetailsRecipientGroup'
            discriminator:
              propertyName: type
              mapping:
                recipient: '#/components/schemas/DocumentDetailsRecipient'
                recipient_group: '#/components/schemas/DocumentDetailsRecipientGroup'
        grand_total:
          type: object
          properties:
            amount:
              type: string
              example: '29.99'
            currency:
              type: string
              example: USD
        linked_objects:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
                example: hubspot
              entity_type:
                type: string
                example: deal
              entity_id:
                type: string
                example: '18640'
              id:
                type: string
                example: ea88ed1dc8094dd3a57754aa643a1954
        status:
          type: string
          example: document.draft
    DocumentCreateLinkRequest:
      type: object
      properties:
        recipient:
          type: string
          description: The email address for the recipient you're creating a document link for.
          example: josh@example.com
        lifetime:
          type: number
          description: Provide the number of seconds that a document link should be valid for. Default is 3600 seconds.
          example: 900
          default: 3600
      required:
        - recipient
    DocumentCreateLinkResponse:
      type: object
      properties:
        id:
          type: string
          example: QYCPtavst3DqqBK72ZRtbF
        expires_at:
          type: string
          example: '2017-08-29T22:18:44.315Z'
    DocumentSendRequest:
      type: object
      properties:
        message:
          type: string
          description: A message that will be sent by email with a link to a document to sign.
          example: Hello! This document was sent from the PandaDoc API
        subject:
          type: string
          description: Value that will be used as the email subject.
          example: Please check this test API document from PandaDoc
        silent:
          type: boolean
          description: 'If set true, disables sent, viewed, comment and completed email notifications for document recipients and the document sender. Also disables automatic reminders (manual reminders still possible). Doesn''t affect "Approve document" email notification sent to the Approver. We recommend always including the silent parameter to facilitate seamless document email management, as this setting is preserved throughout the entire document lifecycle.'
        sender:
          type: object
          description: You can set a sender of a document as an `email` or `membership_id`
          additionalProperties:
            type: string
          example:
            membership_id: QMDSzwabfFzTgjW6KijHyu
            email: john.doe@example.com
        forwarding_settings:
          type: object
          description: Set settings for Document and Signature forwarding.
          properties:
            forwarding_allowed:
              type: boolean
              description: Your recipient will be able/not able to forward the document to another email address.
              example: true
            forwarding_with_reassigning_allowed:
              type: boolean
              description: Your recipient will be able/not able to forward the right to fill out all fields (including signature) assigned to them to another email address.
              example: true
        selected_approvers:
          type: object
          description: Configuration for selected approvers.
          properties:
            steps:
              type: array
              description: Approval steps.
              items:
                type: object
                required:
                  - id
                  - group
                properties:
                  id:
                    type: string
                    description: Step ID.
                    example: LzWmancTxrgfTMpsJP9Eqd
                  group:
                    type: object
                    description: Group information.
                    required:
                      - id
                      - type
                      - assignees
                    properties:
                      id:
                        type: string
                        description: Group ID.
                        example: op9MA75HygJHiV4aeVHXCH
                      type:
                        type: string
                        description: Group type.
                        example: selectable
                      assignees:
                        type: array
                        description: Assignees for the group.
                        required:
                          - user
                          - is_selected
                        items:
                          type: object
                          properties:
                            user:
                              type: string
                              description: User ID.
                              example: tpBLrk3vJoLggypMSRt92i
                            is_selected:
                              type: boolean
                              description: Whether the user is selected.
                              example: true
    DocumentSendResponse:
      type: object
      properties:
        id:
          type: string
          example: msFYActMfJHqNTKH8YSvF1
        name:
          type: string
          example: API Sample Document from PandaDoc Template
        status:
          type: string
          example: document.sent
        date_created:
          type: string
          example: '2018-02-06T08:42:13.836022Z'
        date_modified:
          type: string
          example: '2018-02-06T08:42:13.836022Z'
        expiration_date:
          type: string
          example: '2018-02-06T08:42:13.836022Z'
        version:
          type: string
          example: '2'
        uuid:
          type: string
          example: msFYActMfJHqNTKH8YSvF1
        recipients:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: 7kqXgjFejB2toXxjcC5jfZ
              first_name:
                type: string
                example: Jhon
              last_name:
                type: string
                example: Dow
              recipient_type:
                type: string
                example: CC
              email:
                type: string
                nullable: true
                example: test@test.com
              phone:
                type: string
                nullable: true
                example: '+14842634627'
              delivery_methods:
                $ref: '#/components/schemas/RecipientDeliveryMethods'
              signing_order: {}
              shared_link:
                type: string
                example: 'https://app.pandadoc.com/document/b7f11ea3c09d1c11208cc122457d4f3a2829d364'
    DocumentAttachmentRequest:
      allOf:
        - type: object
          properties:
            source:
              type: string
              description: URL link to the file to be attached to a document
              example: 'https://is3-ssl.mzstatic.com/1e7fbd74-d10c-8e3a-63c3-0beb3ea231a5/512x512bb.jpg'
        - type: object
          properties:
            name:
              type: string
              description: Optional name to set for uploaded file
              example: Additional agreement
    DocumentAttachmentResponse:
      type: object
      properties:
        uuid:
          type: string
          example: 5a2df796-6c65-492b-955c-5709229a89f7
        date_created:
          type: string
          example: '2021-10-27T20:54:18.757496Z'
        created_by:
          type: object
          properties:
            id:
              type: string
              example: WbAzFZFMgXHnoQREADTdnE
            email:
              type: string
              example: test_user@mail.com
            first_name:
              type: string
              example: John
            last_name:
              type: string
              example: Smith
            avatar:
              type: string
              nullable: true
              example: 'https://pd-live-media.s3.amazonaws.com/users/000GTSGwJw000L2KZqc000/avatar.jpg'
        name:
          type: string
          nullable: true
          example: AttachedPhoto.jpg
    DocumentTransferOwnershipRequest:
      type: object
      properties:
        membership_id:
          type: string
          description: A unique identifier of a workspace member.
          example: radQBiBkU7MBk59NSgaGfd
    DocumentTransferAllOwnershipRequest:
      type: object
      properties:
        from_membership_id:
          type: string
          description: A unique identifier of a workspace member from whom you want to transfer ownership.
          example: Dqsxp4jNnFcS63tJEgLJGN
        to_membership_id:
          type: string
          description: A unique identifier of a workspace member to whom you want to transfer ownership.
          example: radQBiBkU7MBk59NSgaGfd
    DocumentRecipientCreateRequest:
      type: object
      properties:
        id:
          type: string
          example: 2eWSKSvVqmuVCnuUK3iWwD
          description: Contact uuid.
        kind:
          type: string
          enum:
            - contact
            - contact_group
          default: contact
      required:
        - id
        - kind
    DocumentRecipientEditRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
          example: user01@pandadoc.com
          description: You cannot use the email of another contact when updating a recipient contact.
        phone:
          type: string
          nullable: true
          example: '+14842634627'
        delivery_methods:
          $ref: '#/components/schemas/RecipientDeliveryMethods'
        first_name:
          type: string
          nullable: true
          example: John
        last_name:
          type: string
          nullable: true
          example: Doe
        company:
          type: string
          nullable: true
          example: John Doe Inc.
        job_title:
          type: string
          nullable: true
          example: CTO
        state:
          type: string
          nullable: true
          example: Texas
        street_address:
          type: string
          nullable: true
          example: 1313 Mockingbird Lane
        city:
          type: string
          nullable: true
          example: Austin
        postal_code:
          type: string
          nullable: true
          example: '75001'
        verification_settings:
          $ref: '#/components/schemas/RecipientVerificationSettings'
        redirect:
          $ref: '#/components/schemas/RecipientRedirect'
    QuoteUpdateRequest:
      type: object
      properties:
        sections:
          type: array
          description: 'Quote sections - this property overrides existing sections in the specified order. If you want to change only one section, you must still pass other sections IDs. Otherwise these sections will be removed.'
          items:
            type: object
            title: UpdateIntegrationQuoteSection
            properties:
              id:
                type: string
                format: uuid
                nullable: false
                description: Section ID to update. Invalid (or missing) ID causes creating a new section.
              name:
                type: string
                nullable: true
                description: 'Name of the quotes section. If you create a section without providing a value, it will have the default value.'
                default: Section name
              items:
                type: array
                description: 'Section items - this property overrides the existing items in the order specified. If you want to change only one item, you must still pass other items IDs. Otherwise these items will be removed.'
                items:
                  type: object
                  title: UpdateIntegrationQuoteSectionItem
                  properties:
                    id:
                      type: string
                      format: uuid
                      nullable: false
                      description: Item ID to update. Invalid (or missing) ID causes creating a new item.
                    sku:
                      type: string
                      nullable: false
                      description: 'Product SKU. If you create an item without providing a value, it will have the default value.'
                      default: '#'
                    name:
                      type: string
                      nullable: false
                      description: 'Item name. If you create an item without providing a value, it will have the default value.'
                      default: ''
                    description:
                      type: string
                      nullable: false
                      description: 'Item description. If you create an item without providing a value, it will have the default value.'
                      default: ''
                    qty:
                      type: integer
                      nullable: false
                      description: 'Item QTY. If you create an item without providing a value, it will have the default value.'
                      default: 1
                      example: 10
                    price:
                      type: number
                      nullable: false
                      description: 'Item price. If you create an item without providing a value, it will have the default value. If `price_settings` is passed, this value may change after the quote is updated.'
                      default: 0
                      example: 42.42
                    price_settings:
                      type: object
                      nullable: false
                      description: 'Price settings if the price is not flat rate. If it is null, the price is flat rate.'
                      properties:
                        base_value:
                          type: number
                          description: 'Base value for volume discount pricing. If set, tiers are treated like percentage of discount on this value. If not set, tiers are treated like a flat value discount of chosen currency.'
                          nullable: true
                        tiers:
                          type: array
                          items:
                            type: object
                            properties:
                              min_qty:
                                type: integer
                                nullable: false
                              value:
                                type: number
                                nullable: false
                            required:
                              - value
                              - min_qty
                          minLength: 1
                      required:
                        - base_value
                        - tiers
                    cost:
                      type: number
                      nullable: false
                      description: 'Item cost. If you create an item without providing a value, it will have the default value.'
                      example: 42.42
                    billing_frequency:
                      type: string
                      nullable: true
                      enum:
                        - weekly
                        - monthly
                        - annually
                        - quarterly
                        - semiannualy
                    contract_term:
                      type: integer
                      nullable: true
                      description: Contract term. Measured in units set in the `billing_frequency` parameter.
                    reference_id:
                      type: string
                      nullable: true
                      description: Use this field to pass an id that references this item in external systems.
                    options:
                      type: object
                      nullable: false
                      description: 'Denotes whether an item is selected, optional, and has editable quantity.'
                      properties:
                        selected:
                          type: boolean
                          nullable: false
                          default: true
                        qty_editable:
                          type: boolean
                          nullable: false
                          default: true
                        optional:
                          type: boolean
                          nullable: false
                          default: false
                      required:
                        - qty_editable
                    custom_columns:
                      type: object
                      nullable: false
                      additionalProperties:
                        type: string
                    text_columns:
                      type: object
                      nullable: false
                      additionalProperties:
                        type: string
                    discounts:
                      type: object
                      nullable: false
                      description: Item discounts.
                      additionalProperties:
                        type: object
                        properties:
                          type:
                            type: string
                            nullable: false
                            enum:
                              - percent
                              - flat
                          value:
                            type: number
                            nullable: false
                    taxes:
                      type: object
                      nullable: false
                      description: Item taxes.
                      additionalProperties:
                        type: object
                        properties:
                          type:
                            type: string
                            nullable: false
                            enum:
                              - percent
                              - flat
                          value:
                            type: number
                            nullable: false
                    fees:
                      type: object
                      nullable: false
                      description: Item fees.
                      additionalProperties:
                        type: object
                        properties:
                          type:
                            type: string
                            nullable: false
                            enum:
                              - percent
                              - flat
                          value:
                            type: number
                            nullable: false
                    multipliers:
                      description: Item multipliers.
                      type: object
                      nullable: false
                      additionalProperties:
                        type: number
                nullable: false
              settings:
                type: object
                description: 'Section settings. Denotes whether a section is optional or selected, and selection type inside the section - single, multiple, or custom.'
                properties:
                  optional:
                    type: boolean
                    nullable: false
                  selected:
                    type: boolean
                    nullable: false
                  selection_type:
                    type: string
                    enum:
                      - custom
                      - single
                      - multiple
                    nullable: false
                nullable: false
        settings:
          type: object
          description: 'Quote settings. Denotes whether a quote is optional or selected, and selection type inside the section - single, multiple, or custom.'
          properties:
            selection_type:
              type: string
              enum:
                - custom
                - single
                - multiple
          nullable: false
    DocumentRecipientResponse:
      type: object
      properties:
        recipient_id:
          type: string
          example: 2eWSKSvVqmuVCnuUK3iWwD
    LinkedObjectListResponse:
      type: object
      properties:
        linked_objects:
          type: array
          items:
            $ref: '#/components/schemas/LinkedObjectCreateResponse'
    LinkedObjectCreateRequest:
      type: object
      properties:
        provider:
          type: string
          description: |
            CRM name (lowercase).

            See the list of available providers:
            https://developers.pandadoc.com/reference/link-service#examples-of-the-most-popular-crms
          example: pipedrive
        entity_type:
          type: string
          description: |
            Entity type.

            See the available entity types:
            https://developers.pandadoc.com/reference/link-service#examples-of-the-most-popular-crms
          example: deal
        entity_id:
          type: string
          description: Entity unique identifier. The system validates if the entity exists.
          example: '9372'
      required:
        - provider
        - entity_type
        - entity_id
    LinkedObjectCreateResponse:
      type: object
      properties:
        id:
          type: string
          example: abb4d3fc-919b-491e-9e08-775036660c0b
        provider:
          type: string
          description: |
            CRM name (lowercase).

            See the list of available providers:
            https://developers.pandadoc.com/reference/link-service#examples-of-the-most-popular-crms
          example: pipedrive
        entity_type:
          type: string
          description: |
            Entity type.

            See the available entity types:
            https://developers.pandadoc.com/reference/link-service#examples-of-the-most-popular-crms
          example: deal
        entiry_id:
          type: string
          description: Entity unique identifier. The system validates if the entity exists.
          example: '9372'
    ContentLibraryItemResponse:
      type: object
      properties:
        id:
          type: string
          example: 9d9k7VtSQ5KCXfsUQv4GxE
        name:
          type: string
          example: Sample Pricing Table
        date_created:
          type: string
          example: '2021-08-11T14:12:20.017074Z'
        date_modified:
          type: string
          example: '2021-08-11T14:13:38.562290Z'
        content_date_modified:
          type: string
          example: '2021-10-23T21:07:04.147345Z'
        created_by:
          type: object
          properties:
            id:
              type: string
              example: b6RGTSGwJw838L2KZqckpD
            email:
              type: string
              example: jane@example.com
            first_name:
              type: string
              example: Jane
            last_name:
              type: string
              example: Roe
            avatar:
              type: string
              nullable: true
              example: 'https://pd-live-media.s3.amazonaws.com/users/000GTSGwJw000L2KZqc000/avatar.jpg'
        metadata:
          type: object
        tokens:
          type: array
          items:
            type: object
        fields:
          type: array
          items:
            type: object
        pricing:
          $ref: '#/components/schemas/PricingResponse'
        tags:
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            type: object
        version:
          type: string
          example: '2'
        content_placeholders:
          type: array
          items:
            type: object
        images:
          type: array
          items:
            type: object
    ContentLibraryItemListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: a5UgY5J3rGqU7MtW5xwEGk
              name:
                type: string
                example: Painting Blog Banner
              date_created:
                type: string
                example: '2021-04-12T08:43:51.090022Z'
              date_modified:
                type: string
                example: '2021-04-12T08:43:51.190022Z'
              version:
                type: string
                example: '2'
    TemplateListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: iMymdDd9XFD3HyxP5VD67Q
              name:
                type: string
                example: Blank
              date_created:
                type: string
                format: date-time
                example: '2021-06-17T15:51:13.226974Z'
              date_modified:
                type: string
                format: date-time
                example: '2021-06-17T15:51:13.326974Z'
              version:
                type: string
                example: '2'
              content_date_modified:
                type: string
                format: date-time
                example: '2021-06-17T15:51:13.426974Z'
    TemplateDetailsResponse:
      type: object
      properties:
        id:
          type: string
          example: SkXXMTBsLB5TLPagPTm5yC
        name:
          type: string
          example: API Sample Document from PandaDoc Template
        folder_uuid:
          type: string
          example: b6RGTSGwJw838L2KZqckpD
        date_created:
          type: string
          example: '2021-03-10T07:28:47.440256Z'
        date_modified:
          type: string
          example: '2021-03-10T07:28:47.442256Z'
        content_date_modified:
          type: string
          example: '2021-10-23T21:07:04.147345Z'
        created_by:
          type: object
          properties:
            id:
              type: string
              example: b6RGTSGwJw838L2KZqckpD
            email:
              type: string
              example: jane@example.com
            first_name:
              type: string
              example: Jane
            last_name:
              type: string
              example: Roe
            avatar:
              type: string
              nullable: true
              example: 'https://pd-live-media.s3.amazonaws.com/users/000GTSGwJw000L2KZqc000/avatar.jpg'
        metadata:
          type: object
          example:
            public_template: true
        tokens:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: Document.Value
              value:
                type: string
        fields:
          type: array
          items:
            type: object
          example:
            - uuid: 74bcb05d-e4cd-458d-bc1d-671c2be8b221
              name: Favorite.Color
              title: ''
              placeholder: Favorite Color
              value: ''
              assigned_to:
                id: HHaFsYvJCqMvdAtXwGcyL
                name: user
                preassigned_person:
                  email: test@panddoc.com
                  type: preassigned contact
                type: role
              merge_field: Favorite.Color
              field_id: text1
              type: text
        pricing:
          $ref: '#/components/schemas/PricingResponse'
        tags:
          type: array
          items:
            type: string
          example:
            - tpl-tag-one
            - tpl-tag-two
        roles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: HHaFsYvJCqMvdAtXwGcyLn
              name:
                type: string
                example: Sender
              signing_order:
                type: string
                nullable: true
              preassigned_person:
                type: object
                nullable: true
                properties:
                  email:
                    type: string
                    nullable: true
                    example: jane@example.com
                  type:
                    type: string
                    example: preassigned contact
                  placeholder_name:
                    type: string
                    example: Employee
                  placeholder_source:
                    type: string
                    example: bamboohr
        version:
          type: string
          example: '2'
        content_placeholders:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                example: 305eca46-f5be-435b-bbb4-f4dacf3896f5
              block_id:
                type: string
                example: Content Placeholder
              description:
                type: string
                example: lick here to add content library items
        images:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                nullable: true
                example: image
              block_uuid:
                type: string
                example: c0096462-7899-4ae8-b92e-a5643e6a0223
              urls:
                type: array
                items:
                  type: string
                  example: 'https://api.pandadoc.com/images/Pf7QMxFzcCkMSVXnCZfwcJ/2e6131b32d6949e4a093c36bafccd194'
    FormListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: d94c1b16-ea92-45e6-bc7e-f6d260bd4d42
              name:
                type: string
                example: Blank form
              date_created:
                type: string
                example: '2021-10-15T10:41:00.162597Z'
              date_modified:
                type: string
                example: '2021-10-15T10:41:15.305831Z'
              status:
                type: string
                example: DRAFT
        has_next_page:
          type: boolean
    DocumentsFolderCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name the folder for the Documents you are creating.
          example: A new document folder
        parent_uuid:
          type: string
          description: 'ID of the parent folder. To create a new folder in the root folder, remove this parameter in the request.'
          example: Nq8htXxFssmhRxAPSP4SBP
      required:
        - name
    DocumentsFolderCreateResponse:
      type: object
      properties:
        uuid:
          type: string
          example: Nq8htXxFssmhRxAPSP4SBP
        name:
          type: string
          example: A new document folder
        date_created:
          type: string
          example: '2021-10-15T10:43:04.103331Z'
    DocumentsFolderListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                example: Nq8htXxFssmhRxAPSP4SBP
              name:
                type: string
                example: A new document folder
              date_created:
                type: string
                example: '2021-10-15T10:43:04.103331Z'
              has_folders:
                type: boolean
              has_items:
                type: boolean
    DocumentsFolderRenameRequest:
      type: object
      properties:
        name:
          type: string
          description: Provide a new name for the folder.
          example: Another document folder'
      required:
        - name
    DocumentsFolderRenameResponse:
      type: object
      properties:
        uuid:
          type: string
          example: Nq8htXxFssmhRxAPSP4SBP
        name:
          type: string
          example: Another document folder
        date_created:
          type: string
          example: '2021-10-15T10:43:04.103331Z'
    TemplatesFolderCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name the folder for Templates you are creating.
          example: A new template folder
        parent_uuid:
          type: string
          description: 'ID of the parent folder. To create a new folder in the root folder, remove this parameter in the request.'
          example: Nq8htXxFssmhRxAPSP4SBP
      required:
        - name
    TemplatesFolderCreateResponse:
      type: object
      properties:
        uuid:
          type: string
          example: Nq8htXxFssmhRxAPSP4SBP
        name:
          type: string
          example: A new template folder
        date_created:
          type: string
          example: '2021-10-15T10:43:04.103331Z'
    TemplatesFolderListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                example: Nq8htXxFssmhRxAPSP4SBP
              name:
                type: string
                example: A new template folder
              date_created:
                type: string
                example: '2021-10-15T10:43:04.103331Z'
              has_folders:
                type: boolean
              has_items:
                type: boolean
    TemplatesFolderRenameRequest:
      type: object
      properties:
        name:
          type: string
          example: Another template folder
          description: Provide a new name for the folder.
      required:
        - name
    TemplatesFolderRenameResponse:
      type: object
      properties:
        uuid:
          type: string
          example: Nq8htXxFssmhRxAPSP4SBP
        name:
          type: string
          example: Another template folder
        date_created:
          type: string
          example: '2021-10-15T10:43:04.103331Z'
    APILogDetailsResponse:
      type: object
      properties:
        id:
          type: string
          example: AXyDkCYFy9B65Q_E9BY3
        url:
          type: string
          example: /public/v1/templates/folders/LKoqFUZZGowLAVo6ECFRyB
        method:
          type: string
          example: PUT
        status:
          type: integer
          example: 201
        request_time:
          type: string
          example: '2021-10-15T10:46:57.867'
        response_time:
          type: string
          example: '2021-10-15T10:46:57.969'
        response_body:
          type: object
          example:
            name: Another templates folder
        query_params_string:
          type: string
          example: since=-1d&to=now
          nullable: true
        query_params_object:
          type: object
          nullable: true
          example:
            moesif_meta:
              root:
                count: 2
              since:
                count: 1
              to:
                count: 1
            since: '-1d'
            to: now
        request_body:
          type: object
          example:
            date_created: '2021-10-15T10:45:41.138489Z'
            name: Another templates folder
            uuid: LKoqFUZZGowLAVo6ECFRyB
        token_type:
          type: string
          example: OAUTH2_TOKEN
        application:
          type: string
          nullable: true
          example: Application One
        key:
          type: string
          example: 0a5eb48cf42fa507f3dfdd5bdbab7c5bfc20a1b9
        request_id:
          type: string
          example: 94d232f6-fadd-4e2d-a330-702b0b172588
        user_email:
          type: string
          example: support@pandadoc.com
        user_id:
          type: string
          example: KKj4kdqfrMeE6bni7pK5gK
    APILogListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: AXyDkCYFy9B65Q_E9BY3
              url:
                type: string
                example: /public/v1/documents
              status:
                type: integer
                example: 200
              request_time:
                type: string
                example: '2021-10-15T10:59:22.852'
              response_time:
                type: string
                example: '2021-10-15T10:59:23.152'
    TableRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the table.
        data:
          type: object
          properties:
            sections:
              type: array
              items:
                type: object
                properties:
                  header:
                    type: array
                    items:
                      $ref: '#/components/schemas/TableCell'
                  rows:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/TableCell'
                required:
                  - header
                  - rows
          required:
            - sections
      required:
        - name
        - data
    TableCell:
      type: object
      description: 'Defines a single cell in the table, which can appear in either the header or the rows.'
      properties:
        text:
          type: string
          description: Cell text.
        col_span:
          type: integer
          description: Represents how many columns the cell occupies.
          nullable: true
        row_span:
          type: integer
          description: Represents the number of rows the cell occupies.
          nullable: true
      required:
        - text
    PricingTableRequest:
      type: object
      properties:
        name:
          type: string
          example: Pricing Table 1
        data_merge:
          type: boolean
          description: When set to true all field names in data rows must be passed as external names defined in the template.
        options:
          type: object
          example:
            currency: USD
            Discount:
              type: absolute
              name: Global Discount
              value: 10
            Tax:
              type: percent
              name: Tax First
              value: 15
        sections:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                example: Sample Section
              default:
                type: boolean
              multichoice_enabled:
                type: boolean
                default: false
              rows:
                type: array
                items:
                  type: object
                  properties:
                    options:
                      type: object
                      title: Pricing Table Request Row Options
                      properties:
                        qty_editable:
                          type: boolean
                        optional_selected:
                          type: boolean
                        optional:
                          type: boolean
                    data:
                      type: object
                      title: Pricing Table Request Row Data
                      example:
                        Name: Toy Panda
                        Description: Fluffy
                        Price: 10
                        Cost: 8.5
                        QTY: 3
                        SKU: toy_panda
                        Discount:
                          value: 10
                          type: percent
                        Tax:
                          value: 10
                          type: percent
                    custom_fields:
                      type: object
                      example:
                        Fluffiness: 5/5
            required:
              - title
      required:
        - name
    PricingResponse:
      type: object
      properties:
        tables:
          type: array
          items:
            $ref: '#/components/schemas/PricingTableResponse'
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/QuoteResponse'
        total:
          type: string
          example: '11500'
    PricingTableResponse:
      type: object
      properties:
        name:
          type: string
          example: Pricing Table
        id:
          type: string
          example: 065c5cbc-a065-4843-ba17-028e63779605
        total:
          type: string
          example: '11500'
        is_included_in_total:
          type: boolean
        summary:
          type: object
          nullable: true
          properties:
            subtotal:
              type: string
              example: '11500'
              nullable: true
            total:
              type: string
              example: '11500'
              nullable: true
            discount:
              type: string
              example: '0'
              nullable: true
            tax:
              type: string
              example: '0'
              nullable: true
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                nullable: true
              sku:
                type: string
                nullable: true
              qty:
                type: string
                nullable: true
                example: '10'
              name:
                type: string
                nullable: true
                example: Annual license
              cost:
                type: string
                nullable: true
              price:
                type: string
                nullable: true
                example: '100'
              description:
                type: string
                nullable: true
                example: 1 year subscription
              custom_fields:
                type: object
                nullable: true
                example: {}
              custom_columns:
                type: object
                nullable: true
                example:
                  Images: ''
                  Cost: ''
                  Subtotal: ''
              discount:
                type: object
                nullable: true
                properties:
                  value:
                    type: string
                    nullable: true
                  type:
                    type: string
                    nullable: true
              tax_first:
                type: object
                nullable: true
                properties:
                  value:
                    type: string
                    nullable: true
                  type:
                    type: string
                    nullable: true
              tax_second:
                type: object
                nullable: true
                properties:
                  value:
                    type: string
                    nullable: true
                  type:
                    type: string
                    nullable: true
              subtotal:
                type: string
                nullable: true
                example: '10000'
              options:
                type: object
                nullable: true
                example: {}
                properties:
                  optional:
                    type: boolean
                    nullable: true
                  optional_selected:
                    type: boolean
                    nullable: true
                  multichoice_enabled:
                    type: boolean
                    nullable: true
                  multichoice_selected:
                    type: boolean
                    nullable: true
              sale_price:
                type: string
                nullable: true
                example: '1000'
              taxes:
                type: object
                nullable: true
                example: {}
              discounts:
                type: object
                nullable: true
                example: {}
              fees:
                type: object
                nullable: true
                example: {}
              merged_data:
                type: object
                nullable: true
                description: Contains all fields in a flat structure with external field names defined in the template.
                example:
                  custom_name: SomeName
                  custom_description: SomeCustomDescription
                  custom_price: '10.99'
                  custom_qty: '1.00'
                  custom_sku: Test
                  custom_tax:
                    value: '10'
                    type: percent
                  custom_fee:
                    value: '10'
                    type: percent
                  custom_discount:
                    value: '10'
                    type: percent
                  custom_text: Some other
                  Cost: null
                  Subtotal: '26.38'
                  fluffiness: Fluffiness
                  Other_field: SomeText
        currency:
          type: string
          example: USD
    QuoteResponse:
      type: object
      properties:
        id:
          type: string
          example: 4b011d86-286b-4f86-b697-90a6ad3f1489
        currency:
          type: string
          example: USD
        total:
          type: string
          example: '900'
        summary:
          type: object
          title: QuoteResponseSummary
          properties:
            total:
              type: string
              example: '900'
            subtotal:
              type: string
              example: '1000'
              nullable: true
            one_time_subtotal:
              type: string
              example: '500'
              nullable: true
            recurring_subtotal:
              type: array
              items:
                type: object
                properties:
                  billing_cycle:
                    type: string
                    example: monthly
                  value:
                    type: string
                    example: '500'
              nullable: true
            total_qty:
              type: string
              nullable: true
            discounts:
              type: object
              nullable: true
              additionalProperties:
                type: object
                properties:
                  type:
                    type: string
                    nullable: true
                  value:
                    type: string
                    nullable: true
            taxes:
              type: object
              nullable: true
            fees:
              type: object
              nullable: true
            custom_fields:
              type: object
              nullable: true
              additionalProperties:
                type: string
            total_discount:
              type: string
              example: '100'
              nullable: true
            total_tax:
              type: string
              nullable: true
            total_fee:
              type: string
              nullable: true
            total_savings:
              type: string
              nullable: true
            total_contract_value:
              type: string
              example: '1900'
              nullable: true
        sections:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              summary:
                type: object
                title: QuoteResponseSectionSummary
                properties:
                  total:
                    type: string
                    example: '1000'
                  subtotal:
                    type: string
                    example: '1000'
                    nullable: true
                  one_time_subtotal:
                    type: string
                    example: '500'
                    nullable: true
                  recurring_subtotal:
                    type: array
                    items:
                      type: object
                      properties:
                        billing_cycle:
                          type: string
                          example: monthly
                        value:
                          type: string
                          example: '500'
                    nullable: true
                  total_qty:
                    type: string
                    nullable: true
                  discounts:
                    type: object
                    nullable: true
                  taxes:
                    type: object
                    nullable: true
                  fees:
                    type: object
                    nullable: true
                  custom_fields:
                    type: object
                    nullable: true
                    additionalProperties:
                      type: string
                  total_section_value:
                    type: string
                    example: '1900'
                    nullable: true
              columns:
                type: array
                items:
                  type: object
                  title: QuoteResponseSectionColumn
                  properties:
                    header:
                      type: string
                      nullable: true
                    name:
                      type: string
                    merge_name:
                      type: string
                      nullable: true
                    hidden:
                      type: string
              items:
                type: array
                items:
                  type: object
                  title: QuoteResponseSectionItem
                  properties:
                    id:
                      type: string
                      nullable: true
                    sku:
                      type: string
                      nullable: true
                    name:
                      type: string
                      nullable: true
                    description:
                      type: string
                      nullable: true
                    qty:
                      type: string
                      nullable: true
                      example: '1'
                    price:
                      type: string
                      nullable: true
                      example: '500'
                    cost:
                      type: string
                      nullable: true
                    billing_frequency:
                      type: string
                      nullable: true
                    contract_term:
                      type: string
                      nullable: true
                    pricing_method:
                      type: string
                      nullable: true
                    type:
                      type: string
                      nullable: true
                    reference_type:
                      type: string
                      nullable: true
                    options:
                      type: object
                      nullable: true
                      properties:
                        selected:
                          type: boolean
                          nullable: true
                        qty_editable:
                          type: boolean
                          nullable: true
                    custom_columns:
                      type: object
                      nullable: true
                      additionalProperties:
                        type: string
                    discounts:
                      type: object
                      nullable: true
                      additionalProperties:
                        type: object
                        properties:
                          type:
                            type: string
                            nullable: true
                          value:
                            type: string
                            nullable: true
                    taxes:
                      type: object
                      nullable: true
                      additionalProperties:
                        type: object
                        properties:
                          type:
                            type: string
                            nullable: true
                          value:
                            type: string
                            nullable: true
                    fees:
                      type: object
                      nullable: true
                      additionalProperties:
                        type: object
                        properties:
                          type:
                            type: string
                            nullable: true
                          value:
                            type: string
                            nullable: true
                    multipliers:
                      type: object
                      nullable: true
                      additionalProperties:
                        type: string
                    total:
                      type: string
                      nullable: true
                    overall_total:
                      type: string
                      example: '1000'
                      nullable: true
                nullable: true
              total:
                type: string
                example: '1000'
              settings:
                $ref: '#/components/schemas/QuoteSectionSettings'
            nullable: true
        merge_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              enabled:
                type: boolean
              action:
                type: object
                properties:
                  type:
                    type: string
                  section_id:
                    type: string
              condition:
                type: object
                properties:
                  field_name:
                    type: string
                  type:
                    type: string
                  comparison:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        value:
                          type: string
        settings:
          type: object
          properties:
            selection_type:
              type: string
              enum:
                - custom
                - single
                - multiple
    ContactDetailsResponse:
      type: object
      properties:
        id:
          type: string
          example: BCUWJhZm3k7grUNFAz6cD2
          description: A unique identifier of the contact
        email:
          type: string
          nullable: true
          example: user01@pandadoc.com
          description: An email address of the contact
        first_name:
          type: string
          nullable: true
          example: John
          description: Contact's first name
        last_name:
          type: string
          nullable: true
          example: Doe
          description: Contact's last name
        company:
          type: string
          nullable: true
          example: John Doe Inc.
          description: Contact's company name
        job_title:
          type: string
          nullable: true
          example: CTO
          description: Contact's job title
        phone:
          type: string
          nullable: true
          example: '+14842634627'
          description: A phone number
        country:
          type: string
          nullable: true
          example: USA
          description: A country name
        state:
          type: string
          nullable: true
          example: Texas
          description: A state name
        street_address:
          type: string
          nullable: true
          example: 1313 Mockingbird Lane
          description: A street address
        city:
          type: string
          nullable: true
          example: Austin
          description: A city name
        postal_code:
          type: string
          nullable: true
          example: '75001'
          description: A postal code
    ContactListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContactDetailsResponse'
    ContactCreateRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
          example: user01@pandadoc.com
          description: An email address of the contact
        first_name:
          type: string
          nullable: true
          example: John
          description: Contact's first name
        last_name:
          type: string
          nullable: true
          example: Doe
          description: Contact's last name
        company:
          type: string
          nullable: true
          example: John Doe Inc.
          description: Contact's company name
        job_title:
          type: string
          nullable: true
          example: CTO
          description: Contact's job title
        phone:
          type: string
          nullable: true
          example: '+14842634627'
          description: A phone number
        country:
          type: string
          nullable: true
          example: USA
          description: A country name
        state:
          type: string
          nullable: true
          example: Texas
          description: A state name
        street_address:
          type: string
          nullable: true
          example: 1313 Mockingbird Lane
          description: A street address
        city:
          type: string
          nullable: true
          example: Austin
          description: A city name
        postal_code:
          type: string
          nullable: true
          example: '75001'
          description: A postal code
    ContactUpdateRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
          example: user01@pandadoc.com
        first_name:
          type: string
          nullable: true
          example: John
        last_name:
          type: string
          nullable: true
          example: Doe
        company:
          type: string
          nullable: true
          example: John Doe Inc.
        job_title:
          type: string
          nullable: true
          example: CTO
        phone:
          type: string
          nullable: true
          example: '+14842634627'
        state:
          type: string
          nullable: true
          example: Texas
        street_address:
          type: string
          nullable: true
          example: 1313 Mockingbird Lane
        city:
          type: string
          nullable: true
          example: Austin
        postal_code:
          type: string
          nullable: true
          example: '75001'
    MemberDetailsResponse:
      type: object
      properties:
        user_id:
          type: string
          description: A unique identifier of the user in the organization.
          example: ajnN7eGutJZsRKjQrNuPkh
        membership_id:
          type: string
          description: A unique identifier of the user in the workspace.
          example: radQBiBkU7MBk59NSgaGf5
        email:
          type: string
          description: A user's email address.
          example: josh@example.com
        first_name:
          type: string
          description: A user's first name.
          example: Josh
        last_name:
          type: string
          description: A user's last name.
          example: Ron
        is_active:
          type: boolean
          description: A boolean value that identifies if a member is active in the workspace.
          example: true
        workspace:
          type: string
          description: A unique identifier of the user's current active workspace.
          example: xc4mBZ7dKErXQtJwwD6Ghg
        workspace_name:
          type: string
          description: A name of the user's current active workspace.
          example: PandaDoc
        emails_verified:
          type: boolean
          description: A boolean value that identifies if the email is verified.
          example: true
        role:
          type: string
          description: A member's role in the workspace.
          example: Admin
        user_license:
          type: string
          description: A user license in the organization.
          example: Full
        date_created:
          type: string
          description: A date when a member was added to the workspace.
          example: '2020-11-17T08:42:34.237567Z'
        date_modified:
          type: string
          description: Last modified date of a member.
          example: '2021-11-30T10:30:35.071428Z'
    MemberListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MemberDetailsResponse'
    DocumentStatusEnum:
      type: string
      enum:
        - document.draft
        - document.sent
        - document.completed
        - document.uploaded
        - document.error
        - document.viewed
        - document.waiting_approval
        - document.approved
        - document.rejected
        - document.waiting_pay
        - document.paid
        - document.voided
        - document.declined
        - document.external_review
      example: document.draft
    DocumentStatusRequestEnum:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
      example: 12
    DocumentOrderingFieldsEnum:
      type: string
      enum:
        - name
        - date_created
        - date_status_changed
        - date_of_last_action
        - date_modified
        - date_sent
        - date_completed
        - date_expiration
        - date_declined
        - status
        - '-name'
        - '-date_created'
        - '-date_status_changed'
        - '-date_of_last_action'
        - '-date_modified'
        - '-date_sent'
        - '-date_completed'
        - '-date_expiration'
        - '-date_declined'
        - '-status'
      default: date_status_changed
    Field:
      anyOf:
        - $ref: '#/components/schemas/Checkbox'
        - $ref: '#/components/schemas/CollectFile'
        - $ref: '#/components/schemas/Date'
        - $ref: '#/components/schemas/Dropdown'
        - $ref: '#/components/schemas/Initials'
        - $ref: '#/components/schemas/Payment'
        - $ref: '#/components/schemas/RadioButtons'
        - $ref: '#/components/schemas/Signature'
        - $ref: '#/components/schemas/Stamp'
        - $ref: '#/components/schemas/Text'
      discriminator:
        propertyName: type
        mapping:
          checkbox: '#/components/schemas/Checkbox'
          collect_file: '#/components/schemas/CollectFile'
          date: '#/components/schemas/Date'
          dropdown: '#/components/schemas/Dropdown'
          initials: '#/components/schemas/Initials'
          payment: '#/components/schemas/Payment'
          radio_buttons: '#/components/schemas/RadioButtons'
          signature: '#/components/schemas/Signature'
          stamp: '#/components/schemas/Stamp'
          text: '#/components/schemas/Text'
    CreateDocumentActor:
      anyOf:
        - $ref: '#/components/schemas/CreateDocumentRecipient'
        - $ref: '#/components/schemas/CreateDocumentRecipientGroup'
      discriminator:
        propertyName: type
        mapping:
          recipient: '#/components/schemas/CreateDocumentRecipient'
          recipient_group: '#/components/schemas/CreateDocumentRecipientGroup'
    CreateDocumentRecipient:
      title: Recipient
      allOf:
        - type: object
          properties:
            role:
              type: string
              example: user
              description: A recipient's role in the document from the template. A recipient will be added in CC if a role parameter is not provided.
            signing_order:
              type: integer
              example: 1
              description: |
                Set a signing order for a recipient. Learn more: https://developers.pandadoc.com/docs/set-signing-order
        - type: object
          properties:
            email:
              type: string
              nullable: true
              example: josh@example.com
              description: A recipient's email address.
            phone:
              type: string
              nullable: true
              example: '+14842634627'
              description: A recipient's phone number.
            first_name:
              type: string
              example: Josh
              description: A recipient's first name. We automatically take the first name from contact data if this field is missed.
            last_name:
              type: string
              example: Ron
              description: A recipient's last name. We automatically take the last name from contact data if this field is missed.
        - type: object
          properties:
            delivery_methods:
              $ref: '#/components/schemas/RecipientDeliveryMethods'
            redirect:
              $ref: '#/components/schemas/RecipientRedirect'
            type:
              type: string
              example: recipient
              enum:
                - recipient
            verification_settings:
              $ref: '#/components/schemas/RecipientVerificationSettings'
    CreateDocumentRecipientGroup:
      title: RecipientGroup
      allOf:
        - $ref: '#/components/schemas/CreateDocumentRecipient/allOf/0'
        - type: object
          properties:
            name:
              type: string
              maxLength: 120
            type:
              type: string
              example: recipient_group
              enum:
                - recipient_group
            members:
              type: array
              minLength: 1
              items:
                $ref: '#/components/schemas/CreateDocumentRecipient/allOf/1'
          required:
            - name
            - type
    UpdateDocumentRecipient:
      title: Recipient
      allOf:
        - $ref: '#/components/schemas/CreateDocumentRecipient/allOf/0'
        - $ref: '#/components/schemas/CreateDocumentRecipient/allOf/1'
        - type: object
          properties:
            id:
              type: string
              example: ZPeAfcpzr9aiVs5vqUf6jg
            delivery_methods:
              $ref: '#/components/schemas/RecipientDeliveryMethods'
            redirect:
              $ref: '#/components/schemas/RecipientRedirect'
            type:
              type: string
              example: recipient
              enum:
                - recipient
    UpdateDocumentRecipientGroup:
      title: RecipientGroup
      allOf:
        - $ref: '#/components/schemas/CreateDocumentRecipient/allOf/0'
        - type: object
          properties:
            id:
              type: string
              example: ZPeAfcpzr9aiVs5vqUf6jg
            name:
              type: string
              maxLength: 120
            type:
              type: string
              example: recipient_group
              enum:
                - recipient_group
            members:
              type: array
              minLength: 1
              items:
                $ref: '#/components/schemas/CreateDocumentRecipient/allOf/1'
          required:
            - name
    BaseField:
      type: object
      properties:
        uuid:
          type: string
          example: 6ce1a193-04da-4023-98c3-51ef1b8747b9
        name:
          type: string
          description: Name of a field
        title:
          type: string
        placeholder:
          type: string
          description: Placeholder of a field
        assigned_to:
          anyOf:
            - $ref: '#/components/schemas/RecipientAssignedTo'
            - $ref: '#/components/schemas/RecipientsGroupAssignedTo'
          discriminator:
            propertyName: type
            mapping:
              recipient: '#/components/schemas/RecipientAssignedTo'
              recipient_group: '#/components/schemas/RecipientsGroupAssignedTo'
        field_id:
          type: string
          example: FieldId1
        type:
          type: string
          enum:
            - checkbox
            - collect_file
            - date
            - dropdown
            - initials
            - payment_details
            - radio_buttons
            - signature
            - stamp
            - text
    Checkbox:
      title: Checkbox
      allOf:
        - $ref: '#/components/schemas/BaseField'
        - type: object
          properties:
            value:
              type: boolean
              description: Value of the Checkbox field.
              example: true
            merge_field:
              type: string
              example: MergeId
            type:
              type: string
              enum:
                - checkbox
    CollectFile:
      title: Collect File
      allOf:
        - $ref: '#/components/schemas/BaseField'
        - type: object
          properties:
            value:
              type: object
              description: Value of the Collect File field.
              properties:
                name:
                  type: string
                  example: example.jpg
                url:
                  type: string
                  example: 'https://some-url.com/collect_files'
            type:
              type: string
              enum:
                - collect_file
    Date:
      title: Date
      allOf:
        - $ref: '#/components/schemas/BaseField'
        - type: object
          properties:
            value:
              type: string
              format: date-time
              description: Value of the Date field.
              example: '2024-01-01T00:00:00'
            merge_field:
              type: string
              example: MergeId
            type:
              type: string
              enum:
                - date
    Dropdown:
      title: Dropdown
      allOf:
        - $ref: '#/components/schemas/BaseField'
        - type: object
          properties:
            value:
              type: string
              description: Value of the Dropdown field.
              example: dropdown item 1
            merge_field:
              type: string
              example: MergeId
            type:
              type: string
              enum:
                - dropdown
    Initials:
      title: Initials
      allOf:
        - $ref: '#/components/schemas/BaseField'
        - type: object
          properties:
            value:
              type: object
              description: Value of the Initials field. Always empty object.
              example: {}
            type:
              type: string
              enum:
                - initials
    Payment:
      title: Payment Details
      allOf:
        - $ref: '#/components/schemas/BaseField'
        - type: object
          properties:
            value:
              type: string
              description: Value of the Payment field. Always empty string.
              example: ''
            type:
              type: string
              enum:
                - payment_details
    RadioButtons:
      title: Radio Buttons
      allOf:
        - $ref: '#/components/schemas/BaseField'
        - type: object
          properties:
            value:
              type: string
              description: Value of the Radio Buttons field.
              example: Option 1
            merge_field:
              type: string
              example: MergeId
            type:
              type: string
              enum:
                - radio_buttons
    Signature:
      title: Signature
      allOf:
        - $ref: '#/components/schemas/BaseField'
        - type: object
          properties:
            value:
              type: object
              description: Value of the Signature field. Always empty object.
              example: {}
            type:
              type: string
              enum:
                - signature
    Stamp:
      title: Stamp
      allOf:
        - $ref: '#/components/schemas/BaseField'
        - type: object
          properties:
            value:
              type: object
              description: Value of the Stamp field. Always empty object.
              example: {}
            type:
              type: string
              enum:
                - stamp
    Text:
      title: Text
      allOf:
        - $ref: '#/components/schemas/BaseField'
        - type: object
          properties:
            value:
              type: string
              description: Value of the Text field.
              example: Some text
            merge_field:
              type: string
              example: MergeId
            type:
              type: string
              enum:
                - text
    RecipientAssignedTo:
      title: Recipient
      description: Recipient
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: DueKG6wZYwmqsvPrnk76ma
            email:
              type: string
              format: email
              example: email@example.com
            recipient_type:
              type: string
              example: signer
            roles:
              type: array
              items:
                type: string
              example:
                - Role 1
            signing_order:
              type: integer
              example: 1
            has_completed:
              type: boolean
              example: false
        - type: object
          properties:
            first_name:
              type: string
              example: John
            last_name:
              type: string
              example: Doe
            phone:
              type: string
              pattern: '^\+[1-9]\d{0,4}\d{2,14}$'
              example: '+1234567890'
            role:
              type: string
              example: Role 1
            delivery_methods:
              type: object
              properties:
                sms:
                  type: boolean
                email:
                  type: boolean
            redirect:
              type: object
              properties:
                is_enabled:
                  type: boolean
                url:
                  type: string
            type:
              type: string
              enum:
                - recipient
    RecipientsGroupAssignedTo:
      title: Recipient Group
      description: Collection of Recipients
      allOf:
        - $ref: '#/components/schemas/RecipientAssignedTo/allOf/0'
        - properties:
            name:
              type: string
              example: Group name
            members:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 027d6a8e-bd05-45dc-a609-43840d523b7b
                  email:
                    type: string
                    format: email
                    example: email@example.com
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Doe
            type:
              type: string
              enum:
                - recipient_group
    WebhookSubscriptionPayloadEnum:
      type: string
      enum:
        - metadata
        - fields
        - products
        - tokens
        - pricing
      example: pricing
    WebhookSubscriptionTriggerEnum:
      type: string
      enum:
        - recipient_completed
        - document_updated
        - document_deleted
        - document_state_changed
        - document_creation_failed
        - document_completed_pdf_ready
        - document_section_added
        - quote_updated
        - template_created
        - template_updated
        - template_deleted
        - content_library_item_created
        - content_library_item_creation_failed
      example: document_state_changed
    WebhookSubscriptionStatusEnum:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - DEACTIVATED
      example: ACTIVE
    WebhookSubscriptionCreateRequest:
      type: object
      properties:
        name:
          type: string
          nullable: false
          description: Set a name for the Webhooks subscription.
          example: My Subscription
        url:
          type: string
          format: url
          nullable: false
          description: Set the Webhooks subscription URL.
          example: 'https://example.com'
        active:
          type: boolean
          default: true
          description: Set the status of the Webhooks subscription.
        payload:
          type: array
          nullable: true
          description: Set a payload structure.
          items:
            $ref: '#/components/schemas/WebhookSubscriptionPayloadEnum'
        triggers:
          type: array
          nullable: true
          description: Set trigger events for the Webhooks subscription.
          items:
            $ref: '#/components/schemas/WebhookSubscriptionTriggerEnum'
      required:
        - name
        - url
        - triggers
    WebhookSubscriptionPatchRequest:
      type: object
      properties:
        name:
          type: string
          nullable: false
          description: Set a new name for the Webhooks subscription.
          example: My Subscription
        url:
          type: string
          format: url
          nullable: false
          description: Set the new Webhooks subscription URL.
          example: 'https://example.com'
        active:
          type: boolean
          nullable: false
          default: true
          description: Set the status of the Webhooks subscription.
          example: true
        payload:
          type: array
          nullable: true
          description: Set a new payload structure.
          items:
            $ref: '#/components/schemas/WebhookSubscriptionPayloadEnum'
        triggers:
          type: array
          description: Set trigger events for the Webhooks subscription.
          nullable: true
          items:
            $ref: '#/components/schemas/WebhookSubscriptionTriggerEnum'
    WebhookSubscriptionItemResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          nullable: true
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          nullable: false
          example: My Subscription
        url:
          type: string
          format: url
          nullable: false
          example: 'https://example.com'
        active:
          type: boolean
          nullable: false
          example: true
        payload:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/WebhookSubscriptionPayloadEnum'
        triggers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/WebhookSubscriptionTriggerEnum'
        workspace_id:
          type: string
          nullable: false
          example: Nq8htXxFssmhRxAPSP4SBP
        shared_key:
          type: string
          nullable: false
          example: 587c22285F57883db3ee
        status:
          $ref: '#/components/schemas/WebhookSubscriptionStatusEnum'
    WebhookSubscriptionSharedKeyResponse:
      type: object
      properties:
        shared_key:
          type: string
          nullable: false
          example: 587c22285F57883db3ee
    WebhookSubscriptionListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/WebhookSubscriptionItemResponse'
    WebhookEventErrorEnum:
      type: string
      enum:
        - INTERNAL_ERROR
        - NOT_VALID_URL
        - CONNECT_ERROR
        - TIMEOUT_ERROR
      example: TIMEOUT_ERROR
      nullable: true
    WebhookEventHttpStatusCodeGroupEnum:
      type: integer
      format: int32
      enum:
        - 100
        - 200
        - 300
        - 400
        - 500
      example: 400
    WebhookEventTriggerEnum:
      type: string
      enum:
        - recipient_completed
        - document_updated
        - document_deleted
        - document_state_changed
        - document_creation_failed
        - document_completed_pdf_ready
        - document_section_added
        - quote_updated
        - template_created
        - template_updated
        - template_deleted
        - content_library_item_created
        - content_library_item_creation_failed
      example: document_state_changed
    WebhookEventItemResponse:
      type: object
      properties:
        uuid:
          type: string
          description: Unique webhook subscription event identifier
          format: uuid
          nullable: true
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          description: Webhook subscription name
          nullable: false
          example: My Subscription
        type:
          $ref: '#/components/schemas/WebhookEventTriggerEnum'
        http_status_code:
          type: integer
          format: int32
          description: Webhook subscription event response http status code
          nullable: true
          example: 200
        error:
          $ref: '#/components/schemas/WebhookEventErrorEnum'
        delivery_time:
          type: string
          format: date-time
          description: Webhook subscription event delivery time
          nullable: false
          example: '2022-06-20T15:04:59.424730Z'
    WebhookEventDetailsResponse:
      type: object
      properties:
        uuid:
          type: string
          description: Unique webhook subscription event identifier
          format: uuid
          nullable: true
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          description: Webhook subscription name
          nullable: false
          example: My Subscription
        type:
          $ref: '#/components/schemas/WebhookEventTriggerEnum'
        http_status_code:
          type: integer
          format: int32
          description: Webhook subscription event response http status code
          nullable: true
          example: 200
        error:
          $ref: '#/components/schemas/WebhookEventErrorEnum'
        delivery_time:
          type: string
          format: date-time
          description: Webhook subscription event delivery time
          nullable: false
          example: '2022-06-20T15:04:59.424730Z'
        url:
          type: string
          description: Webhook subscription event destination url
          nullable: false
          example: 'https://example.com'
        signature:
          type: string
          description: Webhook subscription event digital signature
          nullable: false
          example: 587c22285F57883db3ee
        request_body:
          type: string
          description: Webhook subscription event request body
          nullable: false
          example: '[{\"event\":\"document_state_changed\"}]'
        response_body:
          type: string
          description: Webhook subscription response body
          nullable: true
          example: <!doctype html>\n<html>\n</html>
        response_headers:
          type: string
          description: Webhook subscription response headers
          nullable: true
          example: '[cache-control:\"max-age=604800\"]'
        event_time:
          type: string
          format: date-time
          description: Webhook subscription event trigger time
          nullable: false
          example: '2022-06-20T15:04:58.424730Z'
    WebhookEventPageResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEventItemResponse'
    CreateNotarizationRequest:
      type: object
      properties:
        document_id:
          type: string
          maxLength: 50
          example: 8DstGmLJDBXBKrh3wnqzpe
          description: ID of the Document for notarization.
        invitation:
          type: object
          properties:
            message:
              type: string
              example: Some message
              description: Optional message for invitation email.
            invitees:
              type: array
              items:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                    maxLength: 255
                    nullable: false
                    example: email@gmail.com
                  first_name:
                    type: string
                    maxLength: 50
                    nullable: true
                    example: John
                  last_name:
                    type: string
                    maxLength: 50
                    nullable: true
                    example: Smith
                required:
                  - email
      required:
        - document_id
        - invitation
    CreateNotarizationResponse:
      type: object
      properties:
        id:
          type: string
          example: f75e053a-25e8-40be-8681-fd755ade2a2b
        name:
          type: string
          example: test
        status:
          type: string
          enum:
            - DRAFT
            - SENT
            - WAITING_FOR_NOTARY
            - ACCEPTED
            - LIVE
            - COMPLETED
            - TERMINATED
            - CANCELLED
          example: SENT
        date_created:
          type: string
          format: date-time
          example: '2023-04-14T16:33:06.938984Z'
        date_accepted:
          type: string
          format: date-time
          nullable: true
          example: null
        created_by:
          type: object
          properties:
            user_id:
              type: string
              example: nyAnVpY7pZ23FBve8s9xgk
            email:
              type: string
              example: email@gmail.com
            first_name:
              type: string
              example: John
            last_name:
              type: string
              example: Smith
        invitees:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              email:
                type: string
                format: email
                maxLength: 255
                example: email@gmail.com
              first_name:
                type: string
                maxLength: 50
                example: John
              last_name:
                type: string
                maxLength: 50
                example: Smith
              notarization_link:
                type: string
                example: 'https://notarize.pandadoc.com/session-request#/?requestId=f75e053a-25e8-40be-8681-fd755ade2a2b&inviteeId=2fbb4cbf-d461-4421-94cf-eaadcb9627e0'
    UploadSectionByPdfRequest:
      $ref: '#/components/schemas/UploadSectionRequest'
    UploadSectionByTemplateRequest:
      allOf:
        - type: object
          properties:
            template_uuid:
              type: string
              description: 'The ID of a template you want to use. You can copy it from an in app template url such as `https://app.pandadoc.com/a/#/templates/{ID}/content`. A template ID is also obtained by listing templates.'
              example: hryJY9mqYZHjQCYQuSjRQg
            pricing_tables:
              type: array
              description: 'Information to construct or populate a pricing table can be passed when creating a document. All product information must be passed when creating a new document. Products stored in PandaDoc cannot be used to populate table rows at this time. Keep in mind that this is an array, so multiple table objects can be passed to a document. Make sure that "Automatically add products to this table" is enabled in the PandaDoc template pricing tables you wish to populate via API. Each pricing table must have a unique name to populate it with data correctly.'
              items:
                $ref: '#/components/schemas/PricingTableRequest'
            content_placeholders:
              type: array
              description: 'You may replace Content Library Item Placeholders with a few content library items each and pre-fill fields/variables values, pricing table items, and assign recipients to roles from there.'
              items:
                type: object
                properties:
                  content_library_items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9d9k7VtSQ5KCXfsUQv4GxE
                        fields:
                          type: object
                        pricing_tables:
                          type: array
                          items:
                            $ref: '#/components/schemas/PricingTableRequest'
                        recipients:
                          type: array
                          items:
                            type: object
                            properties:
                              email:
                                type: string
                                nullable: true
                                example: josh@example.com
                              phone:
                                type: string
                                nullable: true
                                example: '+14842634627'
                              delivery_methods:
                                $ref: '#/components/schemas/RecipientDeliveryMethods'
                              first_name:
                                type: string
                                example: Josh
                              last_name:
                                type: string
                                example: Ron
                              role:
                                type: string
                                example: user
                              signing_order:
                                type: integer
                                example: 1
                                nullable: true
                              redirect:
                                $ref: '#/components/schemas/RecipientRedirect'
                      required:
                        - id
                  block_id:
                    type: string
                    example: Content Placeholder 1
                required:
                  - block_id
            fields:
              type: object
              description: 'You can pass a list of fields/values to pre-fill fields used in a template. Note that the Signature field can''t be pre-filled. Field values with the same merge id will override field values of the whole document by default, unless you set the merge_field_scope=upload query parameter.'
              example:
                Like:
                  value: 'true'
                Delivery:
                  value: Same Day Delivery
                Date:
                  value: '2019-12-31T00:00:00.000Z'
          required:
            - template_uuid
        - $ref: '#/components/schemas/UploadSectionRequest/allOf/1'
    UploadSectionRequest:
      allOf:
        - type: object
          properties:
            parse_form_fields:
              type: boolean
              description: Set this parameter as `true` if you create a document from a PDF with form fields and as `false` if you upload a PDF with field tags.
            fields:
              type: object
              description: |
                If you are upload a section from a PDF with field tags, you can pass a list of the fields you'd like to pre-fill in the document. If you are upload a section from a PDF with form fields, list all the fields and provide the `role` parameter so that the fields are assigned to document recipients. You can provide empty value for the field so that it's not pre-filled: "value": "". Please note Signature field can't be pre-filled.
              example:
                Like:
                  value: true
                Delivery:
                  value: Same Day Delivery
                Date:
                  value: '2019-12-31T00:00:00.000Z'
          required:
            - recipients
        - type: object
          properties:
            name:
              type: string
              description: Name the document you are creating.
              example: API Sample Document from PandaDoc Template
            recipients:
              type: array
              description: 'The list of recipients you''re sending the document to. Every object must contain the `email` parameter. The `role`, `first_name` and `last_name` parameters are optional. If the `role` parameter is passed, a person is assigned all fields matching their corresponding role. If a role was not passed, a person receives a read-only link to view the document. If the `first_name` and `last_name` are not passed, the system does this 1. Creates a new contact, if none exists with the given `email`; or 2. Gets the existing contact with the given `email` that already exists.'
              items:
                $ref: '#/components/schemas/CreateDocumentActor'
            tokens:
              type: array
              description: |
                You may pass a list of tokens/values to pre-fill tokens (variables) used in a template. Name is a token (variable) name in a template. Value is a real value you would like to replace a token (variable) with.
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: Favorite.Pet
                  value:
                    type: string
                    example: Panda
                required:
                  - name
                  - value
            tags:
              type: array
              description: Mark your document with one or several tags.
              items:
                type: string
              example:
                - created_via_api
                - test_document
                - created_from_source
          required:
            - recipients
    UploadSectionListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                example: ZsiBHUyksDoKActQNGz542
              name:
                type: string
                example: Sample Section
    UploadSectionResponse:
      type: object
      properties:
        uuid:
          type: string
          example: cKbJ7uay3cEGtsKuGPwYGX
        name:
          type: string
          example: API Sample Upload Section from PandaDoc Template
        document_uuid:
          type: string
          example: cKbJ7uay3cEGtsKuGPwYGX
        status:
          $ref: '#/components/schemas/UploadSectionStatusEnum'
        date_created:
          type: string
          example: '2021-10-08T11:06:32.337395Z'
        date_modified:
          type: string
          example: '2021-10-08T11:06:32.337395Z'
        date_completed:
          type: string
          nullable: true
          example: '2021-10-08T11:06:32.337395Z'
        info_message:
          type: string
          example: You need to poll the Document Sections Upload Status method until the status will be changed to document_sections_upload.PROCESSED
    UploadSectionStatusResponse:
      type: object
      properties:
        uuid:
          type: string
          example: 7kqXgjFejB2toXxjcC5jfZ
        document_uuid:
          type: string
          example: cKbJ7uay3cEGtsKuGPwYGX
        status:
          $ref: '#/components/schemas/UploadSectionStatusEnum'
        name:
          type: string
          example: API Sample Section from PandaDoc Template
        sections_uuids:
          type: array
          items:
            type: string
          example:
            - cKbJ7uay3cEGtsKuGPwYGX
            - jzjCfYgKQYm2u9ctwN6io4
        date_created:
          type: string
          example: '2021-10-08T11:06:32.337395Z'
        date_modified:
          type: string
          example: '2021-10-08T11:06:32.337395Z'
    UploadSectionStatusEnum:
      type: string
      enum:
        - document_sections_upload.UPLOADED
        - document_sections_upload.PROCESSED
        - document_sections_upload.ERROR
      example: document_sections_upload.PROCESSED
    SectionInfoResponse:
      type: object
      properties:
        uuid:
          type: string
          example: 7kqXgjFejB2toXxjcC5jfZ
        name:
          type: string
          example: API Sample Section from PandaDoc Template
        document_uuid:
          type: string
          example: cKbJ7uay3cEGtsKuGPwYGX
    QuoteSectionSettings:
      type: object
      properties:
        optional:
          type: boolean
        selected:
          type: boolean
        selection_type:
          type: string
          enum:
            - custom
            - single
            - multiple
    RecipientVerificationSettings:
      type: object
      nullable: true
      description: |
        To set up recipient verification, fill in verification_place and specify the type: passcode_verification, phone_verification, kba_verification or id_verification.
        - For passcode_verification, provide the passcode.
        - For phone_verification, provide the phone_number.
        - For kba_verification and id_verification, set the enabled parameter to true.
      properties:
        verification_place:
          description: |
            Specifies when a recipient must complete the verification process:
            - `before_open` (before opening the document),
            - `before_sign` (before signing the document).
          type: string
          enum:
            - before_open
            - before_sign
        passcode_verification:
          type: object
          description: Sets the passcode.
          properties:
            passcode:
              type: string
              pattern: '^(?=(?:.*[a-zA-Z]){1,})(?=(?:.*[0-9]){1,})^[\S]{6,100}$'
              example: SimpleCode1
              description: Document passcode.
          required:
            - passcode
          nullable: true
        phone_verification:
          type: object
          description: Sets the phone number to send a passcode to.
          properties:
            phone_number:
              type: string
              pattern: '^\+[1-9]\d{0,4}\d{2,14}$'
              example: '+1234567890'
              description: A phone number to send a passcode to.
          required:
            - phone_number
        kba_verification:
          type: object
          description: Sets the KBA verification.
          properties:
            time_limit_sec:
              type: integer
              example: 120
            score_threshold:
              type: integer
              example: 80
            max_attempts_count:
              type: integer
              example: 2
        id_verification:
          type: object
          description: Sets the ID verification.
          properties:
            enabled:
              type: boolean
              example: true
    RecipientRedirect:
      type: object
      properties:
        is_enabled:
          type: boolean
          default: false
        url:
          type: string
          nullable: true
          default: null
          example: 'https://example.com'
          description: A URL to redirect to after the document is signed.
      required:
        - is_enabled
        - url
    RecipientDeliveryMethods:
      type: object
      nullable: true
      properties:
        email:
          type: boolean
          default: true
        sms:
          type: boolean
          default: false
    CreateWorkspaceRequest:
      type: object
      properties:
        name:
          type: string
          example: A new workspace
          description: A name for the new workspace.
      required:
        - name
    CreateWorkspaceResponse:
      type: object
      properties:
        id:
          type: string
          example: iMymdDd9XFD3HyxP5VD67Q
        name:
          type: string
          example: A new workspace
    CreateUserRequest:
      type: object
      properties:
        user:
          type: object
          description: User info
          properties:
            email:
              type: string
              example: email@example.com
            first_name:
              type: string
              example: John
            last_name:
              type: string
              example: Doe
            phone_number:
              type: string
              example: '+14842634627'
        workspaces:
          type: array
          description: Info for adding a user to a workspace(s)
          items:
            type: object
            properties:
              workspace_id:
                type: string
                example: 2eWSKSvVqmuVCnuUK3iWwD
              role:
                type: string
                enum:
                  - Admin
                  - Manager
                  - Member
                  - Collaborator
        license:
          type: string
          enum:
            - Full
            - eSign
            - Read-only
            - Creator
            - Guest
      required:
        - user
        - license
        - workspaces
    CreateUserResponse:
      type: object
      properties:
        user_id:
          type: string
          example: iMymdDd9XFD3HyxP5VD67Q
        workspaces:
          type: array
          items:
            type: object
            properties:
              workspace_id:
                type: string
              role:
                type: string
              member_id:
                type: string
    AddMemberRequest:
      type: object
      properties:
        user_id:
          type: string
          example: 2eWSKSvVqmuVCnuUK3iWwD
          description: User id.
        role:
          type: string
          description: Role for a member.
          enum:
            - Admin
            - Manager
            - Member
            - Collaborator
      required:
        - user_id
        - role
    AddMemberResponse:
      type: object
      properties:
        member_id:
          type: string
          example: iMymdDd9XFD3HyxP5VD67Q
        workspace_id:
          type: string
          example: 2eWSKSvVqmuVCnuUK3iWwD
        role:
          type: string
          enum:
            - Admin
            - Manager
            - Member
            - Collaborator
        email:
          type: string
          example: email@example.com
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
    ListUsersResponse:
      type: object
      properties:
        total:
          type: integer
          description: A number of users
        results:
          type: array
          items:
            type: object
            properties:
              user_id:
                type: string
                description: A unique identifier of the user in the organization.
                example: ajnN7eGutJZsRKjQrNuPkh
              email:
                type: string
                description: A user's email address.
                example: josh@example.com
              first_name:
                type: string
                description: A user's first name.
                example: Josh
              last_name:
                type: string
                description: A user's last name.
                example: Doe
              phone_number:
                type: string
                description: A user's phone number.
                example: '+14842634627'
              license:
                type: string
                description: A user's license in the organization.
                example: Full
              is_organization_owner:
                type: boolean
              workspaces:
                type: array
                items:
                  type: object
                  properties:
                    role:
                      type: string
                      description: A user's role in workspace.
                      example: Admin
                    workspace_id:
                      type: string
                      description: A user's workspace.
                      example: fERpqZdFaF9dHVAeVxPFaV
                    membership_id:
                      type: string
                      description: A user's membership id in workspace.
                      example: vibuun3DXG8QDDLfXm27Ne
    ListWorkspacesResponse:
      type: object
      properties:
        total:
          type: integer
          description: A number of workspaces
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: A unique identifier of a workspace in a organization
                example: ajnN7eGutJZsRKjQrNuPkh
              name:
                type: string
                description: A workspace's name
                example: Test workspace
              date_created:
                type: string
                description: A workspace's date creation
                example: '2021-06-17T15:51:13.226974Z'
              owner:
                type: string
                format: email
                description: A owner's email address
                example: josh@example.com
    ProductCatalogItemRequest:
      type: object
      properties:
        title:
          type: string
        category_id:
          type: string
          nullable: true
        sku:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        type:
          type: string
          default: regular
          enum:
            - regular
            - bundle
        bundle_items:
          type: array
          nullable: true
          items:
            type: object
            properties:
              quantity:
                type: integer
              item_or_uuid:
                oneOf:
                  - type: string
                  - type: object
                    properties:
                      uuid:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                        nullable: true
                      image_url:
                        type: string
                        nullable: true
                      images:
                        type: array
                        nullable: true
                        items:
                          type: object
                          properties:
                            is_main:
                              type: boolean
                              nullable: true
                            order:
                              type: number
                            src:
                              type: string
                      price_configuration:
                        $ref: '#/components/schemas/ProductCatalogItemPriceConfiguration'
        images:
          type: array
          nullable: true
          items:
            type: object
            properties:
              is_main:
                type: boolean
              order:
                type: number
              src:
                type: string
        custom_fields:
          type: array
          nullable: true
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
        price_configuration:
          $ref: '#/components/schemas/ProductCatalogItemPriceConfiguration'
      required:
        - title
        - price_configuration
    ProductCatalogItemResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        title:
          type: string
        date_created:
          type: string
          format: date-time
        date_modified:
          type: string
          format: date-time
          nullable: true
        created_by:
          type: string
        modified_by:
          type: string
          nullable: true
        category_id:
          type: string
          format: uuid
          nullable: true
        category_name:
          type: string
          nullable: true
        type:
          type: string
          default: regular
          enum:
            - regular
            - bundle
        bundle_items:
          type: array
          nullable: true
          items:
            type: object
            properties:
              quantity:
                type: integer
              item:
                anyOf:
                  - type: object
                    properties:
                      uuid:
                        type: string
                      title:
                        type: string
                      sku:
                        type: string
                        nullable: true
                      description:
                        type: string
                        nullable: true
                      image_url:
                        type: string
                        nullable: true
                      images:
                        type: array
                        nullable: true
                        items:
                          type: object
                          properties:
                            is_main:
                              type: boolean
                              nullable: true
                            order:
                              type: number
                            src:
                              type: string
                      price:
                        type: number
                        nullable: true
                      currency:
                        type: string
                  - type: object
                    properties:
                      uuid:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                        nullable: true
                      image_url:
                        type: string
                        nullable: true
                      images:
                        type: array
                        nullable: true
                        items:
                          type: object
                          properties:
                            is_main:
                              type: boolean
                              nullable: true
                            order:
                              type: number
                            src:
                              type: string
                      price:
                        type: number
                        nullable: true
                      currency:
                        type: string
        default_price_configuration:
          allOf:
            - $ref: '#/components/schemas/ProductCatalogItemPriceConfiguration'
            - type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                pricing_method:
                  type: number
        variants:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                format: uuid
              sku:
                type: string
                nullable: true
              description:
                type: string
                nullable: true
              custom_fields:
                type: array
                nullable: true
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                      nullable: true
              images:
                type: array
                nullable: true
                items:
                  type: object
                  properties:
                    is_main:
                      type: boolean
                      nullable: true
                    order:
                      type: number
                    src:
                      type: string
              date_created:
                type: string
                format: date-time
              date_modified:
                type: string
                format: date-time
                nullable: true
              status:
                type: number
              price_configurations:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/ProductCatalogItemPriceConfiguration'
                    - type: object
                      properties:
                        uuid:
                          type: string
                          format: uuid
                        pricing_method:
                          type: number
    ProductCatalogItemPatchRequest:
      type: object
      properties:
        title:
          type: string
        category_id:
          type: string
          nullable: true
        type:
          type: string
          default: regular
          enum:
            - regular
            - bundle
        bundle_items:
          type: array
          nullable: true
          items:
            type: object
            properties:
              quantity:
                type: integer
              item_or_uuid:
                oneOf:
                  - type: string
                  - type: object
                    properties:
                      title:
                        type: string
                      sku:
                        type: string
                        nullable: true
                      description:
                        type: string
                        nullable: true
                      image_url:
                        type: string
                        nullable: true
                      images:
                        type: array
                        nullable: true
                        items:
                          type: object
                          properties:
                            is_main:
                              type: boolean
                              nullable: true
                            order:
                              type: number
                            src:
                              type: string
                      price:
                        type: number
                        nullable: true
                      currency:
                        type: string
        product_variant:
          type: object
          properties:
            sku:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            images:
              type: array
              nullable: true
              items:
                type: object
                properties:
                  is_main:
                    type: boolean
                  order:
                    type: number
                  src:
                    type: string
            custom_fields:
              type: array
              nullable: true
              items:
                type: object
                properties:
                  name:
                    type: string
                  value:
                    type: string
                    nullable: true
            price_configuration:
              $ref: '#/components/schemas/ProductCatalogItemPriceConfiguration'
    ProductCatalogItemPriceConfiguration:
      type: object
      x-examples:
        example-1:
          currency: USD
          price: null
          cost: null
          tiers:
            - value: 9.99
              min_qty: 1
            - value: 8.99
              min_qty: 10
            - value: 5.99
              min_qty: 100
          pricing_method: 1
        example-2:
          currency: USD
          price: 59.99
          cost: 60
          tiers: null
          pricing_method: 0
      properties:
        currency:
          type: string
          example: USD
        price:
          type: number
          example: 59.99
          nullable: true
        cost:
          type: number
          nullable: true
        billing_type:
          type: string
        billing_cycle:
          type: string
          nullable: true
        tiers:
          type: array
          description: only for volume based pricing
          nullable: true
          items:
            type: object
            properties:
              value:
                type: number
                format: float
                minimum: 0
                example: 9.99
              min_qty:
                type: number
                minimum: 1
            required:
              - value
              - min_qty
            x-examples:
              example-1:
                price: 9.99
                min_qty: 1
        pricing_method:
          type: integer
          enum:
            - 0
            - 1
            - 2
      required:
        - currency
        - pricing_method
    DocumentDetailsRecipient:
      title: Recipient
      allOf:
        - type: object
          description: Actor
          properties:
            id:
              type: string
              example: 7kqXgjFejB2toXxjcC5jfZ
            recipient_type:
              type: string
              example: CC
            role:
              type: string
              deprecated: true
              example: ''
            roles:
              type: array
              items:
                type: string
              example:
                - user
            signing_order:
              type: integer
              minimum: 1
              nullable: true
            email:
              type: string
              nullable: true
              example: test@test.com
            has_completed:
              type: boolean
              example: true
        - type: object
          description: Recipient
          properties:
            last_name:
              type: string
              example: Dow
            contact_id:
              type: string
              example: 7kqXgjFejB2toXxjcC5jfZ
            first_name:
              type: string
              example: Jhon
            phone:
              type: string
              nullable: true
              example: '+14842634627'
            delivery_methods:
              $ref: '#/components/schemas/RecipientDeliveryMethods'
            has_completed:
              type: boolean
              example: true
            shared_link:
              type: string
              example: 'https://app.pandadoc.com/document/b7f11ea3c09d1c11208cc122457d4f3a2829d364'
            signature_date:
              type: string
              nullable: true
              example: '2021-10-23T21:07:04.147345Z'
            verification_settings:
              $ref: '#/components/schemas/RecipientVerificationSettings'
            redirect:
              $ref: '#/components/schemas/RecipientRedirect'
            avatar:
              type: string
              nullable: true
              example: 'https://pd-live-media.s3.amazonaws.com/users/000GTSGwJw000L2KZqc000/avatar.jpg'
            type:
              type: string
              example: recipient
              enum:
                - recipient
    DocumentDetailsRecipientGroup:
      title: Recipient Group
      allOf:
        - $ref: '#/components/schemas/DocumentDetailsRecipient/allOf/0'
        - type: object
          description: Recipient Group
          properties:
            name:
              type: string
              example: Group 1
            type:
              type: string
              example: recipient_group
              enum:
                - recipient_group
            members:
              type: array
              items:
                type: object
                description: Recipient Group Member
                properties:
                  id:
                    type: string
                    example: 4b011d86-286b-4f86-b697-90a6ad3f1489
                  first_name:
                    type: string
                    example: Jhon
                  last_name:
                    type: string
                    example: Dow
                  email:
                    type: string
                    nullable: true
                    example: test@test.com
                  shared_link:
                    type: string
                    example: 'https://app.pandadoc.com/document/b7f11ea3c09d1c11208cc122457d4f3a2829d364'
                  avatar:
                    type: string
                    nullable: true
                    example: 'https://pd-live-media.s3.amazonaws.com/users/000GTSGwJw000L2KZqc000/avatar.jpg'
                  signature_date:
                    type: string
                    nullable: true
                    example: '2021-10-23T21:07:04.147345Z'
    CreateTemplateRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the template.
          example: Template name example
        folder_uuid:
          type: string
          description: The ID of the folder where the created template should be stored.
          example: EE8yUNg5HztqVAuH85He8V
        owner:
          type: object
          description: You can set an owner of a template as an `email` or `membership_id`.
          properties:
            membership_id:
              type: string
              example: QMDSzwabfFzTgjW6KijHyu
            email:
              type: string
              format: email
              example: john.doe@example.com
        metadata:
          type: object
          nullable: true
          description: You can pass arbitrary data in the key-value format to associate custom information with a template. This information is returned in any API requests for the template details by id.
          example:
            my_favorite_pet: Panda
        tokens:
          type: array
          description: Create or initialize multiple CUSTOM variables with their values using tokens/values list. Template's predefined variables are read-only. Any attempts to do so will be ignored.
          items:
            type: object
            properties:
              name:
                type: string
                example: Favorite.Pet
              value:
                type: string
                example: Panda
            required:
              - name
              - value
          example:
            - name: Favorite.Pet
              value: Panda
    CreateTemplateFromUrlRequest:
      allOf:
        - type: object
          properties:
            url:
              type: string
              example: 'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf'
              description: Secure (HTTPS) and publicly accessible URL to the PDF document.
        - $ref: '#/components/schemas/CreateTemplateRequest'
    TemplateStatusResponse:
      type: object
      properties:
        id:
          type: string
          example: SkXXMTBsLB5TLPagPTm5yC
        name:
          type: string
          example: API Sample PandaDoc Template
        date_created:
          type: string
          example: '2021-03-10T07:28:47.440256Z'
        date_modified:
          type: string
          example: '2021-03-10T07:28:47.442256Z'
        version:
          type: string
          example: '2'
        status:
          type: string
          enum:
            - template.PROCESSED
            - template.UPLOADED
            - template.ERROR
    ContentLibraryResponse:
      type: object
      properties:
        id:
          type: string
          example: iMymdDd9XFD3HyxP5VD67Q
        name:
          type: string
          example: Sample CLI
        date_created:
          type: string
          format: date-time
          example: '2021-06-17T15:51:13.226974Z'
        date_modified:
          type: string
          format: date-time
          example: '2021-06-17T15:51:13.326974Z'
        version:
          type: string
          example: '2'
        status:
          type: string
          enum:
            - cli.UPLOADED
            - cli.PROCESSED
            - cli.ERROR
    EditingSessionRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email of the user to create the editing session for
          example: john.doe@pandadoc.com
        lifetime:
          type: integer
          format: int32
          description: Lifetime of the E-Token in seconds.
          example: 3600
          minimum: 60
          maximum: 86400
          default: 3600
      required:
        - email
    BaseEditingSessionResponse:
      type: object
      properties:
        id:
          type: string
          description: ID of the editing session
          example: ce9825e5-3210-4a8f-1230-f32b643295d2
        email:
          type: string
          format: email
          description: Email of the user to create the editing session for
          example: eric@pandadoc.com
        expires_at:
          type: string
          format: date-time
          description: Date and time when the editing session expires
          example: '2025-01-10T00:09:09.612651Z'
        key:
          type: string
          description: E-Token value
          example: 985b695b56eaaa571e9bb8e522afd5bd335c32d7
  responses:
    '401':
      description: Authentication error
      content:
        application/json:
          schema:
            properties:
              type:
                type: string
                example: authentication_error
              detail:
                type: string
                example: Authentication credentials were not provided.
    '403':
      description: Permission error
      content:
        application/json:
          schema:
            properties:
              type:
                type: string
                example: permission_error
              detail:
                type: string
                example: You do not have permission to perform this action.
    '404':
      description: Not found
      content:
        application/json:
          schema:
            properties:
              type:
                type: string
                example: request_error
              detail:
                type: string
                example: Not found
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
                example: mXpGsEBHdSFW97zKXq75hm
              status:
                type: string
                example: document.uploaded
              info_message:
                type: string
                example: 'Warning - Document status document.uploaded doesn’t mean that the document already exists - processing happens asynchronously. Please follow the documentation section https://developers.pandadoc.com/reference/new-document'
    '429':
      description: Too Many Requests
      content:
        application/json:
          schema:
            properties:
              type:
                type: string
                example: throttled
              detail:
                type: string
                example: Request was throttled.
    400RequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            properties:
              type:
                type: string
                example: request_error
              detail:
                type: object
                example:
                  count:
                    - A valid integer is required.
                  order_by:
                    - value is not a valid choice.
    400ValidationError:
      description: Bad Request
      content:
        application/json:
          schema:
            properties:
              type:
                type: string
                example: validation_error
              detail:
                type: object
                example:
                  count:
                    - A valid integer is required.
                  order_by:
                    - value is not a valid choice.
  securitySchemes:
    apiKey:
      type: apiKey
      name: Authorization
      in: header
      description: |
        The `Authorization` header must contain the API key. The value should be prefixed with `API-Key` followed by a space and the actual API key.
      x-default: API-Key 3039ba033eb1410caa0a2227158d63c9d6502cd8
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://app.pandadoc.com/oauth2/authorize'
          tokenUrl: 'https://api.pandadoc.com/oauth2/access_token'
          refreshUrl: 'https://api.pandadoc.com/oauth2/access_token'
          scopes:
            read+write: 'Use `read+write` to create, send, delete, and download documents, and `read` to view templates and document details.'
      description: |
        Send the authenticating user to the PandaDoc OAuth2 request URL. We recommend a button or a link titled
        "Connect to PandaDoc" if you are connecting users from a custom application. Users will see the "Authorize Application" screen.
        When the user clicks "Authorize", PandaDoc redirects the user back to your site with an authorization code inside the URL.

        https://app.pandadoc.com/oauth2/authorize?client_id={client_id}&redirect_uri={redirect_uri}&scope=read+write&response_type=code

        `client_id` and `redirect_uri` values should match your application settings.
security:
  - apiKey: []
  - oauth2: []